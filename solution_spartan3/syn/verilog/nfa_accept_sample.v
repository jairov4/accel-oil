// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2013.4
// Copyright (C) 2013 Xilinx Inc. All rights reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module nfa_accept_sample (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        nfa_initials_buckets_req_din,
        nfa_initials_buckets_req_full_n,
        nfa_initials_buckets_req_write,
        nfa_initials_buckets_rsp_empty_n,
        nfa_initials_buckets_rsp_read,
        nfa_initials_buckets_address,
        nfa_initials_buckets_datain,
        nfa_initials_buckets_dataout,
        nfa_initials_buckets_size,
        nfa_finals_buckets_req_din,
        nfa_finals_buckets_req_full_n,
        nfa_finals_buckets_req_write,
        nfa_finals_buckets_rsp_empty_n,
        nfa_finals_buckets_rsp_read,
        nfa_finals_buckets_address,
        nfa_finals_buckets_datain,
        nfa_finals_buckets_dataout,
        nfa_finals_buckets_size,
        nfa_forward_buckets_req_din,
        nfa_forward_buckets_req_full_n,
        nfa_forward_buckets_req_write,
        nfa_forward_buckets_rsp_empty_n,
        nfa_forward_buckets_rsp_read,
        nfa_forward_buckets_address,
        nfa_forward_buckets_datain,
        nfa_forward_buckets_dataout,
        nfa_forward_buckets_size,
        nfa_symbols,
        sample_req_din,
        sample_req_full_n,
        sample_req_write,
        sample_rsp_empty_n,
        sample_rsp_read,
        sample_address,
        sample_datain,
        sample_dataout,
        sample_size,
        empty,
        length_r,
        ap_return
);

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output   nfa_initials_buckets_req_din;
input   nfa_initials_buckets_req_full_n;
output   nfa_initials_buckets_req_write;
input   nfa_initials_buckets_rsp_empty_n;
output   nfa_initials_buckets_rsp_read;
output  [31:0] nfa_initials_buckets_address;
input  [31:0] nfa_initials_buckets_datain;
output  [31:0] nfa_initials_buckets_dataout;
output  [31:0] nfa_initials_buckets_size;
output   nfa_finals_buckets_req_din;
input   nfa_finals_buckets_req_full_n;
output   nfa_finals_buckets_req_write;
input   nfa_finals_buckets_rsp_empty_n;
output   nfa_finals_buckets_rsp_read;
output  [31:0] nfa_finals_buckets_address;
input  [31:0] nfa_finals_buckets_datain;
output  [31:0] nfa_finals_buckets_dataout;
output  [31:0] nfa_finals_buckets_size;
output   nfa_forward_buckets_req_din;
input   nfa_forward_buckets_req_full_n;
output   nfa_forward_buckets_req_write;
input   nfa_forward_buckets_rsp_empty_n;
output   nfa_forward_buckets_rsp_read;
output  [31:0] nfa_forward_buckets_address;
input  [31:0] nfa_forward_buckets_datain;
output  [31:0] nfa_forward_buckets_dataout;
output  [31:0] nfa_forward_buckets_size;
input  [7:0] nfa_symbols;
output   sample_req_din;
input   sample_req_full_n;
output   sample_req_write;
input   sample_rsp_empty_n;
output   sample_rsp_read;
output  [31:0] sample_address;
input  [7:0] sample_datain;
output  [7:0] sample_dataout;
output  [31:0] sample_size;
input  [31:0] empty;
input  [15:0] length_r;
output  [0:0] ap_return;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg nfa_forward_buckets_req_write;
reg nfa_forward_buckets_rsp_read;
reg[31:0] nfa_forward_buckets_address;
reg sample_req_write;
reg sample_rsp_read;
reg[0:0] ap_return;
reg   [5:0] ap_CS_fsm = 6'b000000;
reg   [31:0] reg_374;
reg   [31:0] current_buckets_0_reg_577;
reg   [31:0] current_buckets_1_reg_582;
wire   [0:0] tmp_s_fu_397_p2;
reg   [0:0] tmp_s_reg_597;
wire   [15:0] grp_fu_402_p2;
reg   [15:0] i_1_reg_601;
reg   [31:0] sample_addr_1_reg_606;
wire   [0:0] tmp_17_i_fu_420_p2;
reg   [0:0] tmp_17_i_reg_612;
wire   [31:0] grp_fu_414_p2;
reg   [31:0] p_rec_reg_616;
reg   [7:0] sym_reg_621;
wire   [0:0] tmp_17_1_i_fu_426_p2;
reg   [0:0] tmp_17_1_i_reg_626;
wire   [4:0] grp_p_bsf32_hw_fu_368_ap_return;
reg   [4:0] r_bit_reg_630;
wire   [1:0] agg_result_bucket_index_0_lcssa4_i_cast_cast_fu_432_p1;
wire   [7:0] j_bucket_index1_ph_cast_fu_436_p1;
wire   [7:0] j_bit1_ph_cast_fu_440_p1;
wire   [13:0] tmp_7_i_cast_fu_444_p1;
reg   [13:0] tmp_7_i_cast_reg_650;
wire   [0:0] j_end_phi_fu_312_p4;
wire   [5:0] grp_fu_463_p2;
reg   [5:0] state_reg_665;
wire   [13:0] grp_fu_476_p2;
reg   [13:0] tmp_6_i_reg_680;
reg   [7:0] j_bit_reg_685;
reg   [7:0] j_bucket_index_reg_690;
reg   [31:0] j_bucket_reg_695;
reg   [0:0] p_s_reg_700;
wire   [13:0] grp_fu_482_p2;
reg   [13:0] offset_i_reg_705;
wire   [31:0] next_buckets_0_1_fu_538_p2;
reg   [31:0] next_buckets_0_1_reg_721;
wire   [31:0] next_buckets_1_1_fu_544_p2;
reg   [31:0] tmp_buckets_0_reg_731;
reg   [31:0] tmp_buckets_1_reg_736;
wire   [31:0] current_buckets_0_1_fu_558_p2;
reg   [31:0] current_buckets_0_1_reg_741;
wire   [31:0] current_buckets_1_1_fu_563_p2;
reg   [31:0] current_buckets_1_1_reg_746;
wire   [31:0] tmp_1_fu_568_p2;
reg   [31:0] tmp_1_reg_751;
wire   [0:0] tmp_2_fu_572_p2;
reg   [0:0] tmp_2_reg_756;
wire   [31:0] grp_bitset_next_fu_344_p_read;
wire   [7:0] grp_bitset_next_fu_344_r_bit;
wire   [7:0] grp_bitset_next_fu_344_r_bucket_index;
wire   [31:0] grp_bitset_next_fu_344_r_bucket;
wire   [7:0] grp_bitset_next_fu_344_ap_return_0;
wire   [7:0] grp_bitset_next_fu_344_ap_return_1;
wire   [31:0] grp_bitset_next_fu_344_ap_return_2;
wire   [0:0] grp_bitset_next_fu_344_ap_return_3;
reg    grp_bitset_next_fu_344_ap_ce;
reg    grp_nfa_get_initials_fu_356_ap_start;
wire    grp_nfa_get_initials_fu_356_ap_done;
wire    grp_nfa_get_initials_fu_356_ap_idle;
wire    grp_nfa_get_initials_fu_356_ap_ready;
wire    grp_nfa_get_initials_fu_356_nfa_initials_buckets_req_din;
wire    grp_nfa_get_initials_fu_356_nfa_initials_buckets_req_full_n;
wire    grp_nfa_get_initials_fu_356_nfa_initials_buckets_req_write;
wire    grp_nfa_get_initials_fu_356_nfa_initials_buckets_rsp_empty_n;
wire    grp_nfa_get_initials_fu_356_nfa_initials_buckets_rsp_read;
wire   [31:0] grp_nfa_get_initials_fu_356_nfa_initials_buckets_address;
wire   [31:0] grp_nfa_get_initials_fu_356_nfa_initials_buckets_datain;
wire   [31:0] grp_nfa_get_initials_fu_356_nfa_initials_buckets_dataout;
wire   [31:0] grp_nfa_get_initials_fu_356_nfa_initials_buckets_size;
wire    grp_nfa_get_initials_fu_356_ap_ce;
wire   [31:0] grp_nfa_get_initials_fu_356_ap_return_0;
wire   [31:0] grp_nfa_get_initials_fu_356_ap_return_1;
wire    grp_nfa_get_finals_fu_362_ap_start;
wire    grp_nfa_get_finals_fu_362_ap_done;
wire    grp_nfa_get_finals_fu_362_ap_idle;
wire    grp_nfa_get_finals_fu_362_ap_ready;
wire    grp_nfa_get_finals_fu_362_nfa_finals_buckets_req_din;
wire    grp_nfa_get_finals_fu_362_nfa_finals_buckets_req_full_n;
wire    grp_nfa_get_finals_fu_362_nfa_finals_buckets_req_write;
wire    grp_nfa_get_finals_fu_362_nfa_finals_buckets_rsp_empty_n;
wire    grp_nfa_get_finals_fu_362_nfa_finals_buckets_rsp_read;
wire   [31:0] grp_nfa_get_finals_fu_362_nfa_finals_buckets_address;
wire   [31:0] grp_nfa_get_finals_fu_362_nfa_finals_buckets_datain;
wire   [31:0] grp_nfa_get_finals_fu_362_nfa_finals_buckets_dataout;
wire   [31:0] grp_nfa_get_finals_fu_362_nfa_finals_buckets_size;
wire    grp_nfa_get_finals_fu_362_ap_ce;
wire   [31:0] grp_nfa_get_finals_fu_362_ap_return_0;
wire   [31:0] grp_nfa_get_finals_fu_362_ap_return_1;
wire   [31:0] grp_p_bsf32_hw_fu_368_bus_r;
reg    grp_p_bsf32_hw_fu_368_ap_ce;
reg   [15:0] i_reg_134;
wire   [0:0] any_phi_fu_324_p4;
reg   [31:0] p_01_rec_reg_146;
reg   [31:0] next_buckets_1_reg_158;
reg   [31:0] next_buckets_0_reg_168;
reg   [31:0] bus_assign_reg_178;
reg   [0:0] agg_result_bucket_index_0_lcssa4_i_reg_190;
reg   [31:0] j_bucket1_ph_reg_203;
reg   [1:0] j_bucket_index1_ph_reg_216;
reg   [4:0] j_bit1_ph_reg_227;
reg   [0:0] j_end_ph_reg_238;
reg   [31:0] tmp_buckets_1_3_reg_252;
reg   [31:0] tmp_buckets_0_3_reg_265;
reg   [31:0] j_bucket1_reg_278;
reg   [7:0] j_bucket_index1_reg_289;
reg   [7:0] j_bit1_reg_299;
reg   [0:0] j_end_reg_309;
reg   [0:0] any_reg_319;
reg   [0:0] p_0_reg_332;
reg   [5:0] ap_NS_fsm;
reg    grp_nfa_get_finals_fu_362_ap_start_ap_start_reg = 1'b0;
wire   [31:0] grp_fu_392_p2;
wire   [31:0] tmp_4_i_cast_fu_509_p1;
wire   [31:0] tmp_8_i_cast_fu_527_p1;
wire   [31:0] grp_fu_392_p0;
wire   [31:0] grp_fu_392_p1;
wire   [15:0] grp_fu_402_p0;
wire   [15:0] grp_fu_402_p1;
wire   [31:0] grp_fu_414_p0;
wire   [31:0] grp_fu_414_p1;
wire   [0:0] tmp_5_fu_447_p1;
wire   [5:0] grp_fu_463_p0;
wire   [5:0] grp_fu_463_p1;
wire   [7:0] grp_fu_476_p0;
wire   [5:0] grp_fu_476_p1;
wire   [13:0] grp_fu_482_p0;
wire   [13:0] grp_fu_482_p1;
wire   [14:0] tmp_4_i_fu_502_p3;
wire   [14:0] tmp_8_i_fu_520_p3;
wire    grp_fu_392_ce;
wire    grp_fu_402_ce;
reg    grp_fu_414_ce;
wire    grp_fu_463_ce;
wire    grp_fu_476_ce;
wire    grp_fu_482_ce;
reg   [0:0] ap_return_preg = 1'b0;
wire   [13:0] grp_fu_476_p00;
wire   [13:0] grp_fu_476_p10;
parameter    ap_const_logic_1 = 1'b1;
parameter    ap_const_logic_0 = 1'b0;
parameter    ap_ST_st1_fsm_0 = 6'b000000;
parameter    ap_ST_st2_fsm_1 = 6'b1;
parameter    ap_ST_st3_fsm_2 = 6'b10;
parameter    ap_ST_st4_fsm_3 = 6'b11;
parameter    ap_ST_st5_fsm_4 = 6'b100;
parameter    ap_ST_st6_fsm_5 = 6'b101;
parameter    ap_ST_st7_fsm_6 = 6'b110;
parameter    ap_ST_st8_fsm_7 = 6'b111;
parameter    ap_ST_st9_fsm_8 = 6'b1000;
parameter    ap_ST_st10_fsm_9 = 6'b1001;
parameter    ap_ST_st11_fsm_10 = 6'b1010;
parameter    ap_ST_st12_fsm_11 = 6'b1011;
parameter    ap_ST_st13_fsm_12 = 6'b1100;
parameter    ap_ST_st14_fsm_13 = 6'b1101;
parameter    ap_ST_st15_fsm_14 = 6'b1110;
parameter    ap_ST_st16_fsm_15 = 6'b1111;
parameter    ap_ST_st17_fsm_16 = 6'b10000;
parameter    ap_ST_st18_fsm_17 = 6'b10001;
parameter    ap_ST_st19_fsm_18 = 6'b10010;
parameter    ap_ST_st20_fsm_19 = 6'b10011;
parameter    ap_ST_st21_fsm_20 = 6'b10100;
parameter    ap_ST_st22_fsm_21 = 6'b10101;
parameter    ap_ST_st23_fsm_22 = 6'b10110;
parameter    ap_ST_st24_fsm_23 = 6'b10111;
parameter    ap_ST_st25_fsm_24 = 6'b11000;
parameter    ap_ST_st26_fsm_25 = 6'b11001;
parameter    ap_ST_st27_fsm_26 = 6'b11010;
parameter    ap_ST_st28_fsm_27 = 6'b11011;
parameter    ap_ST_st29_fsm_28 = 6'b11100;
parameter    ap_ST_st30_fsm_29 = 6'b11101;
parameter    ap_ST_st31_fsm_30 = 6'b11110;
parameter    ap_ST_st32_fsm_31 = 6'b11111;
parameter    ap_ST_st33_fsm_32 = 6'b100000;
parameter    ap_ST_st34_fsm_33 = 6'b100001;
parameter    ap_ST_st35_fsm_34 = 6'b100010;
parameter    ap_ST_st36_fsm_35 = 6'b100011;
parameter    ap_ST_st37_fsm_36 = 6'b100100;
parameter    ap_ST_st38_fsm_37 = 6'b100101;
parameter    ap_ST_st39_fsm_38 = 6'b100110;
parameter    ap_ST_st40_fsm_39 = 6'b100111;
parameter    ap_ST_st41_fsm_40 = 6'b101000;
parameter    ap_ST_st42_fsm_41 = 6'b101001;
parameter    ap_ST_st43_fsm_42 = 6'b101010;
parameter    ap_ST_st44_fsm_43 = 6'b101011;
parameter    ap_ST_st45_fsm_44 = 6'b101100;
parameter    ap_ST_st46_fsm_45 = 6'b101101;
parameter    ap_ST_st47_fsm_46 = 6'b101110;
parameter    ap_ST_st48_fsm_47 = 6'b101111;
parameter    ap_ST_st49_fsm_48 = 6'b110000;
parameter    ap_ST_st50_fsm_49 = 6'b110001;
parameter    ap_const_lv1_0 = 1'b0;
parameter    ap_const_lv16_0 = 16'b0000000000000000;
parameter    ap_const_lv32_0 = 32'b00000000000000000000000000000000;
parameter    ap_const_lv1_1 = 1'b1;
parameter    ap_const_lv2_2 = 2'b10;
parameter    ap_const_lv32_1 = 32'b1;
parameter    ap_const_lv16_1 = 16'b1;
parameter    ap_const_lv5_0 = 5'b00000;
parameter    ap_const_lv8_0 = 8'b00000000;
parameter    ap_true = 1'b1;


bitset_next grp_bitset_next_fu_344(
    .ap_clk( ap_clk ),
    .ap_rst( ap_rst ),
    .p_read( grp_bitset_next_fu_344_p_read ),
    .r_bit( grp_bitset_next_fu_344_r_bit ),
    .r_bucket_index( grp_bitset_next_fu_344_r_bucket_index ),
    .r_bucket( grp_bitset_next_fu_344_r_bucket ),
    .ap_return_0( grp_bitset_next_fu_344_ap_return_0 ),
    .ap_return_1( grp_bitset_next_fu_344_ap_return_1 ),
    .ap_return_2( grp_bitset_next_fu_344_ap_return_2 ),
    .ap_return_3( grp_bitset_next_fu_344_ap_return_3 ),
    .ap_ce( grp_bitset_next_fu_344_ap_ce )
);

nfa_get_initials grp_nfa_get_initials_fu_356(
    .ap_clk( ap_clk ),
    .ap_rst( ap_rst ),
    .ap_start( grp_nfa_get_initials_fu_356_ap_start ),
    .ap_done( grp_nfa_get_initials_fu_356_ap_done ),
    .ap_idle( grp_nfa_get_initials_fu_356_ap_idle ),
    .ap_ready( grp_nfa_get_initials_fu_356_ap_ready ),
    .nfa_initials_buckets_req_din( grp_nfa_get_initials_fu_356_nfa_initials_buckets_req_din ),
    .nfa_initials_buckets_req_full_n( grp_nfa_get_initials_fu_356_nfa_initials_buckets_req_full_n ),
    .nfa_initials_buckets_req_write( grp_nfa_get_initials_fu_356_nfa_initials_buckets_req_write ),
    .nfa_initials_buckets_rsp_empty_n( grp_nfa_get_initials_fu_356_nfa_initials_buckets_rsp_empty_n ),
    .nfa_initials_buckets_rsp_read( grp_nfa_get_initials_fu_356_nfa_initials_buckets_rsp_read ),
    .nfa_initials_buckets_address( grp_nfa_get_initials_fu_356_nfa_initials_buckets_address ),
    .nfa_initials_buckets_datain( grp_nfa_get_initials_fu_356_nfa_initials_buckets_datain ),
    .nfa_initials_buckets_dataout( grp_nfa_get_initials_fu_356_nfa_initials_buckets_dataout ),
    .nfa_initials_buckets_size( grp_nfa_get_initials_fu_356_nfa_initials_buckets_size ),
    .ap_ce( grp_nfa_get_initials_fu_356_ap_ce ),
    .ap_return_0( grp_nfa_get_initials_fu_356_ap_return_0 ),
    .ap_return_1( grp_nfa_get_initials_fu_356_ap_return_1 )
);

nfa_get_finals grp_nfa_get_finals_fu_362(
    .ap_clk( ap_clk ),
    .ap_rst( ap_rst ),
    .ap_start( grp_nfa_get_finals_fu_362_ap_start ),
    .ap_done( grp_nfa_get_finals_fu_362_ap_done ),
    .ap_idle( grp_nfa_get_finals_fu_362_ap_idle ),
    .ap_ready( grp_nfa_get_finals_fu_362_ap_ready ),
    .nfa_finals_buckets_req_din( grp_nfa_get_finals_fu_362_nfa_finals_buckets_req_din ),
    .nfa_finals_buckets_req_full_n( grp_nfa_get_finals_fu_362_nfa_finals_buckets_req_full_n ),
    .nfa_finals_buckets_req_write( grp_nfa_get_finals_fu_362_nfa_finals_buckets_req_write ),
    .nfa_finals_buckets_rsp_empty_n( grp_nfa_get_finals_fu_362_nfa_finals_buckets_rsp_empty_n ),
    .nfa_finals_buckets_rsp_read( grp_nfa_get_finals_fu_362_nfa_finals_buckets_rsp_read ),
    .nfa_finals_buckets_address( grp_nfa_get_finals_fu_362_nfa_finals_buckets_address ),
    .nfa_finals_buckets_datain( grp_nfa_get_finals_fu_362_nfa_finals_buckets_datain ),
    .nfa_finals_buckets_dataout( grp_nfa_get_finals_fu_362_nfa_finals_buckets_dataout ),
    .nfa_finals_buckets_size( grp_nfa_get_finals_fu_362_nfa_finals_buckets_size ),
    .ap_ce( grp_nfa_get_finals_fu_362_ap_ce ),
    .ap_return_0( grp_nfa_get_finals_fu_362_ap_return_0 ),
    .ap_return_1( grp_nfa_get_finals_fu_362_ap_return_1 )
);

p_bsf32_hw grp_p_bsf32_hw_fu_368(
    .ap_clk( ap_clk ),
    .ap_rst( ap_rst ),
    .bus_r( grp_p_bsf32_hw_fu_368_bus_r ),
    .ap_return( grp_p_bsf32_hw_fu_368_ap_return ),
    .ap_ce( grp_p_bsf32_hw_fu_368_ap_ce )
);

nfa_accept_samples_generic_hw_add_32ns_32ns_32_8 #(
    .ID( 17 ),
    .NUM_STAGE( 8 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
nfa_accept_samples_generic_hw_add_32ns_32ns_32_8_U17(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .din0( grp_fu_392_p0 ),
    .din1( grp_fu_392_p1 ),
    .ce( grp_fu_392_ce ),
    .dout( grp_fu_392_p2 )
);

nfa_accept_samples_generic_hw_add_16ns_16ns_16_4 #(
    .ID( 18 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
nfa_accept_samples_generic_hw_add_16ns_16ns_16_4_U18(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .din0( grp_fu_402_p0 ),
    .din1( grp_fu_402_p1 ),
    .ce( grp_fu_402_ce ),
    .dout( grp_fu_402_p2 )
);

nfa_accept_samples_generic_hw_add_32ns_32ns_32_8 #(
    .ID( 19 ),
    .NUM_STAGE( 8 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
nfa_accept_samples_generic_hw_add_32ns_32ns_32_8_U19(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .din0( grp_fu_414_p0 ),
    .din1( grp_fu_414_p1 ),
    .ce( grp_fu_414_ce ),
    .dout( grp_fu_414_p2 )
);

nfa_accept_samples_generic_hw_add_6ns_6ns_6_2 #(
    .ID( 20 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 6 ),
    .din1_WIDTH( 6 ),
    .dout_WIDTH( 6 ))
nfa_accept_samples_generic_hw_add_6ns_6ns_6_2_U20(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .din0( grp_fu_463_p0 ),
    .din1( grp_fu_463_p1 ),
    .ce( grp_fu_463_ce ),
    .dout( grp_fu_463_p2 )
);

nfa_accept_samples_generic_hw_mul_8ns_6ns_14_9 #(
    .ID( 21 ),
    .NUM_STAGE( 9 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 6 ),
    .dout_WIDTH( 14 ))
nfa_accept_samples_generic_hw_mul_8ns_6ns_14_9_U21(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .din0( grp_fu_476_p0 ),
    .din1( grp_fu_476_p1 ),
    .ce( grp_fu_476_ce ),
    .dout( grp_fu_476_p2 )
);

nfa_accept_samples_generic_hw_add_14ns_14ns_14_4 #(
    .ID( 22 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 14 ),
    .din1_WIDTH( 14 ),
    .dout_WIDTH( 14 ))
nfa_accept_samples_generic_hw_add_14ns_14ns_14_4_U22(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .din0( grp_fu_482_p0 ),
    .din1( grp_fu_482_p1 ),
    .ce( grp_fu_482_ce ),
    .dout( grp_fu_482_p2 )
);



/// the current state (ap_CS_fsm) of the state machine. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_CS_fsm
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_st1_fsm_0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

/// ap_return_preg assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_return_preg
    if (ap_rst == 1'b1) begin
        ap_return_preg <= ap_const_lv1_0;
    end else begin
        if ((ap_ST_st50_fsm_49 == ap_CS_fsm)) begin
            ap_return_preg <= p_0_reg_332;
        end
    end
end

/// grp_nfa_get_finals_fu_362_ap_start_ap_start_reg assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_grp_nfa_get_finals_fu_362_ap_start_ap_start_reg
    if (ap_rst == 1'b1) begin
        grp_nfa_get_finals_fu_362_ap_start_ap_start_reg <= ap_const_logic_0;
    end else begin
        if (((ap_ST_st12_fsm_11 == ap_NS_fsm) & (ap_ST_st11_fsm_10 == ap_CS_fsm) & (tmp_s_reg_597 == ap_const_lv1_0))) begin
            grp_nfa_get_finals_fu_362_ap_start_ap_start_reg <= ap_const_logic_1;
        end else if ((ap_const_logic_1 == grp_nfa_get_finals_fu_362_ap_ready)) begin
            grp_nfa_get_finals_fu_362_ap_start_ap_start_reg <= ap_const_logic_0;
        end
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_ST_st20_fsm_19 == ap_CS_fsm) & (tmp_17_1_i_reg_626 == ap_const_lv1_0))) begin
        agg_result_bucket_index_0_lcssa4_i_reg_190 <= ap_const_lv1_1;
    end else if (((ap_ST_st19_fsm_18 == ap_CS_fsm) & ~(sample_rsp_empty_n == ap_const_logic_0) & (tmp_17_i_reg_612 == ap_const_lv1_0))) begin
        agg_result_bucket_index_0_lcssa4_i_reg_190 <= ap_const_lv1_0;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_ST_st24_fsm_23 == ap_CS_fsm)) begin
        any_reg_319 <= ap_const_lv1_0;
    end else if ((ap_ST_st43_fsm_42 == ap_CS_fsm)) begin
        any_reg_319 <= ap_const_lv1_1;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_ST_st20_fsm_19 == ap_CS_fsm) & (tmp_17_1_i_reg_626 == ap_const_lv1_0))) begin
        bus_assign_reg_178 <= next_buckets_1_reg_158;
    end else if (((ap_ST_st19_fsm_18 == ap_CS_fsm) & ~(sample_rsp_empty_n == ap_const_logic_0) & (tmp_17_i_reg_612 == ap_const_lv1_0))) begin
        bus_assign_reg_178 <= next_buckets_0_reg_168;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_ST_st25_fsm_24 == ap_CS_fsm) & ~(ap_const_lv1_0 == j_end_phi_fu_312_p4) & ~(ap_const_lv1_0 == any_phi_fu_324_p4))) begin
        i_reg_134 <= i_1_reg_601;
    end else if ((ap_ST_st4_fsm_3 == ap_CS_fsm)) begin
        i_reg_134 <= ap_const_lv16_0;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_ST_st24_fsm_23 == ap_CS_fsm)) begin
        j_bit1_reg_299 <= j_bit1_ph_cast_fu_440_p1;
    end else if ((ap_ST_st43_fsm_42 == ap_CS_fsm)) begin
        j_bit1_reg_299 <= j_bit_reg_685;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_ST_st23_fsm_22 == ap_CS_fsm)) begin
        j_bucket1_ph_reg_203 <= bus_assign_reg_178;
    end else if (((ap_ST_st20_fsm_19 == ap_CS_fsm) & ~(tmp_17_1_i_reg_626 == ap_const_lv1_0))) begin
        j_bucket1_ph_reg_203 <= ap_const_lv32_0;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_ST_st24_fsm_23 == ap_CS_fsm)) begin
        j_bucket1_reg_278 <= j_bucket1_ph_reg_203;
    end else if ((ap_ST_st43_fsm_42 == ap_CS_fsm)) begin
        j_bucket1_reg_278 <= j_bucket_reg_695;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_ST_st23_fsm_22 == ap_CS_fsm)) begin
        j_bucket_index1_ph_reg_216 <= agg_result_bucket_index_0_lcssa4_i_cast_cast_fu_432_p1;
    end else if (((ap_ST_st20_fsm_19 == ap_CS_fsm) & ~(tmp_17_1_i_reg_626 == ap_const_lv1_0))) begin
        j_bucket_index1_ph_reg_216 <= ap_const_lv2_2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_ST_st24_fsm_23 == ap_CS_fsm)) begin
        j_bucket_index1_reg_289 <= j_bucket_index1_ph_cast_fu_436_p1;
    end else if ((ap_ST_st43_fsm_42 == ap_CS_fsm)) begin
        j_bucket_index1_reg_289 <= j_bucket_index_reg_690;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_ST_st23_fsm_22 == ap_CS_fsm)) begin
        j_end_ph_reg_238 <= ap_const_lv1_0;
    end else if (((ap_ST_st20_fsm_19 == ap_CS_fsm) & ~(tmp_17_1_i_reg_626 == ap_const_lv1_0))) begin
        j_end_ph_reg_238 <= ap_const_lv1_1;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_ST_st24_fsm_23 == ap_CS_fsm)) begin
        j_end_reg_309 <= j_end_ph_reg_238;
    end else if ((ap_ST_st43_fsm_42 == ap_CS_fsm)) begin
        j_end_reg_309 <= p_s_reg_700;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_ST_st25_fsm_24 == ap_CS_fsm) & ~(ap_const_lv1_0 == j_end_phi_fu_312_p4) & ~(ap_const_lv1_0 == any_phi_fu_324_p4))) begin
        next_buckets_0_reg_168 <= tmp_buckets_0_3_reg_265;
    end else if ((ap_ST_st4_fsm_3 == ap_CS_fsm)) begin
        next_buckets_0_reg_168 <= current_buckets_0_reg_577;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_ST_st25_fsm_24 == ap_CS_fsm) & ~(ap_const_lv1_0 == j_end_phi_fu_312_p4) & ~(ap_const_lv1_0 == any_phi_fu_324_p4))) begin
        next_buckets_1_reg_158 <= tmp_buckets_1_3_reg_252;
    end else if ((ap_ST_st4_fsm_3 == ap_CS_fsm)) begin
        next_buckets_1_reg_158 <= current_buckets_1_reg_582;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_ST_st25_fsm_24 == ap_CS_fsm) & ~(ap_const_lv1_0 == j_end_phi_fu_312_p4) & ~(ap_const_lv1_0 == any_phi_fu_324_p4))) begin
        p_01_rec_reg_146 <= p_rec_reg_616;
    end else if ((ap_ST_st4_fsm_3 == ap_CS_fsm)) begin
        p_01_rec_reg_146 <= ap_const_lv32_0;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_ST_st25_fsm_24 == ap_CS_fsm) & ~(ap_const_lv1_0 == j_end_phi_fu_312_p4) & (ap_const_lv1_0 == any_phi_fu_324_p4))) begin
        p_0_reg_332 <= ap_const_lv1_0;
    end else if ((ap_ST_st49_fsm_48 == ap_CS_fsm)) begin
        p_0_reg_332 <= tmp_2_reg_756;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_ST_st24_fsm_23 == ap_CS_fsm)) begin
        tmp_buckets_0_3_reg_265 <= ap_const_lv32_0;
    end else if ((ap_ST_st43_fsm_42 == ap_CS_fsm)) begin
        tmp_buckets_0_3_reg_265 <= next_buckets_0_1_reg_721;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_ST_st24_fsm_23 == ap_CS_fsm)) begin
        tmp_buckets_1_3_reg_252 <= ap_const_lv32_0;
    end else if ((ap_ST_st43_fsm_42 == ap_CS_fsm)) begin
        tmp_buckets_1_3_reg_252 <= next_buckets_1_1_fu_544_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_ST_st46_fsm_45 == ap_CS_fsm)) begin
        current_buckets_0_1_reg_741 <= current_buckets_0_1_fu_558_p2;
        current_buckets_1_1_reg_746 <= current_buckets_1_1_fu_563_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_ST_st3_fsm_2 == ap_CS_fsm)) begin
        current_buckets_0_reg_577 <= grp_nfa_get_initials_fu_356_ap_return_0;
        current_buckets_1_reg_582 <= grp_nfa_get_initials_fu_356_ap_return_1;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_ST_st8_fsm_7 == ap_CS_fsm)) begin
        i_1_reg_601 <= grp_fu_402_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_ST_st23_fsm_22 == ap_CS_fsm)) begin
        j_bit1_ph_reg_227 <= r_bit_reg_630;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_ST_st36_fsm_35 == ap_CS_fsm)) begin
        j_bit_reg_685 <= grp_bitset_next_fu_344_ap_return_0;
        j_bucket_index_reg_690 <= grp_bitset_next_fu_344_ap_return_1;
        j_bucket_reg_695 <= grp_bitset_next_fu_344_ap_return_2;
        p_s_reg_700 <= grp_bitset_next_fu_344_ap_return_3;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((~(nfa_forward_buckets_rsp_empty_n == ap_const_logic_0) & (ap_ST_st42_fsm_41 == ap_CS_fsm))) begin
        next_buckets_0_1_reg_721 <= next_buckets_0_1_fu_538_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_ST_st39_fsm_38 == ap_CS_fsm)) begin
        offset_i_reg_705 <= grp_fu_482_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_ST_st19_fsm_18 == ap_CS_fsm) & ~(sample_rsp_empty_n == ap_const_logic_0))) begin
        p_rec_reg_616 <= grp_fu_414_p2;
        sym_reg_621 <= sample_datain;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_ST_st22_fsm_21 == ap_CS_fsm)) begin
        r_bit_reg_630 <= grp_p_bsf32_hw_fu_368_ap_return;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((((ap_ST_st41_fsm_40 == ap_CS_fsm) & ~(nfa_forward_buckets_rsp_empty_n == ap_const_logic_0)) | (~(nfa_forward_buckets_rsp_empty_n == ap_const_logic_0) & (ap_ST_st42_fsm_41 == ap_CS_fsm)))) begin
        reg_374 <= nfa_forward_buckets_datain;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_ST_st12_fsm_11 == ap_CS_fsm)) begin
        sample_addr_1_reg_606 <= grp_fu_392_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_ST_st26_fsm_25 == ap_CS_fsm)) begin
        state_reg_665 <= grp_fu_463_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_ST_st19_fsm_18 == ap_CS_fsm) & ~(sample_rsp_empty_n == ap_const_logic_0) & ~(tmp_17_i_reg_612 == ap_const_lv1_0))) begin
        tmp_17_1_i_reg_626 <= tmp_17_1_i_fu_426_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_ST_st18_fsm_17 == ap_CS_fsm)) begin
        tmp_17_i_reg_612 <= tmp_17_i_fu_420_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_ST_st47_fsm_46 == ap_CS_fsm)) begin
        tmp_1_reg_751 <= tmp_1_fu_568_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_ST_st48_fsm_47 == ap_CS_fsm)) begin
        tmp_2_reg_756 <= tmp_2_fu_572_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_ST_st35_fsm_34 == ap_CS_fsm)) begin
        tmp_6_i_reg_680 <= grp_fu_476_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_ST_st24_fsm_23 == ap_CS_fsm)) begin
        tmp_7_i_cast_reg_650[0] <= tmp_7_i_cast_fu_444_p1[0];
tmp_7_i_cast_reg_650[1] <= tmp_7_i_cast_fu_444_p1[1];
tmp_7_i_cast_reg_650[2] <= tmp_7_i_cast_fu_444_p1[2];
tmp_7_i_cast_reg_650[3] <= tmp_7_i_cast_fu_444_p1[3];
tmp_7_i_cast_reg_650[4] <= tmp_7_i_cast_fu_444_p1[4];
tmp_7_i_cast_reg_650[5] <= tmp_7_i_cast_fu_444_p1[5];
tmp_7_i_cast_reg_650[6] <= tmp_7_i_cast_fu_444_p1[6];
tmp_7_i_cast_reg_650[7] <= tmp_7_i_cast_fu_444_p1[7];
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_ST_st45_fsm_44 == ap_CS_fsm)) begin
        tmp_buckets_0_reg_731 <= grp_nfa_get_finals_fu_362_ap_return_0;
        tmp_buckets_1_reg_736 <= grp_nfa_get_finals_fu_362_ap_return_1;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_ST_st5_fsm_4 == ap_CS_fsm)) begin
        tmp_s_reg_597 <= tmp_s_fu_397_p2;
    end
end

/// ap_done assign process. ///
always @ (ap_start or ap_CS_fsm)
begin
    if (((~(ap_const_logic_1 == ap_start) & (ap_ST_st1_fsm_0 == ap_CS_fsm)) | (ap_ST_st50_fsm_49 == ap_CS_fsm))) begin
        ap_done = ap_const_logic_1;
    end else begin
        ap_done = ap_const_logic_0;
    end
end

/// ap_idle assign process. ///
always @ (ap_start or ap_CS_fsm)
begin
    if ((~(ap_const_logic_1 == ap_start) & (ap_ST_st1_fsm_0 == ap_CS_fsm))) begin
        ap_idle = ap_const_logic_1;
    end else begin
        ap_idle = ap_const_logic_0;
    end
end

/// ap_ready assign process. ///
always @ (ap_CS_fsm)
begin
    if ((ap_ST_st50_fsm_49 == ap_CS_fsm)) begin
        ap_ready = ap_const_logic_1;
    end else begin
        ap_ready = ap_const_logic_0;
    end
end

/// ap_return assign process. ///
always @ (ap_CS_fsm or p_0_reg_332 or ap_return_preg)
begin
    if ((ap_ST_st50_fsm_49 == ap_CS_fsm)) begin
        ap_return = p_0_reg_332;
    end else begin
        ap_return = ap_return_preg;
    end
end

/// grp_bitset_next_fu_344_ap_ce assign process. ///
always @ (ap_CS_fsm or j_end_phi_fu_312_p4)
begin
    if ((((ap_ST_st25_fsm_24 == ap_CS_fsm) & (ap_const_lv1_0 == j_end_phi_fu_312_p4)) | (ap_ST_st26_fsm_25 == ap_CS_fsm) | (ap_ST_st27_fsm_26 == ap_CS_fsm) | (ap_ST_st35_fsm_34 == ap_CS_fsm) | (ap_ST_st36_fsm_35 == ap_CS_fsm) | (ap_ST_st28_fsm_27 == ap_CS_fsm) | (ap_ST_st29_fsm_28 == ap_CS_fsm) | (ap_ST_st30_fsm_29 == ap_CS_fsm) | (ap_ST_st31_fsm_30 == ap_CS_fsm) | (ap_ST_st32_fsm_31 == ap_CS_fsm) | (ap_ST_st33_fsm_32 == ap_CS_fsm) | (ap_ST_st34_fsm_33 == ap_CS_fsm))) begin
        grp_bitset_next_fu_344_ap_ce = ap_const_logic_1;
    end else begin
        grp_bitset_next_fu_344_ap_ce = ap_const_logic_0;
    end
end

/// grp_fu_414_ce assign process. ///
always @ (ap_CS_fsm or sample_rsp_empty_n or tmp_s_reg_597)
begin
    if (((ap_ST_st18_fsm_17 == ap_CS_fsm) | ((ap_ST_st19_fsm_18 == ap_CS_fsm) & ~(sample_rsp_empty_n == ap_const_logic_0)) | ((ap_ST_st12_fsm_11 == ap_CS_fsm) & ~(tmp_s_reg_597 == ap_const_lv1_0)) | (ap_ST_st13_fsm_12 == ap_CS_fsm) | (ap_ST_st14_fsm_13 == ap_CS_fsm) | (ap_ST_st15_fsm_14 == ap_CS_fsm) | (ap_ST_st16_fsm_15 == ap_CS_fsm) | (ap_ST_st17_fsm_16 == ap_CS_fsm))) begin
        grp_fu_414_ce = ap_const_logic_1;
    end else begin
        grp_fu_414_ce = ap_const_logic_0;
    end
end

/// grp_nfa_get_initials_fu_356_ap_start assign process. ///
always @ (ap_start or ap_CS_fsm)
begin
    if (((ap_ST_st1_fsm_0 == ap_CS_fsm) & ~(ap_start == ap_const_logic_0))) begin
        grp_nfa_get_initials_fu_356_ap_start = ap_const_logic_1;
    end else begin
        grp_nfa_get_initials_fu_356_ap_start = ap_const_logic_0;
    end
end

/// grp_p_bsf32_hw_fu_368_ap_ce assign process. ///
always @ (ap_CS_fsm)
begin
    if (((ap_ST_st22_fsm_21 == ap_CS_fsm) | (ap_ST_st21_fsm_20 == ap_CS_fsm))) begin
        grp_p_bsf32_hw_fu_368_ap_ce = ap_const_logic_1;
    end else begin
        grp_p_bsf32_hw_fu_368_ap_ce = ap_const_logic_0;
    end
end

/// nfa_forward_buckets_address assign process. ///
always @ (ap_CS_fsm or nfa_forward_buckets_rsp_empty_n or tmp_4_i_cast_fu_509_p1 or tmp_8_i_cast_fu_527_p1)
begin
    if (((ap_ST_st41_fsm_40 == ap_CS_fsm) & ~(nfa_forward_buckets_rsp_empty_n == ap_const_logic_0))) begin
        nfa_forward_buckets_address = tmp_8_i_cast_fu_527_p1;
    end else if ((ap_ST_st40_fsm_39 == ap_CS_fsm)) begin
        nfa_forward_buckets_address = tmp_4_i_cast_fu_509_p1;
    end else begin
        nfa_forward_buckets_address = 'bx;
    end
end

/// nfa_forward_buckets_req_write assign process. ///
always @ (ap_CS_fsm or nfa_forward_buckets_rsp_empty_n)
begin
    if ((((ap_ST_st41_fsm_40 == ap_CS_fsm) & ~(nfa_forward_buckets_rsp_empty_n == ap_const_logic_0)) | (ap_ST_st40_fsm_39 == ap_CS_fsm))) begin
        nfa_forward_buckets_req_write = ap_const_logic_1;
    end else begin
        nfa_forward_buckets_req_write = ap_const_logic_0;
    end
end

/// nfa_forward_buckets_rsp_read assign process. ///
always @ (ap_CS_fsm or nfa_forward_buckets_rsp_empty_n)
begin
    if ((((ap_ST_st41_fsm_40 == ap_CS_fsm) & ~(nfa_forward_buckets_rsp_empty_n == ap_const_logic_0)) | (~(nfa_forward_buckets_rsp_empty_n == ap_const_logic_0) & (ap_ST_st42_fsm_41 == ap_CS_fsm)))) begin
        nfa_forward_buckets_rsp_read = ap_const_logic_1;
    end else begin
        nfa_forward_buckets_rsp_read = ap_const_logic_0;
    end
end

/// sample_req_write assign process. ///
always @ (ap_CS_fsm)
begin
    if ((ap_ST_st18_fsm_17 == ap_CS_fsm)) begin
        sample_req_write = ap_const_logic_1;
    end else begin
        sample_req_write = ap_const_logic_0;
    end
end

/// sample_rsp_read assign process. ///
always @ (ap_CS_fsm or sample_rsp_empty_n)
begin
    if (((ap_ST_st19_fsm_18 == ap_CS_fsm) & ~(sample_rsp_empty_n == ap_const_logic_0))) begin
        sample_rsp_read = ap_const_logic_1;
    end else begin
        sample_rsp_read = ap_const_logic_0;
    end
end
always @ (ap_start or ap_CS_fsm or nfa_forward_buckets_rsp_empty_n or sample_rsp_empty_n or tmp_s_reg_597 or tmp_17_i_reg_612 or tmp_17_1_i_reg_626 or j_end_phi_fu_312_p4 or any_phi_fu_324_p4)
begin
    case (ap_CS_fsm)
        ap_ST_st1_fsm_0 : 
            if (~(ap_start == ap_const_logic_0)) begin
                ap_NS_fsm = ap_ST_st2_fsm_1;
            end else begin
                ap_NS_fsm = ap_ST_st1_fsm_0;
            end
        ap_ST_st2_fsm_1 : 
            ap_NS_fsm = ap_ST_st3_fsm_2;
        ap_ST_st3_fsm_2 : 
            ap_NS_fsm = ap_ST_st4_fsm_3;
        ap_ST_st4_fsm_3 : 
            ap_NS_fsm = ap_ST_st5_fsm_4;
        ap_ST_st5_fsm_4 : 
            ap_NS_fsm = ap_ST_st6_fsm_5;
        ap_ST_st6_fsm_5 : 
            ap_NS_fsm = ap_ST_st7_fsm_6;
        ap_ST_st7_fsm_6 : 
            ap_NS_fsm = ap_ST_st8_fsm_7;
        ap_ST_st8_fsm_7 : 
            ap_NS_fsm = ap_ST_st9_fsm_8;
        ap_ST_st9_fsm_8 : 
            ap_NS_fsm = ap_ST_st10_fsm_9;
        ap_ST_st10_fsm_9 : 
            ap_NS_fsm = ap_ST_st11_fsm_10;
        ap_ST_st11_fsm_10 : 
            ap_NS_fsm = ap_ST_st12_fsm_11;
        ap_ST_st12_fsm_11 : 
            if ((tmp_s_reg_597 == ap_const_lv1_0)) begin
                ap_NS_fsm = ap_ST_st44_fsm_43;
            end else begin
                ap_NS_fsm = ap_ST_st13_fsm_12;
            end
        ap_ST_st13_fsm_12 : 
            ap_NS_fsm = ap_ST_st14_fsm_13;
        ap_ST_st14_fsm_13 : 
            ap_NS_fsm = ap_ST_st15_fsm_14;
        ap_ST_st15_fsm_14 : 
            ap_NS_fsm = ap_ST_st16_fsm_15;
        ap_ST_st16_fsm_15 : 
            ap_NS_fsm = ap_ST_st17_fsm_16;
        ap_ST_st17_fsm_16 : 
            ap_NS_fsm = ap_ST_st18_fsm_17;
        ap_ST_st18_fsm_17 : 
            ap_NS_fsm = ap_ST_st19_fsm_18;
        ap_ST_st19_fsm_18 : 
            if ((~(sample_rsp_empty_n == ap_const_logic_0) & (tmp_17_i_reg_612 == ap_const_lv1_0))) begin
                ap_NS_fsm = ap_ST_st21_fsm_20;
            end else if ((~(sample_rsp_empty_n == ap_const_logic_0) & ~(tmp_17_i_reg_612 == ap_const_lv1_0))) begin
                ap_NS_fsm = ap_ST_st20_fsm_19;
            end else begin
                ap_NS_fsm = ap_ST_st19_fsm_18;
            end
        ap_ST_st20_fsm_19 : 
            if (~(tmp_17_1_i_reg_626 == ap_const_lv1_0)) begin
                ap_NS_fsm = ap_ST_st24_fsm_23;
            end else begin
                ap_NS_fsm = ap_ST_st21_fsm_20;
            end
        ap_ST_st21_fsm_20 : 
            ap_NS_fsm = ap_ST_st22_fsm_21;
        ap_ST_st22_fsm_21 : 
            ap_NS_fsm = ap_ST_st23_fsm_22;
        ap_ST_st23_fsm_22 : 
            ap_NS_fsm = ap_ST_st24_fsm_23;
        ap_ST_st24_fsm_23 : 
            ap_NS_fsm = ap_ST_st25_fsm_24;
        ap_ST_st25_fsm_24 : 
            if ((~(ap_const_lv1_0 == j_end_phi_fu_312_p4) & ~(ap_const_lv1_0 == any_phi_fu_324_p4))) begin
                ap_NS_fsm = ap_ST_st5_fsm_4;
            end else if ((~(ap_const_lv1_0 == j_end_phi_fu_312_p4) & (ap_const_lv1_0 == any_phi_fu_324_p4))) begin
                ap_NS_fsm = ap_ST_st50_fsm_49;
            end else begin
                ap_NS_fsm = ap_ST_st26_fsm_25;
            end
        ap_ST_st26_fsm_25 : 
            ap_NS_fsm = ap_ST_st27_fsm_26;
        ap_ST_st27_fsm_26 : 
            ap_NS_fsm = ap_ST_st28_fsm_27;
        ap_ST_st28_fsm_27 : 
            ap_NS_fsm = ap_ST_st29_fsm_28;
        ap_ST_st29_fsm_28 : 
            ap_NS_fsm = ap_ST_st30_fsm_29;
        ap_ST_st30_fsm_29 : 
            ap_NS_fsm = ap_ST_st31_fsm_30;
        ap_ST_st31_fsm_30 : 
            ap_NS_fsm = ap_ST_st32_fsm_31;
        ap_ST_st32_fsm_31 : 
            ap_NS_fsm = ap_ST_st33_fsm_32;
        ap_ST_st33_fsm_32 : 
            ap_NS_fsm = ap_ST_st34_fsm_33;
        ap_ST_st34_fsm_33 : 
            ap_NS_fsm = ap_ST_st35_fsm_34;
        ap_ST_st35_fsm_34 : 
            ap_NS_fsm = ap_ST_st36_fsm_35;
        ap_ST_st36_fsm_35 : 
            ap_NS_fsm = ap_ST_st37_fsm_36;
        ap_ST_st37_fsm_36 : 
            ap_NS_fsm = ap_ST_st38_fsm_37;
        ap_ST_st38_fsm_37 : 
            ap_NS_fsm = ap_ST_st39_fsm_38;
        ap_ST_st39_fsm_38 : 
            ap_NS_fsm = ap_ST_st40_fsm_39;
        ap_ST_st40_fsm_39 : 
            ap_NS_fsm = ap_ST_st41_fsm_40;
        ap_ST_st41_fsm_40 : 
            if (~(nfa_forward_buckets_rsp_empty_n == ap_const_logic_0)) begin
                ap_NS_fsm = ap_ST_st42_fsm_41;
            end else begin
                ap_NS_fsm = ap_ST_st41_fsm_40;
            end
        ap_ST_st42_fsm_41 : 
            if (~(nfa_forward_buckets_rsp_empty_n == ap_const_logic_0)) begin
                ap_NS_fsm = ap_ST_st43_fsm_42;
            end else begin
                ap_NS_fsm = ap_ST_st42_fsm_41;
            end
        ap_ST_st43_fsm_42 : 
            ap_NS_fsm = ap_ST_st25_fsm_24;
        ap_ST_st44_fsm_43 : 
            ap_NS_fsm = ap_ST_st45_fsm_44;
        ap_ST_st45_fsm_44 : 
            ap_NS_fsm = ap_ST_st46_fsm_45;
        ap_ST_st46_fsm_45 : 
            ap_NS_fsm = ap_ST_st47_fsm_46;
        ap_ST_st47_fsm_46 : 
            ap_NS_fsm = ap_ST_st48_fsm_47;
        ap_ST_st48_fsm_47 : 
            ap_NS_fsm = ap_ST_st49_fsm_48;
        ap_ST_st49_fsm_48 : 
            ap_NS_fsm = ap_ST_st50_fsm_49;
        ap_ST_st50_fsm_49 : 
            ap_NS_fsm = ap_ST_st1_fsm_0;
        default : 
            ap_NS_fsm = 'bx;
    endcase
end
assign agg_result_bucket_index_0_lcssa4_i_cast_cast_fu_432_p1 = $unsigned(agg_result_bucket_index_0_lcssa4_i_reg_190);
assign any_phi_fu_324_p4 = any_reg_319;
assign current_buckets_0_1_fu_558_p2 = (next_buckets_0_reg_168 & tmp_buckets_0_reg_731);
assign current_buckets_1_1_fu_563_p2 = (next_buckets_1_reg_158 & tmp_buckets_1_reg_736);
assign grp_bitset_next_fu_344_p_read = next_buckets_1_reg_158;
assign grp_bitset_next_fu_344_r_bit = j_bit1_reg_299;
assign grp_bitset_next_fu_344_r_bucket = j_bucket1_reg_278;
assign grp_bitset_next_fu_344_r_bucket_index = j_bucket_index1_reg_289;
assign grp_fu_392_ce = ap_const_logic_1;
assign grp_fu_392_p0 = p_01_rec_reg_146;
assign grp_fu_392_p1 = empty;
assign grp_fu_402_ce = ap_const_logic_1;
assign grp_fu_402_p0 = i_reg_134;
assign grp_fu_402_p1 = ap_const_lv16_1;
assign grp_fu_414_p0 = p_01_rec_reg_146;
assign grp_fu_414_p1 = ap_const_lv32_1;
assign grp_fu_463_ce = ap_const_logic_1;
assign grp_fu_463_p0 = {{tmp_5_fu_447_p1}, {ap_const_lv5_0}};
assign grp_fu_463_p1 = j_bit1_reg_299[5:0];
assign grp_fu_476_ce = ap_const_logic_1;
assign grp_fu_476_p0 = grp_fu_476_p00;
assign grp_fu_476_p00 = $unsigned(nfa_symbols);
assign grp_fu_476_p1 = grp_fu_476_p10;
assign grp_fu_476_p10 = $unsigned(state_reg_665);
assign grp_fu_482_ce = ap_const_logic_1;
assign grp_fu_482_p0 = tmp_6_i_reg_680;
assign grp_fu_482_p1 = tmp_7_i_cast_reg_650;
assign grp_nfa_get_finals_fu_362_ap_ce = ap_const_logic_1;
assign grp_nfa_get_finals_fu_362_ap_start = grp_nfa_get_finals_fu_362_ap_start_ap_start_reg;
assign grp_nfa_get_finals_fu_362_nfa_finals_buckets_datain = nfa_finals_buckets_datain;
assign grp_nfa_get_finals_fu_362_nfa_finals_buckets_req_full_n = nfa_finals_buckets_req_full_n;
assign grp_nfa_get_finals_fu_362_nfa_finals_buckets_rsp_empty_n = nfa_finals_buckets_rsp_empty_n;
assign grp_nfa_get_initials_fu_356_ap_ce = ap_const_logic_1;
assign grp_nfa_get_initials_fu_356_nfa_initials_buckets_datain = nfa_initials_buckets_datain;
assign grp_nfa_get_initials_fu_356_nfa_initials_buckets_req_full_n = nfa_initials_buckets_req_full_n;
assign grp_nfa_get_initials_fu_356_nfa_initials_buckets_rsp_empty_n = nfa_initials_buckets_rsp_empty_n;
assign grp_p_bsf32_hw_fu_368_bus_r = bus_assign_reg_178;
assign j_bit1_ph_cast_fu_440_p1 = $unsigned(j_bit1_ph_reg_227);
assign j_bucket_index1_ph_cast_fu_436_p1 = $unsigned(j_bucket_index1_ph_reg_216);
assign j_end_phi_fu_312_p4 = j_end_reg_309;
assign next_buckets_0_1_fu_538_p2 = (tmp_buckets_0_3_reg_265 | reg_374);
assign next_buckets_1_1_fu_544_p2 = (tmp_buckets_1_3_reg_252 | reg_374);
assign nfa_finals_buckets_address = grp_nfa_get_finals_fu_362_nfa_finals_buckets_address;
assign nfa_finals_buckets_dataout = grp_nfa_get_finals_fu_362_nfa_finals_buckets_dataout;
assign nfa_finals_buckets_req_din = grp_nfa_get_finals_fu_362_nfa_finals_buckets_req_din;
assign nfa_finals_buckets_req_write = grp_nfa_get_finals_fu_362_nfa_finals_buckets_req_write;
assign nfa_finals_buckets_rsp_read = grp_nfa_get_finals_fu_362_nfa_finals_buckets_rsp_read;
assign nfa_finals_buckets_size = grp_nfa_get_finals_fu_362_nfa_finals_buckets_size;
assign nfa_forward_buckets_dataout = ap_const_lv32_0;
assign nfa_forward_buckets_req_din = ap_const_logic_0;
assign nfa_forward_buckets_size = ap_const_lv32_1;
assign nfa_initials_buckets_address = grp_nfa_get_initials_fu_356_nfa_initials_buckets_address;
assign nfa_initials_buckets_dataout = grp_nfa_get_initials_fu_356_nfa_initials_buckets_dataout;
assign nfa_initials_buckets_req_din = grp_nfa_get_initials_fu_356_nfa_initials_buckets_req_din;
assign nfa_initials_buckets_req_write = grp_nfa_get_initials_fu_356_nfa_initials_buckets_req_write;
assign nfa_initials_buckets_rsp_read = grp_nfa_get_initials_fu_356_nfa_initials_buckets_rsp_read;
assign nfa_initials_buckets_size = grp_nfa_get_initials_fu_356_nfa_initials_buckets_size;
assign sample_address = sample_addr_1_reg_606;
assign sample_dataout = ap_const_lv8_0;
assign sample_req_din = ap_const_logic_0;
assign sample_size = ap_const_lv32_1;
assign tmp_17_1_i_fu_426_p2 = (next_buckets_1_reg_158 == ap_const_lv32_0? 1'b1: 1'b0);
assign tmp_17_i_fu_420_p2 = (next_buckets_0_reg_168 == ap_const_lv32_0? 1'b1: 1'b0);
assign tmp_1_fu_568_p2 = (current_buckets_1_1_reg_746 | current_buckets_0_1_reg_741);
assign tmp_2_fu_572_p2 = (tmp_1_reg_751 != ap_const_lv32_0? 1'b1: 1'b0);
assign tmp_4_i_cast_fu_509_p1 = $unsigned(tmp_4_i_fu_502_p3);
assign tmp_4_i_fu_502_p3 = {{offset_i_reg_705}, {ap_const_lv1_0}};
assign tmp_5_fu_447_p1 = j_bucket_index1_reg_289[0:0];
assign tmp_7_i_cast_fu_444_p1 = $unsigned(sym_reg_621);
assign tmp_8_i_cast_fu_527_p1 = $unsigned(tmp_8_i_fu_520_p3);
assign tmp_8_i_fu_520_p3 = {{offset_i_reg_705}, {ap_const_lv1_1}};
assign tmp_s_fu_397_p2 = (i_reg_134 < length_r? 1'b1: 1'b0);
always @ (posedge ap_clk)
begin
    tmp_7_i_cast_reg_650[13:8] <= 6'b000000;
end



endmodule //nfa_accept_sample

