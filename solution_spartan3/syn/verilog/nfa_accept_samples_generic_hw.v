// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2013.4
// Copyright (C) 2013 Xilinx Inc. All rights reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="nfa_accept_samples_generic_hw,hls_ip_2013_4,{HLS_INPUT_TYPE=c,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc3s200avq100-5,HLS_INPUT_CLOCK=1.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=3.449000,HLS_SYN_LAT=117874014,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=0,HLS_SYN_LUT=0}" *)

module nfa_accept_samples_generic_hw (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        nfa_initials_buckets_req_din,
        nfa_initials_buckets_req_full_n,
        nfa_initials_buckets_req_write,
        nfa_initials_buckets_rsp_empty_n,
        nfa_initials_buckets_rsp_read,
        nfa_initials_buckets_address,
        nfa_initials_buckets_datain,
        nfa_initials_buckets_dataout,
        nfa_initials_buckets_size,
        nfa_finals_buckets_req_din,
        nfa_finals_buckets_req_full_n,
        nfa_finals_buckets_req_write,
        nfa_finals_buckets_rsp_empty_n,
        nfa_finals_buckets_rsp_read,
        nfa_finals_buckets_address,
        nfa_finals_buckets_datain,
        nfa_finals_buckets_dataout,
        nfa_finals_buckets_size,
        nfa_forward_buckets_req_din,
        nfa_forward_buckets_req_full_n,
        nfa_forward_buckets_req_write,
        nfa_forward_buckets_rsp_empty_n,
        nfa_forward_buckets_rsp_read,
        nfa_forward_buckets_address,
        nfa_forward_buckets_datain,
        nfa_forward_buckets_dataout,
        nfa_forward_buckets_size,
        nfa_symbols,
        sample_buffer_req_din,
        sample_buffer_req_full_n,
        sample_buffer_req_write,
        sample_buffer_rsp_empty_n,
        sample_buffer_rsp_read,
        sample_buffer_address,
        sample_buffer_datain,
        sample_buffer_dataout,
        sample_buffer_size,
        sample_buffer_length,
        sample_length,
        indices_begin_req_din,
        indices_begin_req_full_n,
        indices_begin_req_write,
        indices_begin_rsp_empty_n,
        indices_begin_rsp_read,
        indices_begin_address,
        indices_begin_datain,
        indices_begin_dataout,
        indices_begin_size,
        indices_samples_req_din,
        indices_samples_req_full_n,
        indices_samples_req_write,
        indices_samples_rsp_empty_n,
        indices_samples_rsp_read,
        indices_samples_address,
        indices_samples_datain,
        indices_samples_dataout,
        indices_samples_size,
        indices_stride_req_din,
        indices_stride_req_full_n,
        indices_stride_req_write,
        indices_stride_rsp_empty_n,
        indices_stride_rsp_read,
        indices_stride_address,
        indices_stride_datain,
        indices_stride_dataout,
        indices_stride_size,
        i_size,
        begin_index,
        begin_sample,
        end_index,
        end_sample,
        stop_on_first,
        accept,
        ap_return
);

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output   nfa_initials_buckets_req_din;
input   nfa_initials_buckets_req_full_n;
output   nfa_initials_buckets_req_write;
input   nfa_initials_buckets_rsp_empty_n;
output   nfa_initials_buckets_rsp_read;
output  [31:0] nfa_initials_buckets_address;
input  [31:0] nfa_initials_buckets_datain;
output  [31:0] nfa_initials_buckets_dataout;
output  [31:0] nfa_initials_buckets_size;
output   nfa_finals_buckets_req_din;
input   nfa_finals_buckets_req_full_n;
output   nfa_finals_buckets_req_write;
input   nfa_finals_buckets_rsp_empty_n;
output   nfa_finals_buckets_rsp_read;
output  [31:0] nfa_finals_buckets_address;
input  [31:0] nfa_finals_buckets_datain;
output  [31:0] nfa_finals_buckets_dataout;
output  [31:0] nfa_finals_buckets_size;
output   nfa_forward_buckets_req_din;
input   nfa_forward_buckets_req_full_n;
output   nfa_forward_buckets_req_write;
input   nfa_forward_buckets_rsp_empty_n;
output   nfa_forward_buckets_rsp_read;
output  [31:0] nfa_forward_buckets_address;
input  [31:0] nfa_forward_buckets_datain;
output  [31:0] nfa_forward_buckets_dataout;
output  [31:0] nfa_forward_buckets_size;
input  [7:0] nfa_symbols;
output   sample_buffer_req_din;
input   sample_buffer_req_full_n;
output   sample_buffer_req_write;
input   sample_buffer_rsp_empty_n;
output   sample_buffer_rsp_read;
output  [31:0] sample_buffer_address;
input  [7:0] sample_buffer_datain;
output  [7:0] sample_buffer_dataout;
output  [31:0] sample_buffer_size;
input  [31:0] sample_buffer_length;
input  [15:0] sample_length;
output   indices_begin_req_din;
input   indices_begin_req_full_n;
output   indices_begin_req_write;
input   indices_begin_rsp_empty_n;
output   indices_begin_rsp_read;
output  [31:0] indices_begin_address;
input  [31:0] indices_begin_datain;
output  [31:0] indices_begin_dataout;
output  [31:0] indices_begin_size;
output   indices_samples_req_din;
input   indices_samples_req_full_n;
output   indices_samples_req_write;
input   indices_samples_rsp_empty_n;
output   indices_samples_rsp_read;
output  [31:0] indices_samples_address;
input  [15:0] indices_samples_datain;
output  [15:0] indices_samples_dataout;
output  [31:0] indices_samples_size;
output   indices_stride_req_din;
input   indices_stride_req_full_n;
output   indices_stride_req_write;
input   indices_stride_rsp_empty_n;
output   indices_stride_rsp_read;
output  [31:0] indices_stride_address;
input  [7:0] indices_stride_datain;
output  [7:0] indices_stride_dataout;
output  [31:0] indices_stride_size;
input  [15:0] i_size;
input  [15:0] begin_index;
input  [15:0] begin_sample;
input  [15:0] end_index;
input  [15:0] end_sample;
input  [0:0] stop_on_first;
input  [0:0] accept;
output  [31:0] ap_return;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg indices_begin_req_din;
reg indices_begin_req_write;
reg indices_begin_rsp_read;
reg[31:0] indices_begin_address;
reg[31:0] indices_begin_dataout;
reg[31:0] indices_begin_size;
reg indices_samples_req_din;
reg indices_samples_req_write;
reg indices_samples_rsp_read;
reg[31:0] indices_samples_address;
reg[15:0] indices_samples_dataout;
reg[31:0] indices_samples_size;
reg indices_stride_req_din;
reg indices_stride_req_write;
reg indices_stride_rsp_read;
reg[31:0] indices_stride_address;
reg[7:0] indices_stride_dataout;
reg[31:0] indices_stride_size;
reg   [5:0] ap_CS_fsm = 6'b000000;
wire   [0:0] stop_on_first_read_read_fu_102_p2;
wire   [0:0] tmp_i_fu_228_p2;
reg   [0:0] tmp_i_reg_313;
wire   [0:0] tmp_i_10_fu_233_p2;
reg   [0:0] tmp_i_10_reg_318;
wire   [0:0] tmp_i_11_fu_238_p2;
reg   [0:0] tmp_i_11_reg_323;
reg   [31:0] c_load_reg_327;
wire   [31:0] grp_sample_iterator_get_offset_fu_192_ap_return;
reg   [31:0] offset_reg_333;
wire   [0:0] grp_nfa_accept_sample_fu_176_ap_return;
reg   [0:0] r_reg_338;
wire    grp_nfa_accept_sample_fu_176_ap_done;
wire   [0:0] or_cond_fu_245_p2;
reg   [0:0] or_cond_reg_343;
wire   [31:0] grp_fu_249_p2;
reg   [31:0] c_1_reg_347;
wire    grp_nfa_accept_sample_fu_176_ap_start;
wire    grp_nfa_accept_sample_fu_176_ap_idle;
wire    grp_nfa_accept_sample_fu_176_ap_ready;
wire    grp_nfa_accept_sample_fu_176_nfa_initials_buckets_req_din;
wire    grp_nfa_accept_sample_fu_176_nfa_initials_buckets_req_full_n;
wire    grp_nfa_accept_sample_fu_176_nfa_initials_buckets_req_write;
wire    grp_nfa_accept_sample_fu_176_nfa_initials_buckets_rsp_empty_n;
wire    grp_nfa_accept_sample_fu_176_nfa_initials_buckets_rsp_read;
wire   [31:0] grp_nfa_accept_sample_fu_176_nfa_initials_buckets_address;
wire   [31:0] grp_nfa_accept_sample_fu_176_nfa_initials_buckets_datain;
wire   [31:0] grp_nfa_accept_sample_fu_176_nfa_initials_buckets_dataout;
wire   [31:0] grp_nfa_accept_sample_fu_176_nfa_initials_buckets_size;
wire    grp_nfa_accept_sample_fu_176_nfa_finals_buckets_req_din;
wire    grp_nfa_accept_sample_fu_176_nfa_finals_buckets_req_full_n;
wire    grp_nfa_accept_sample_fu_176_nfa_finals_buckets_req_write;
wire    grp_nfa_accept_sample_fu_176_nfa_finals_buckets_rsp_empty_n;
wire    grp_nfa_accept_sample_fu_176_nfa_finals_buckets_rsp_read;
wire   [31:0] grp_nfa_accept_sample_fu_176_nfa_finals_buckets_address;
wire   [31:0] grp_nfa_accept_sample_fu_176_nfa_finals_buckets_datain;
wire   [31:0] grp_nfa_accept_sample_fu_176_nfa_finals_buckets_dataout;
wire   [31:0] grp_nfa_accept_sample_fu_176_nfa_finals_buckets_size;
wire    grp_nfa_accept_sample_fu_176_nfa_forward_buckets_req_din;
wire    grp_nfa_accept_sample_fu_176_nfa_forward_buckets_req_full_n;
wire    grp_nfa_accept_sample_fu_176_nfa_forward_buckets_req_write;
wire    grp_nfa_accept_sample_fu_176_nfa_forward_buckets_rsp_empty_n;
wire    grp_nfa_accept_sample_fu_176_nfa_forward_buckets_rsp_read;
wire   [31:0] grp_nfa_accept_sample_fu_176_nfa_forward_buckets_address;
wire   [31:0] grp_nfa_accept_sample_fu_176_nfa_forward_buckets_datain;
wire   [31:0] grp_nfa_accept_sample_fu_176_nfa_forward_buckets_dataout;
wire   [31:0] grp_nfa_accept_sample_fu_176_nfa_forward_buckets_size;
wire   [7:0] grp_nfa_accept_sample_fu_176_nfa_symbols;
wire    grp_nfa_accept_sample_fu_176_sample_req_din;
wire    grp_nfa_accept_sample_fu_176_sample_req_full_n;
wire    grp_nfa_accept_sample_fu_176_sample_req_write;
wire    grp_nfa_accept_sample_fu_176_sample_rsp_empty_n;
wire    grp_nfa_accept_sample_fu_176_sample_rsp_read;
wire   [31:0] grp_nfa_accept_sample_fu_176_sample_address;
wire   [7:0] grp_nfa_accept_sample_fu_176_sample_datain;
wire   [7:0] grp_nfa_accept_sample_fu_176_sample_dataout;
wire   [31:0] grp_nfa_accept_sample_fu_176_sample_size;
wire   [31:0] grp_nfa_accept_sample_fu_176_empty;
wire   [15:0] grp_nfa_accept_sample_fu_176_length_r;
wire    grp_sample_iterator_get_offset_fu_192_ap_start;
wire    grp_sample_iterator_get_offset_fu_192_ap_done;
wire    grp_sample_iterator_get_offset_fu_192_ap_idle;
wire    grp_sample_iterator_get_offset_fu_192_ap_ready;
wire    grp_sample_iterator_get_offset_fu_192_indices_stride_req_din;
wire    grp_sample_iterator_get_offset_fu_192_indices_stride_req_full_n;
wire    grp_sample_iterator_get_offset_fu_192_indices_stride_req_write;
wire    grp_sample_iterator_get_offset_fu_192_indices_stride_rsp_empty_n;
wire    grp_sample_iterator_get_offset_fu_192_indices_stride_rsp_read;
wire   [31:0] grp_sample_iterator_get_offset_fu_192_indices_stride_address;
wire   [7:0] grp_sample_iterator_get_offset_fu_192_indices_stride_datain;
wire   [7:0] grp_sample_iterator_get_offset_fu_192_indices_stride_dataout;
wire   [31:0] grp_sample_iterator_get_offset_fu_192_indices_stride_size;
wire    grp_sample_iterator_get_offset_fu_192_indices_begin_req_din;
wire    grp_sample_iterator_get_offset_fu_192_indices_begin_req_full_n;
wire    grp_sample_iterator_get_offset_fu_192_indices_begin_req_write;
wire    grp_sample_iterator_get_offset_fu_192_indices_begin_rsp_empty_n;
wire    grp_sample_iterator_get_offset_fu_192_indices_begin_rsp_read;
wire   [31:0] grp_sample_iterator_get_offset_fu_192_indices_begin_address;
wire   [31:0] grp_sample_iterator_get_offset_fu_192_indices_begin_datain;
wire   [31:0] grp_sample_iterator_get_offset_fu_192_indices_begin_dataout;
wire   [31:0] grp_sample_iterator_get_offset_fu_192_indices_begin_size;
wire    grp_sample_iterator_get_offset_fu_192_ap_ce;
wire   [15:0] grp_sample_iterator_get_offset_fu_192_i_index;
wire   [15:0] grp_sample_iterator_get_offset_fu_192_i_sample;
wire    grp_sample_iterator_get_offset_fu_192_indices_samples_req_din;
wire    grp_sample_iterator_get_offset_fu_192_indices_samples_req_full_n;
wire    grp_sample_iterator_get_offset_fu_192_indices_samples_req_write;
wire    grp_sample_iterator_get_offset_fu_192_indices_samples_rsp_empty_n;
wire    grp_sample_iterator_get_offset_fu_192_indices_samples_rsp_read;
wire   [31:0] grp_sample_iterator_get_offset_fu_192_indices_samples_address;
wire   [15:0] grp_sample_iterator_get_offset_fu_192_indices_samples_datain;
wire   [15:0] grp_sample_iterator_get_offset_fu_192_indices_samples_dataout;
wire   [31:0] grp_sample_iterator_get_offset_fu_192_indices_samples_size;
wire   [31:0] grp_sample_iterator_get_offset_fu_192_sample_buffer_size;
wire   [15:0] grp_sample_iterator_get_offset_fu_192_sample_length;
wire    grp_sample_iterator_next_fu_209_ap_start;
wire    grp_sample_iterator_next_fu_209_ap_done;
wire    grp_sample_iterator_next_fu_209_ap_idle;
wire    grp_sample_iterator_next_fu_209_ap_ready;
wire    grp_sample_iterator_next_fu_209_indices_samples_req_din;
wire    grp_sample_iterator_next_fu_209_indices_samples_req_full_n;
wire    grp_sample_iterator_next_fu_209_indices_samples_req_write;
wire    grp_sample_iterator_next_fu_209_indices_samples_rsp_empty_n;
wire    grp_sample_iterator_next_fu_209_indices_samples_rsp_read;
wire   [31:0] grp_sample_iterator_next_fu_209_indices_samples_address;
wire   [15:0] grp_sample_iterator_next_fu_209_indices_samples_datain;
wire   [15:0] grp_sample_iterator_next_fu_209_indices_samples_dataout;
wire   [31:0] grp_sample_iterator_next_fu_209_indices_samples_size;
wire    grp_sample_iterator_next_fu_209_ap_ce;
wire    grp_sample_iterator_next_fu_209_indices_begin_req_din;
wire    grp_sample_iterator_next_fu_209_indices_begin_req_full_n;
wire    grp_sample_iterator_next_fu_209_indices_begin_req_write;
wire    grp_sample_iterator_next_fu_209_indices_begin_rsp_empty_n;
wire    grp_sample_iterator_next_fu_209_indices_begin_rsp_read;
wire   [31:0] grp_sample_iterator_next_fu_209_indices_begin_address;
wire   [31:0] grp_sample_iterator_next_fu_209_indices_begin_datain;
wire   [31:0] grp_sample_iterator_next_fu_209_indices_begin_dataout;
wire   [31:0] grp_sample_iterator_next_fu_209_indices_begin_size;
wire    grp_sample_iterator_next_fu_209_indices_stride_req_din;
wire    grp_sample_iterator_next_fu_209_indices_stride_req_full_n;
wire    grp_sample_iterator_next_fu_209_indices_stride_req_write;
wire    grp_sample_iterator_next_fu_209_indices_stride_rsp_empty_n;
wire    grp_sample_iterator_next_fu_209_indices_stride_rsp_read;
wire   [31:0] grp_sample_iterator_next_fu_209_indices_stride_address;
wire   [7:0] grp_sample_iterator_next_fu_209_indices_stride_datain;
wire   [7:0] grp_sample_iterator_next_fu_209_indices_stride_dataout;
wire   [31:0] grp_sample_iterator_next_fu_209_indices_stride_size;
wire   [15:0] grp_sample_iterator_next_fu_209_i_index;
wire   [15:0] grp_sample_iterator_next_fu_209_i_sample;
wire   [15:0] grp_sample_iterator_next_fu_209_ap_return_0;
wire   [15:0] grp_sample_iterator_next_fu_209_ap_return_1;
reg   [15:0] i_index_reg_144;
reg   [15:0] i_sample_reg_154;
reg   [31:0] p_0_reg_164;
reg    grp_nfa_accept_sample_fu_176_ap_start_ap_start_reg = 1'b0;
reg    grp_sample_iterator_get_offset_fu_192_ap_start_ap_start_reg = 1'b0;
reg   [5:0] ap_NS_fsm;
reg    grp_sample_iterator_next_fu_209_ap_start_ap_start_reg = 1'b0;
reg   [31:0] c_fu_92;
wire   [31:0] grp_fu_249_p0;
wire   [31:0] grp_fu_249_p1;
wire    grp_fu_249_ce;
parameter    ap_const_logic_1 = 1'b1;
parameter    ap_const_logic_0 = 1'b0;
parameter    ap_ST_st1_fsm_0 = 6'b000000;
parameter    ap_ST_st2_fsm_1 = 6'b1;
parameter    ap_ST_st3_fsm_2 = 6'b10;
parameter    ap_ST_st4_fsm_3 = 6'b11;
parameter    ap_ST_st5_fsm_4 = 6'b100;
parameter    ap_ST_st6_fsm_5 = 6'b101;
parameter    ap_ST_st7_fsm_6 = 6'b110;
parameter    ap_ST_st8_fsm_7 = 6'b111;
parameter    ap_ST_st9_fsm_8 = 6'b1000;
parameter    ap_ST_st10_fsm_9 = 6'b1001;
parameter    ap_ST_st11_fsm_10 = 6'b1010;
parameter    ap_ST_st12_fsm_11 = 6'b1011;
parameter    ap_ST_st13_fsm_12 = 6'b1100;
parameter    ap_ST_st14_fsm_13 = 6'b1101;
parameter    ap_ST_st15_fsm_14 = 6'b1110;
parameter    ap_ST_st16_fsm_15 = 6'b1111;
parameter    ap_ST_st17_fsm_16 = 6'b10000;
parameter    ap_ST_st18_fsm_17 = 6'b10001;
parameter    ap_ST_st19_fsm_18 = 6'b10010;
parameter    ap_ST_st20_fsm_19 = 6'b10011;
parameter    ap_ST_st21_fsm_20 = 6'b10100;
parameter    ap_ST_st22_fsm_21 = 6'b10101;
parameter    ap_ST_st23_fsm_22 = 6'b10110;
parameter    ap_ST_st24_fsm_23 = 6'b10111;
parameter    ap_ST_st25_fsm_24 = 6'b11000;
parameter    ap_ST_st26_fsm_25 = 6'b11001;
parameter    ap_ST_st27_fsm_26 = 6'b11010;
parameter    ap_ST_st28_fsm_27 = 6'b11011;
parameter    ap_ST_st29_fsm_28 = 6'b11100;
parameter    ap_ST_st30_fsm_29 = 6'b11101;
parameter    ap_ST_st31_fsm_30 = 6'b11110;
parameter    ap_ST_st32_fsm_31 = 6'b11111;
parameter    ap_ST_st33_fsm_32 = 6'b100000;
parameter    ap_ST_st34_fsm_33 = 6'b100001;
parameter    ap_ST_st35_fsm_34 = 6'b100010;
parameter    ap_ST_st36_fsm_35 = 6'b100011;
parameter    ap_ST_st37_fsm_36 = 6'b100100;
parameter    ap_ST_st38_fsm_37 = 6'b100101;
parameter    ap_ST_st39_fsm_38 = 6'b100110;
parameter    ap_ST_st40_fsm_39 = 6'b100111;
parameter    ap_const_lv1_0 = 1'b0;
parameter    ap_const_lv32_1 = 32'b1;
parameter    ap_const_lv32_0 = 32'b00000000000000000000000000000000;
parameter    ap_true = 1'b1;


nfa_accept_sample grp_nfa_accept_sample_fu_176(
    .ap_clk( ap_clk ),
    .ap_rst( ap_rst ),
    .ap_start( grp_nfa_accept_sample_fu_176_ap_start ),
    .ap_done( grp_nfa_accept_sample_fu_176_ap_done ),
    .ap_idle( grp_nfa_accept_sample_fu_176_ap_idle ),
    .ap_ready( grp_nfa_accept_sample_fu_176_ap_ready ),
    .nfa_initials_buckets_req_din( grp_nfa_accept_sample_fu_176_nfa_initials_buckets_req_din ),
    .nfa_initials_buckets_req_full_n( grp_nfa_accept_sample_fu_176_nfa_initials_buckets_req_full_n ),
    .nfa_initials_buckets_req_write( grp_nfa_accept_sample_fu_176_nfa_initials_buckets_req_write ),
    .nfa_initials_buckets_rsp_empty_n( grp_nfa_accept_sample_fu_176_nfa_initials_buckets_rsp_empty_n ),
    .nfa_initials_buckets_rsp_read( grp_nfa_accept_sample_fu_176_nfa_initials_buckets_rsp_read ),
    .nfa_initials_buckets_address( grp_nfa_accept_sample_fu_176_nfa_initials_buckets_address ),
    .nfa_initials_buckets_datain( grp_nfa_accept_sample_fu_176_nfa_initials_buckets_datain ),
    .nfa_initials_buckets_dataout( grp_nfa_accept_sample_fu_176_nfa_initials_buckets_dataout ),
    .nfa_initials_buckets_size( grp_nfa_accept_sample_fu_176_nfa_initials_buckets_size ),
    .nfa_finals_buckets_req_din( grp_nfa_accept_sample_fu_176_nfa_finals_buckets_req_din ),
    .nfa_finals_buckets_req_full_n( grp_nfa_accept_sample_fu_176_nfa_finals_buckets_req_full_n ),
    .nfa_finals_buckets_req_write( grp_nfa_accept_sample_fu_176_nfa_finals_buckets_req_write ),
    .nfa_finals_buckets_rsp_empty_n( grp_nfa_accept_sample_fu_176_nfa_finals_buckets_rsp_empty_n ),
    .nfa_finals_buckets_rsp_read( grp_nfa_accept_sample_fu_176_nfa_finals_buckets_rsp_read ),
    .nfa_finals_buckets_address( grp_nfa_accept_sample_fu_176_nfa_finals_buckets_address ),
    .nfa_finals_buckets_datain( grp_nfa_accept_sample_fu_176_nfa_finals_buckets_datain ),
    .nfa_finals_buckets_dataout( grp_nfa_accept_sample_fu_176_nfa_finals_buckets_dataout ),
    .nfa_finals_buckets_size( grp_nfa_accept_sample_fu_176_nfa_finals_buckets_size ),
    .nfa_forward_buckets_req_din( grp_nfa_accept_sample_fu_176_nfa_forward_buckets_req_din ),
    .nfa_forward_buckets_req_full_n( grp_nfa_accept_sample_fu_176_nfa_forward_buckets_req_full_n ),
    .nfa_forward_buckets_req_write( grp_nfa_accept_sample_fu_176_nfa_forward_buckets_req_write ),
    .nfa_forward_buckets_rsp_empty_n( grp_nfa_accept_sample_fu_176_nfa_forward_buckets_rsp_empty_n ),
    .nfa_forward_buckets_rsp_read( grp_nfa_accept_sample_fu_176_nfa_forward_buckets_rsp_read ),
    .nfa_forward_buckets_address( grp_nfa_accept_sample_fu_176_nfa_forward_buckets_address ),
    .nfa_forward_buckets_datain( grp_nfa_accept_sample_fu_176_nfa_forward_buckets_datain ),
    .nfa_forward_buckets_dataout( grp_nfa_accept_sample_fu_176_nfa_forward_buckets_dataout ),
    .nfa_forward_buckets_size( grp_nfa_accept_sample_fu_176_nfa_forward_buckets_size ),
    .nfa_symbols( grp_nfa_accept_sample_fu_176_nfa_symbols ),
    .sample_req_din( grp_nfa_accept_sample_fu_176_sample_req_din ),
    .sample_req_full_n( grp_nfa_accept_sample_fu_176_sample_req_full_n ),
    .sample_req_write( grp_nfa_accept_sample_fu_176_sample_req_write ),
    .sample_rsp_empty_n( grp_nfa_accept_sample_fu_176_sample_rsp_empty_n ),
    .sample_rsp_read( grp_nfa_accept_sample_fu_176_sample_rsp_read ),
    .sample_address( grp_nfa_accept_sample_fu_176_sample_address ),
    .sample_datain( grp_nfa_accept_sample_fu_176_sample_datain ),
    .sample_dataout( grp_nfa_accept_sample_fu_176_sample_dataout ),
    .sample_size( grp_nfa_accept_sample_fu_176_sample_size ),
    .empty( grp_nfa_accept_sample_fu_176_empty ),
    .length_r( grp_nfa_accept_sample_fu_176_length_r ),
    .ap_return( grp_nfa_accept_sample_fu_176_ap_return )
);

sample_iterator_get_offset grp_sample_iterator_get_offset_fu_192(
    .ap_clk( ap_clk ),
    .ap_rst( ap_rst ),
    .ap_start( grp_sample_iterator_get_offset_fu_192_ap_start ),
    .ap_done( grp_sample_iterator_get_offset_fu_192_ap_done ),
    .ap_idle( grp_sample_iterator_get_offset_fu_192_ap_idle ),
    .ap_ready( grp_sample_iterator_get_offset_fu_192_ap_ready ),
    .indices_stride_req_din( grp_sample_iterator_get_offset_fu_192_indices_stride_req_din ),
    .indices_stride_req_full_n( grp_sample_iterator_get_offset_fu_192_indices_stride_req_full_n ),
    .indices_stride_req_write( grp_sample_iterator_get_offset_fu_192_indices_stride_req_write ),
    .indices_stride_rsp_empty_n( grp_sample_iterator_get_offset_fu_192_indices_stride_rsp_empty_n ),
    .indices_stride_rsp_read( grp_sample_iterator_get_offset_fu_192_indices_stride_rsp_read ),
    .indices_stride_address( grp_sample_iterator_get_offset_fu_192_indices_stride_address ),
    .indices_stride_datain( grp_sample_iterator_get_offset_fu_192_indices_stride_datain ),
    .indices_stride_dataout( grp_sample_iterator_get_offset_fu_192_indices_stride_dataout ),
    .indices_stride_size( grp_sample_iterator_get_offset_fu_192_indices_stride_size ),
    .indices_begin_req_din( grp_sample_iterator_get_offset_fu_192_indices_begin_req_din ),
    .indices_begin_req_full_n( grp_sample_iterator_get_offset_fu_192_indices_begin_req_full_n ),
    .indices_begin_req_write( grp_sample_iterator_get_offset_fu_192_indices_begin_req_write ),
    .indices_begin_rsp_empty_n( grp_sample_iterator_get_offset_fu_192_indices_begin_rsp_empty_n ),
    .indices_begin_rsp_read( grp_sample_iterator_get_offset_fu_192_indices_begin_rsp_read ),
    .indices_begin_address( grp_sample_iterator_get_offset_fu_192_indices_begin_address ),
    .indices_begin_datain( grp_sample_iterator_get_offset_fu_192_indices_begin_datain ),
    .indices_begin_dataout( grp_sample_iterator_get_offset_fu_192_indices_begin_dataout ),
    .indices_begin_size( grp_sample_iterator_get_offset_fu_192_indices_begin_size ),
    .ap_ce( grp_sample_iterator_get_offset_fu_192_ap_ce ),
    .i_index( grp_sample_iterator_get_offset_fu_192_i_index ),
    .i_sample( grp_sample_iterator_get_offset_fu_192_i_sample ),
    .indices_samples_req_din( grp_sample_iterator_get_offset_fu_192_indices_samples_req_din ),
    .indices_samples_req_full_n( grp_sample_iterator_get_offset_fu_192_indices_samples_req_full_n ),
    .indices_samples_req_write( grp_sample_iterator_get_offset_fu_192_indices_samples_req_write ),
    .indices_samples_rsp_empty_n( grp_sample_iterator_get_offset_fu_192_indices_samples_rsp_empty_n ),
    .indices_samples_rsp_read( grp_sample_iterator_get_offset_fu_192_indices_samples_rsp_read ),
    .indices_samples_address( grp_sample_iterator_get_offset_fu_192_indices_samples_address ),
    .indices_samples_datain( grp_sample_iterator_get_offset_fu_192_indices_samples_datain ),
    .indices_samples_dataout( grp_sample_iterator_get_offset_fu_192_indices_samples_dataout ),
    .indices_samples_size( grp_sample_iterator_get_offset_fu_192_indices_samples_size ),
    .sample_buffer_size( grp_sample_iterator_get_offset_fu_192_sample_buffer_size ),
    .sample_length( grp_sample_iterator_get_offset_fu_192_sample_length ),
    .ap_return( grp_sample_iterator_get_offset_fu_192_ap_return )
);

sample_iterator_next grp_sample_iterator_next_fu_209(
    .ap_clk( ap_clk ),
    .ap_rst( ap_rst ),
    .ap_start( grp_sample_iterator_next_fu_209_ap_start ),
    .ap_done( grp_sample_iterator_next_fu_209_ap_done ),
    .ap_idle( grp_sample_iterator_next_fu_209_ap_idle ),
    .ap_ready( grp_sample_iterator_next_fu_209_ap_ready ),
    .indices_samples_req_din( grp_sample_iterator_next_fu_209_indices_samples_req_din ),
    .indices_samples_req_full_n( grp_sample_iterator_next_fu_209_indices_samples_req_full_n ),
    .indices_samples_req_write( grp_sample_iterator_next_fu_209_indices_samples_req_write ),
    .indices_samples_rsp_empty_n( grp_sample_iterator_next_fu_209_indices_samples_rsp_empty_n ),
    .indices_samples_rsp_read( grp_sample_iterator_next_fu_209_indices_samples_rsp_read ),
    .indices_samples_address( grp_sample_iterator_next_fu_209_indices_samples_address ),
    .indices_samples_datain( grp_sample_iterator_next_fu_209_indices_samples_datain ),
    .indices_samples_dataout( grp_sample_iterator_next_fu_209_indices_samples_dataout ),
    .indices_samples_size( grp_sample_iterator_next_fu_209_indices_samples_size ),
    .ap_ce( grp_sample_iterator_next_fu_209_ap_ce ),
    .indices_begin_req_din( grp_sample_iterator_next_fu_209_indices_begin_req_din ),
    .indices_begin_req_full_n( grp_sample_iterator_next_fu_209_indices_begin_req_full_n ),
    .indices_begin_req_write( grp_sample_iterator_next_fu_209_indices_begin_req_write ),
    .indices_begin_rsp_empty_n( grp_sample_iterator_next_fu_209_indices_begin_rsp_empty_n ),
    .indices_begin_rsp_read( grp_sample_iterator_next_fu_209_indices_begin_rsp_read ),
    .indices_begin_address( grp_sample_iterator_next_fu_209_indices_begin_address ),
    .indices_begin_datain( grp_sample_iterator_next_fu_209_indices_begin_datain ),
    .indices_begin_dataout( grp_sample_iterator_next_fu_209_indices_begin_dataout ),
    .indices_begin_size( grp_sample_iterator_next_fu_209_indices_begin_size ),
    .indices_stride_req_din( grp_sample_iterator_next_fu_209_indices_stride_req_din ),
    .indices_stride_req_full_n( grp_sample_iterator_next_fu_209_indices_stride_req_full_n ),
    .indices_stride_req_write( grp_sample_iterator_next_fu_209_indices_stride_req_write ),
    .indices_stride_rsp_empty_n( grp_sample_iterator_next_fu_209_indices_stride_rsp_empty_n ),
    .indices_stride_rsp_read( grp_sample_iterator_next_fu_209_indices_stride_rsp_read ),
    .indices_stride_address( grp_sample_iterator_next_fu_209_indices_stride_address ),
    .indices_stride_datain( grp_sample_iterator_next_fu_209_indices_stride_datain ),
    .indices_stride_dataout( grp_sample_iterator_next_fu_209_indices_stride_dataout ),
    .indices_stride_size( grp_sample_iterator_next_fu_209_indices_stride_size ),
    .i_index( grp_sample_iterator_next_fu_209_i_index ),
    .i_sample( grp_sample_iterator_next_fu_209_i_sample ),
    .ap_return_0( grp_sample_iterator_next_fu_209_ap_return_0 ),
    .ap_return_1( grp_sample_iterator_next_fu_209_ap_return_1 )
);

nfa_accept_samples_generic_hw_add_32ns_32ns_32_8 #(
    .ID( 38 ),
    .NUM_STAGE( 8 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
nfa_accept_samples_generic_hw_add_32ns_32ns_32_8_U38(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .din0( grp_fu_249_p0 ),
    .din1( grp_fu_249_p1 ),
    .ce( grp_fu_249_ce ),
    .dout( grp_fu_249_p2 )
);



/// the current state (ap_CS_fsm) of the state machine. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_CS_fsm
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_st1_fsm_0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

/// grp_nfa_accept_sample_fu_176_ap_start_ap_start_reg assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_grp_nfa_accept_sample_fu_176_ap_start_ap_start_reg
    if (ap_rst == 1'b1) begin
        grp_nfa_accept_sample_fu_176_ap_start_ap_start_reg <= ap_const_logic_0;
    end else begin
        if ((ap_ST_st22_fsm_21 == ap_CS_fsm)) begin
            grp_nfa_accept_sample_fu_176_ap_start_ap_start_reg <= ap_const_logic_1;
        end else if ((ap_const_logic_1 == grp_nfa_accept_sample_fu_176_ap_ready)) begin
            grp_nfa_accept_sample_fu_176_ap_start_ap_start_reg <= ap_const_logic_0;
        end
    end
end

/// grp_sample_iterator_get_offset_fu_192_ap_start_ap_start_reg assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_grp_sample_iterator_get_offset_fu_192_ap_start_ap_start_reg
    if (ap_rst == 1'b1) begin
        grp_sample_iterator_get_offset_fu_192_ap_start_ap_start_reg <= ap_const_logic_0;
    end else begin
        if (((ap_ST_st3_fsm_2 == ap_CS_fsm) & (ap_ST_st4_fsm_3 == ap_NS_fsm) & (tmp_i_11_fu_238_p2 == ap_const_lv1_0))) begin
            grp_sample_iterator_get_offset_fu_192_ap_start_ap_start_reg <= ap_const_logic_1;
        end else if ((ap_const_logic_1 == grp_sample_iterator_get_offset_fu_192_ap_ready)) begin
            grp_sample_iterator_get_offset_fu_192_ap_start_ap_start_reg <= ap_const_logic_0;
        end
    end
end

/// grp_sample_iterator_next_fu_209_ap_start_ap_start_reg assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_grp_sample_iterator_next_fu_209_ap_start_ap_start_reg
    if (ap_rst == 1'b1) begin
        grp_sample_iterator_next_fu_209_ap_start_ap_start_reg <= ap_const_logic_0;
    end else begin
        if (((ap_ST_st32_fsm_31 == ap_NS_fsm) & ((ap_ST_st24_fsm_23 == ap_CS_fsm) | (ap_ST_st31_fsm_30 == ap_CS_fsm)))) begin
            grp_sample_iterator_next_fu_209_ap_start_ap_start_reg <= ap_const_logic_1;
        end else if ((ap_const_logic_1 == grp_sample_iterator_next_fu_209_ap_ready)) begin
            grp_sample_iterator_next_fu_209_ap_start_ap_start_reg <= ap_const_logic_0;
        end
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_ST_st32_fsm_31 == ap_CS_fsm) & (or_cond_reg_343 == ap_const_lv1_0))) begin
        c_fu_92 <= c_1_reg_347;
    end else if (((ap_ST_st1_fsm_0 == ap_CS_fsm) & ~(ap_start == ap_const_logic_0))) begin
        c_fu_92 <= ap_const_lv32_0;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_ST_st39_fsm_38 == ap_CS_fsm)) begin
        i_index_reg_144 <= grp_sample_iterator_next_fu_209_ap_return_0;
    end else if (((ap_ST_st1_fsm_0 == ap_CS_fsm) & ~(ap_start == ap_const_logic_0))) begin
        i_index_reg_144 <= begin_index;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_ST_st39_fsm_38 == ap_CS_fsm)) begin
        i_sample_reg_154 <= grp_sample_iterator_next_fu_209_ap_return_1;
    end else if (((ap_ST_st1_fsm_0 == ap_CS_fsm) & ~(ap_start == ap_const_logic_0))) begin
        i_sample_reg_154 <= begin_sample;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_ST_st24_fsm_23 == ap_CS_fsm) & ~(stop_on_first_read_read_fu_102_p2 == ap_const_lv1_0) & (or_cond_fu_245_p2 == ap_const_lv1_0))) begin
        p_0_reg_164 <= ap_const_lv32_1;
    end else if (((ap_ST_st4_fsm_3 == ap_CS_fsm) & ~(tmp_i_11_reg_323 == ap_const_lv1_0))) begin
        p_0_reg_164 <= c_fu_92;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_ST_st31_fsm_30 == ap_CS_fsm)) begin
        c_1_reg_347 <= grp_fu_249_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_ST_st4_fsm_3 == ap_CS_fsm)) begin
        c_load_reg_327 <= c_fu_92;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_ST_st22_fsm_21 == ap_CS_fsm)) begin
        offset_reg_333 <= grp_sample_iterator_get_offset_fu_192_ap_return;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_ST_st24_fsm_23 == ap_CS_fsm)) begin
        or_cond_reg_343 <= or_cond_fu_245_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_ST_st23_fsm_22 == ap_CS_fsm) & ~(ap_const_logic_0 == grp_nfa_accept_sample_fu_176_ap_done))) begin
        r_reg_338 <= grp_nfa_accept_sample_fu_176_ap_return;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_ST_st2_fsm_1 == ap_CS_fsm)) begin
        tmp_i_10_reg_318 <= tmp_i_10_fu_233_p2;
        tmp_i_reg_313 <= tmp_i_fu_228_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_ST_st3_fsm_2 == ap_CS_fsm)) begin
        tmp_i_11_reg_323 <= tmp_i_11_fu_238_p2;
    end
end

/// ap_done assign process. ///
always @ (ap_CS_fsm)
begin
    if ((ap_ST_st40_fsm_39 == ap_CS_fsm)) begin
        ap_done = ap_const_logic_1;
    end else begin
        ap_done = ap_const_logic_0;
    end
end

/// ap_idle assign process. ///
always @ (ap_start or ap_CS_fsm)
begin
    if ((~(ap_const_logic_1 == ap_start) & (ap_ST_st1_fsm_0 == ap_CS_fsm))) begin
        ap_idle = ap_const_logic_1;
    end else begin
        ap_idle = ap_const_logic_0;
    end
end

/// ap_ready assign process. ///
always @ (ap_CS_fsm)
begin
    if ((ap_ST_st40_fsm_39 == ap_CS_fsm)) begin
        ap_ready = ap_const_logic_1;
    end else begin
        ap_ready = ap_const_logic_0;
    end
end

/// indices_begin_address assign process. ///
always @ (ap_CS_fsm or tmp_i_11_reg_323 or grp_sample_iterator_get_offset_fu_192_indices_begin_address or grp_sample_iterator_next_fu_209_indices_begin_address)
begin
    if (((ap_ST_st39_fsm_38 == ap_CS_fsm) | (ap_ST_st32_fsm_31 == ap_CS_fsm) | (ap_ST_st33_fsm_32 == ap_CS_fsm) | (ap_ST_st34_fsm_33 == ap_CS_fsm) | (ap_ST_st35_fsm_34 == ap_CS_fsm) | (ap_ST_st36_fsm_35 == ap_CS_fsm) | (ap_ST_st37_fsm_36 == ap_CS_fsm) | (ap_ST_st38_fsm_37 == ap_CS_fsm))) begin
        indices_begin_address = grp_sample_iterator_next_fu_209_indices_begin_address;
    end else if (((ap_ST_st22_fsm_21 == ap_CS_fsm) | ((ap_ST_st4_fsm_3 == ap_CS_fsm) & (tmp_i_11_reg_323 == ap_const_lv1_0)) | (ap_ST_st5_fsm_4 == ap_CS_fsm) | (ap_ST_st6_fsm_5 == ap_CS_fsm) | (ap_ST_st7_fsm_6 == ap_CS_fsm) | (ap_ST_st8_fsm_7 == ap_CS_fsm) | (ap_ST_st9_fsm_8 == ap_CS_fsm) | (ap_ST_st10_fsm_9 == ap_CS_fsm) | (ap_ST_st11_fsm_10 == ap_CS_fsm) | (ap_ST_st12_fsm_11 == ap_CS_fsm) | (ap_ST_st13_fsm_12 == ap_CS_fsm) | (ap_ST_st14_fsm_13 == ap_CS_fsm) | (ap_ST_st15_fsm_14 == ap_CS_fsm) | (ap_ST_st16_fsm_15 == ap_CS_fsm) | (ap_ST_st17_fsm_16 == ap_CS_fsm) | (ap_ST_st18_fsm_17 == ap_CS_fsm) | (ap_ST_st19_fsm_18 == ap_CS_fsm) | (ap_ST_st20_fsm_19 == ap_CS_fsm) | (ap_ST_st21_fsm_20 == ap_CS_fsm))) begin
        indices_begin_address = grp_sample_iterator_get_offset_fu_192_indices_begin_address;
    end else begin
        indices_begin_address = 'bx;
    end
end

/// indices_begin_dataout assign process. ///
always @ (ap_CS_fsm or tmp_i_11_reg_323 or grp_sample_iterator_get_offset_fu_192_indices_begin_dataout or grp_sample_iterator_next_fu_209_indices_begin_dataout)
begin
    if (((ap_ST_st39_fsm_38 == ap_CS_fsm) | (ap_ST_st32_fsm_31 == ap_CS_fsm) | (ap_ST_st33_fsm_32 == ap_CS_fsm) | (ap_ST_st34_fsm_33 == ap_CS_fsm) | (ap_ST_st35_fsm_34 == ap_CS_fsm) | (ap_ST_st36_fsm_35 == ap_CS_fsm) | (ap_ST_st37_fsm_36 == ap_CS_fsm) | (ap_ST_st38_fsm_37 == ap_CS_fsm))) begin
        indices_begin_dataout = grp_sample_iterator_next_fu_209_indices_begin_dataout;
    end else if (((ap_ST_st22_fsm_21 == ap_CS_fsm) | ((ap_ST_st4_fsm_3 == ap_CS_fsm) & (tmp_i_11_reg_323 == ap_const_lv1_0)) | (ap_ST_st5_fsm_4 == ap_CS_fsm) | (ap_ST_st6_fsm_5 == ap_CS_fsm) | (ap_ST_st7_fsm_6 == ap_CS_fsm) | (ap_ST_st8_fsm_7 == ap_CS_fsm) | (ap_ST_st9_fsm_8 == ap_CS_fsm) | (ap_ST_st10_fsm_9 == ap_CS_fsm) | (ap_ST_st11_fsm_10 == ap_CS_fsm) | (ap_ST_st12_fsm_11 == ap_CS_fsm) | (ap_ST_st13_fsm_12 == ap_CS_fsm) | (ap_ST_st14_fsm_13 == ap_CS_fsm) | (ap_ST_st15_fsm_14 == ap_CS_fsm) | (ap_ST_st16_fsm_15 == ap_CS_fsm) | (ap_ST_st17_fsm_16 == ap_CS_fsm) | (ap_ST_st18_fsm_17 == ap_CS_fsm) | (ap_ST_st19_fsm_18 == ap_CS_fsm) | (ap_ST_st20_fsm_19 == ap_CS_fsm) | (ap_ST_st21_fsm_20 == ap_CS_fsm))) begin
        indices_begin_dataout = grp_sample_iterator_get_offset_fu_192_indices_begin_dataout;
    end else begin
        indices_begin_dataout = 'bx;
    end
end

/// indices_begin_req_din assign process. ///
always @ (ap_CS_fsm or tmp_i_11_reg_323 or grp_sample_iterator_get_offset_fu_192_indices_begin_req_din or grp_sample_iterator_next_fu_209_indices_begin_req_din)
begin
    if (((ap_ST_st39_fsm_38 == ap_CS_fsm) | (ap_ST_st32_fsm_31 == ap_CS_fsm) | (ap_ST_st33_fsm_32 == ap_CS_fsm) | (ap_ST_st34_fsm_33 == ap_CS_fsm) | (ap_ST_st35_fsm_34 == ap_CS_fsm) | (ap_ST_st36_fsm_35 == ap_CS_fsm) | (ap_ST_st37_fsm_36 == ap_CS_fsm) | (ap_ST_st38_fsm_37 == ap_CS_fsm))) begin
        indices_begin_req_din = grp_sample_iterator_next_fu_209_indices_begin_req_din;
    end else if (((ap_ST_st22_fsm_21 == ap_CS_fsm) | ((ap_ST_st4_fsm_3 == ap_CS_fsm) & (tmp_i_11_reg_323 == ap_const_lv1_0)) | (ap_ST_st5_fsm_4 == ap_CS_fsm) | (ap_ST_st6_fsm_5 == ap_CS_fsm) | (ap_ST_st7_fsm_6 == ap_CS_fsm) | (ap_ST_st8_fsm_7 == ap_CS_fsm) | (ap_ST_st9_fsm_8 == ap_CS_fsm) | (ap_ST_st10_fsm_9 == ap_CS_fsm) | (ap_ST_st11_fsm_10 == ap_CS_fsm) | (ap_ST_st12_fsm_11 == ap_CS_fsm) | (ap_ST_st13_fsm_12 == ap_CS_fsm) | (ap_ST_st14_fsm_13 == ap_CS_fsm) | (ap_ST_st15_fsm_14 == ap_CS_fsm) | (ap_ST_st16_fsm_15 == ap_CS_fsm) | (ap_ST_st17_fsm_16 == ap_CS_fsm) | (ap_ST_st18_fsm_17 == ap_CS_fsm) | (ap_ST_st19_fsm_18 == ap_CS_fsm) | (ap_ST_st20_fsm_19 == ap_CS_fsm) | (ap_ST_st21_fsm_20 == ap_CS_fsm))) begin
        indices_begin_req_din = grp_sample_iterator_get_offset_fu_192_indices_begin_req_din;
    end else begin
        indices_begin_req_din = 'bx;
    end
end

/// indices_begin_req_write assign process. ///
always @ (ap_CS_fsm or tmp_i_11_reg_323 or grp_sample_iterator_get_offset_fu_192_indices_begin_req_write or grp_sample_iterator_next_fu_209_indices_begin_req_write)
begin
    if (((ap_ST_st39_fsm_38 == ap_CS_fsm) | (ap_ST_st32_fsm_31 == ap_CS_fsm) | (ap_ST_st33_fsm_32 == ap_CS_fsm) | (ap_ST_st34_fsm_33 == ap_CS_fsm) | (ap_ST_st35_fsm_34 == ap_CS_fsm) | (ap_ST_st36_fsm_35 == ap_CS_fsm) | (ap_ST_st37_fsm_36 == ap_CS_fsm) | (ap_ST_st38_fsm_37 == ap_CS_fsm))) begin
        indices_begin_req_write = grp_sample_iterator_next_fu_209_indices_begin_req_write;
    end else if (((ap_ST_st22_fsm_21 == ap_CS_fsm) | ((ap_ST_st4_fsm_3 == ap_CS_fsm) & (tmp_i_11_reg_323 == ap_const_lv1_0)) | (ap_ST_st5_fsm_4 == ap_CS_fsm) | (ap_ST_st6_fsm_5 == ap_CS_fsm) | (ap_ST_st7_fsm_6 == ap_CS_fsm) | (ap_ST_st8_fsm_7 == ap_CS_fsm) | (ap_ST_st9_fsm_8 == ap_CS_fsm) | (ap_ST_st10_fsm_9 == ap_CS_fsm) | (ap_ST_st11_fsm_10 == ap_CS_fsm) | (ap_ST_st12_fsm_11 == ap_CS_fsm) | (ap_ST_st13_fsm_12 == ap_CS_fsm) | (ap_ST_st14_fsm_13 == ap_CS_fsm) | (ap_ST_st15_fsm_14 == ap_CS_fsm) | (ap_ST_st16_fsm_15 == ap_CS_fsm) | (ap_ST_st17_fsm_16 == ap_CS_fsm) | (ap_ST_st18_fsm_17 == ap_CS_fsm) | (ap_ST_st19_fsm_18 == ap_CS_fsm) | (ap_ST_st20_fsm_19 == ap_CS_fsm) | (ap_ST_st21_fsm_20 == ap_CS_fsm))) begin
        indices_begin_req_write = grp_sample_iterator_get_offset_fu_192_indices_begin_req_write;
    end else begin
        indices_begin_req_write = 'bx;
    end
end

/// indices_begin_rsp_read assign process. ///
always @ (ap_CS_fsm or tmp_i_11_reg_323 or grp_sample_iterator_get_offset_fu_192_indices_begin_rsp_read or grp_sample_iterator_next_fu_209_indices_begin_rsp_read)
begin
    if (((ap_ST_st39_fsm_38 == ap_CS_fsm) | (ap_ST_st32_fsm_31 == ap_CS_fsm) | (ap_ST_st33_fsm_32 == ap_CS_fsm) | (ap_ST_st34_fsm_33 == ap_CS_fsm) | (ap_ST_st35_fsm_34 == ap_CS_fsm) | (ap_ST_st36_fsm_35 == ap_CS_fsm) | (ap_ST_st37_fsm_36 == ap_CS_fsm) | (ap_ST_st38_fsm_37 == ap_CS_fsm))) begin
        indices_begin_rsp_read = grp_sample_iterator_next_fu_209_indices_begin_rsp_read;
    end else if (((ap_ST_st22_fsm_21 == ap_CS_fsm) | ((ap_ST_st4_fsm_3 == ap_CS_fsm) & (tmp_i_11_reg_323 == ap_const_lv1_0)) | (ap_ST_st5_fsm_4 == ap_CS_fsm) | (ap_ST_st6_fsm_5 == ap_CS_fsm) | (ap_ST_st7_fsm_6 == ap_CS_fsm) | (ap_ST_st8_fsm_7 == ap_CS_fsm) | (ap_ST_st9_fsm_8 == ap_CS_fsm) | (ap_ST_st10_fsm_9 == ap_CS_fsm) | (ap_ST_st11_fsm_10 == ap_CS_fsm) | (ap_ST_st12_fsm_11 == ap_CS_fsm) | (ap_ST_st13_fsm_12 == ap_CS_fsm) | (ap_ST_st14_fsm_13 == ap_CS_fsm) | (ap_ST_st15_fsm_14 == ap_CS_fsm) | (ap_ST_st16_fsm_15 == ap_CS_fsm) | (ap_ST_st17_fsm_16 == ap_CS_fsm) | (ap_ST_st18_fsm_17 == ap_CS_fsm) | (ap_ST_st19_fsm_18 == ap_CS_fsm) | (ap_ST_st20_fsm_19 == ap_CS_fsm) | (ap_ST_st21_fsm_20 == ap_CS_fsm))) begin
        indices_begin_rsp_read = grp_sample_iterator_get_offset_fu_192_indices_begin_rsp_read;
    end else begin
        indices_begin_rsp_read = 'bx;
    end
end

/// indices_begin_size assign process. ///
always @ (ap_CS_fsm or tmp_i_11_reg_323 or grp_sample_iterator_get_offset_fu_192_indices_begin_size or grp_sample_iterator_next_fu_209_indices_begin_size)
begin
    if (((ap_ST_st39_fsm_38 == ap_CS_fsm) | (ap_ST_st32_fsm_31 == ap_CS_fsm) | (ap_ST_st33_fsm_32 == ap_CS_fsm) | (ap_ST_st34_fsm_33 == ap_CS_fsm) | (ap_ST_st35_fsm_34 == ap_CS_fsm) | (ap_ST_st36_fsm_35 == ap_CS_fsm) | (ap_ST_st37_fsm_36 == ap_CS_fsm) | (ap_ST_st38_fsm_37 == ap_CS_fsm))) begin
        indices_begin_size = grp_sample_iterator_next_fu_209_indices_begin_size;
    end else if (((ap_ST_st22_fsm_21 == ap_CS_fsm) | ((ap_ST_st4_fsm_3 == ap_CS_fsm) & (tmp_i_11_reg_323 == ap_const_lv1_0)) | (ap_ST_st5_fsm_4 == ap_CS_fsm) | (ap_ST_st6_fsm_5 == ap_CS_fsm) | (ap_ST_st7_fsm_6 == ap_CS_fsm) | (ap_ST_st8_fsm_7 == ap_CS_fsm) | (ap_ST_st9_fsm_8 == ap_CS_fsm) | (ap_ST_st10_fsm_9 == ap_CS_fsm) | (ap_ST_st11_fsm_10 == ap_CS_fsm) | (ap_ST_st12_fsm_11 == ap_CS_fsm) | (ap_ST_st13_fsm_12 == ap_CS_fsm) | (ap_ST_st14_fsm_13 == ap_CS_fsm) | (ap_ST_st15_fsm_14 == ap_CS_fsm) | (ap_ST_st16_fsm_15 == ap_CS_fsm) | (ap_ST_st17_fsm_16 == ap_CS_fsm) | (ap_ST_st18_fsm_17 == ap_CS_fsm) | (ap_ST_st19_fsm_18 == ap_CS_fsm) | (ap_ST_st20_fsm_19 == ap_CS_fsm) | (ap_ST_st21_fsm_20 == ap_CS_fsm))) begin
        indices_begin_size = grp_sample_iterator_get_offset_fu_192_indices_begin_size;
    end else begin
        indices_begin_size = 'bx;
    end
end

/// indices_samples_address assign process. ///
always @ (ap_CS_fsm or tmp_i_11_reg_323 or grp_sample_iterator_get_offset_fu_192_indices_samples_address or grp_sample_iterator_next_fu_209_indices_samples_address)
begin
    if (((ap_ST_st39_fsm_38 == ap_CS_fsm) | (ap_ST_st32_fsm_31 == ap_CS_fsm) | (ap_ST_st33_fsm_32 == ap_CS_fsm) | (ap_ST_st34_fsm_33 == ap_CS_fsm) | (ap_ST_st35_fsm_34 == ap_CS_fsm) | (ap_ST_st36_fsm_35 == ap_CS_fsm) | (ap_ST_st37_fsm_36 == ap_CS_fsm) | (ap_ST_st38_fsm_37 == ap_CS_fsm))) begin
        indices_samples_address = grp_sample_iterator_next_fu_209_indices_samples_address;
    end else if (((ap_ST_st22_fsm_21 == ap_CS_fsm) | ((ap_ST_st4_fsm_3 == ap_CS_fsm) & (tmp_i_11_reg_323 == ap_const_lv1_0)) | (ap_ST_st5_fsm_4 == ap_CS_fsm) | (ap_ST_st6_fsm_5 == ap_CS_fsm) | (ap_ST_st7_fsm_6 == ap_CS_fsm) | (ap_ST_st8_fsm_7 == ap_CS_fsm) | (ap_ST_st9_fsm_8 == ap_CS_fsm) | (ap_ST_st10_fsm_9 == ap_CS_fsm) | (ap_ST_st11_fsm_10 == ap_CS_fsm) | (ap_ST_st12_fsm_11 == ap_CS_fsm) | (ap_ST_st13_fsm_12 == ap_CS_fsm) | (ap_ST_st14_fsm_13 == ap_CS_fsm) | (ap_ST_st15_fsm_14 == ap_CS_fsm) | (ap_ST_st16_fsm_15 == ap_CS_fsm) | (ap_ST_st17_fsm_16 == ap_CS_fsm) | (ap_ST_st18_fsm_17 == ap_CS_fsm) | (ap_ST_st19_fsm_18 == ap_CS_fsm) | (ap_ST_st20_fsm_19 == ap_CS_fsm) | (ap_ST_st21_fsm_20 == ap_CS_fsm))) begin
        indices_samples_address = grp_sample_iterator_get_offset_fu_192_indices_samples_address;
    end else begin
        indices_samples_address = 'bx;
    end
end

/// indices_samples_dataout assign process. ///
always @ (ap_CS_fsm or tmp_i_11_reg_323 or grp_sample_iterator_get_offset_fu_192_indices_samples_dataout or grp_sample_iterator_next_fu_209_indices_samples_dataout)
begin
    if (((ap_ST_st39_fsm_38 == ap_CS_fsm) | (ap_ST_st32_fsm_31 == ap_CS_fsm) | (ap_ST_st33_fsm_32 == ap_CS_fsm) | (ap_ST_st34_fsm_33 == ap_CS_fsm) | (ap_ST_st35_fsm_34 == ap_CS_fsm) | (ap_ST_st36_fsm_35 == ap_CS_fsm) | (ap_ST_st37_fsm_36 == ap_CS_fsm) | (ap_ST_st38_fsm_37 == ap_CS_fsm))) begin
        indices_samples_dataout = grp_sample_iterator_next_fu_209_indices_samples_dataout;
    end else if (((ap_ST_st22_fsm_21 == ap_CS_fsm) | ((ap_ST_st4_fsm_3 == ap_CS_fsm) & (tmp_i_11_reg_323 == ap_const_lv1_0)) | (ap_ST_st5_fsm_4 == ap_CS_fsm) | (ap_ST_st6_fsm_5 == ap_CS_fsm) | (ap_ST_st7_fsm_6 == ap_CS_fsm) | (ap_ST_st8_fsm_7 == ap_CS_fsm) | (ap_ST_st9_fsm_8 == ap_CS_fsm) | (ap_ST_st10_fsm_9 == ap_CS_fsm) | (ap_ST_st11_fsm_10 == ap_CS_fsm) | (ap_ST_st12_fsm_11 == ap_CS_fsm) | (ap_ST_st13_fsm_12 == ap_CS_fsm) | (ap_ST_st14_fsm_13 == ap_CS_fsm) | (ap_ST_st15_fsm_14 == ap_CS_fsm) | (ap_ST_st16_fsm_15 == ap_CS_fsm) | (ap_ST_st17_fsm_16 == ap_CS_fsm) | (ap_ST_st18_fsm_17 == ap_CS_fsm) | (ap_ST_st19_fsm_18 == ap_CS_fsm) | (ap_ST_st20_fsm_19 == ap_CS_fsm) | (ap_ST_st21_fsm_20 == ap_CS_fsm))) begin
        indices_samples_dataout = grp_sample_iterator_get_offset_fu_192_indices_samples_dataout;
    end else begin
        indices_samples_dataout = 'bx;
    end
end

/// indices_samples_req_din assign process. ///
always @ (ap_CS_fsm or tmp_i_11_reg_323 or grp_sample_iterator_get_offset_fu_192_indices_samples_req_din or grp_sample_iterator_next_fu_209_indices_samples_req_din)
begin
    if (((ap_ST_st39_fsm_38 == ap_CS_fsm) | (ap_ST_st32_fsm_31 == ap_CS_fsm) | (ap_ST_st33_fsm_32 == ap_CS_fsm) | (ap_ST_st34_fsm_33 == ap_CS_fsm) | (ap_ST_st35_fsm_34 == ap_CS_fsm) | (ap_ST_st36_fsm_35 == ap_CS_fsm) | (ap_ST_st37_fsm_36 == ap_CS_fsm) | (ap_ST_st38_fsm_37 == ap_CS_fsm))) begin
        indices_samples_req_din = grp_sample_iterator_next_fu_209_indices_samples_req_din;
    end else if (((ap_ST_st22_fsm_21 == ap_CS_fsm) | ((ap_ST_st4_fsm_3 == ap_CS_fsm) & (tmp_i_11_reg_323 == ap_const_lv1_0)) | (ap_ST_st5_fsm_4 == ap_CS_fsm) | (ap_ST_st6_fsm_5 == ap_CS_fsm) | (ap_ST_st7_fsm_6 == ap_CS_fsm) | (ap_ST_st8_fsm_7 == ap_CS_fsm) | (ap_ST_st9_fsm_8 == ap_CS_fsm) | (ap_ST_st10_fsm_9 == ap_CS_fsm) | (ap_ST_st11_fsm_10 == ap_CS_fsm) | (ap_ST_st12_fsm_11 == ap_CS_fsm) | (ap_ST_st13_fsm_12 == ap_CS_fsm) | (ap_ST_st14_fsm_13 == ap_CS_fsm) | (ap_ST_st15_fsm_14 == ap_CS_fsm) | (ap_ST_st16_fsm_15 == ap_CS_fsm) | (ap_ST_st17_fsm_16 == ap_CS_fsm) | (ap_ST_st18_fsm_17 == ap_CS_fsm) | (ap_ST_st19_fsm_18 == ap_CS_fsm) | (ap_ST_st20_fsm_19 == ap_CS_fsm) | (ap_ST_st21_fsm_20 == ap_CS_fsm))) begin
        indices_samples_req_din = grp_sample_iterator_get_offset_fu_192_indices_samples_req_din;
    end else begin
        indices_samples_req_din = 'bx;
    end
end

/// indices_samples_req_write assign process. ///
always @ (ap_CS_fsm or tmp_i_11_reg_323 or grp_sample_iterator_get_offset_fu_192_indices_samples_req_write or grp_sample_iterator_next_fu_209_indices_samples_req_write)
begin
    if (((ap_ST_st39_fsm_38 == ap_CS_fsm) | (ap_ST_st32_fsm_31 == ap_CS_fsm) | (ap_ST_st33_fsm_32 == ap_CS_fsm) | (ap_ST_st34_fsm_33 == ap_CS_fsm) | (ap_ST_st35_fsm_34 == ap_CS_fsm) | (ap_ST_st36_fsm_35 == ap_CS_fsm) | (ap_ST_st37_fsm_36 == ap_CS_fsm) | (ap_ST_st38_fsm_37 == ap_CS_fsm))) begin
        indices_samples_req_write = grp_sample_iterator_next_fu_209_indices_samples_req_write;
    end else if (((ap_ST_st22_fsm_21 == ap_CS_fsm) | ((ap_ST_st4_fsm_3 == ap_CS_fsm) & (tmp_i_11_reg_323 == ap_const_lv1_0)) | (ap_ST_st5_fsm_4 == ap_CS_fsm) | (ap_ST_st6_fsm_5 == ap_CS_fsm) | (ap_ST_st7_fsm_6 == ap_CS_fsm) | (ap_ST_st8_fsm_7 == ap_CS_fsm) | (ap_ST_st9_fsm_8 == ap_CS_fsm) | (ap_ST_st10_fsm_9 == ap_CS_fsm) | (ap_ST_st11_fsm_10 == ap_CS_fsm) | (ap_ST_st12_fsm_11 == ap_CS_fsm) | (ap_ST_st13_fsm_12 == ap_CS_fsm) | (ap_ST_st14_fsm_13 == ap_CS_fsm) | (ap_ST_st15_fsm_14 == ap_CS_fsm) | (ap_ST_st16_fsm_15 == ap_CS_fsm) | (ap_ST_st17_fsm_16 == ap_CS_fsm) | (ap_ST_st18_fsm_17 == ap_CS_fsm) | (ap_ST_st19_fsm_18 == ap_CS_fsm) | (ap_ST_st20_fsm_19 == ap_CS_fsm) | (ap_ST_st21_fsm_20 == ap_CS_fsm))) begin
        indices_samples_req_write = grp_sample_iterator_get_offset_fu_192_indices_samples_req_write;
    end else begin
        indices_samples_req_write = 'bx;
    end
end

/// indices_samples_rsp_read assign process. ///
always @ (ap_CS_fsm or tmp_i_11_reg_323 or grp_sample_iterator_get_offset_fu_192_indices_samples_rsp_read or grp_sample_iterator_next_fu_209_indices_samples_rsp_read)
begin
    if (((ap_ST_st39_fsm_38 == ap_CS_fsm) | (ap_ST_st32_fsm_31 == ap_CS_fsm) | (ap_ST_st33_fsm_32 == ap_CS_fsm) | (ap_ST_st34_fsm_33 == ap_CS_fsm) | (ap_ST_st35_fsm_34 == ap_CS_fsm) | (ap_ST_st36_fsm_35 == ap_CS_fsm) | (ap_ST_st37_fsm_36 == ap_CS_fsm) | (ap_ST_st38_fsm_37 == ap_CS_fsm))) begin
        indices_samples_rsp_read = grp_sample_iterator_next_fu_209_indices_samples_rsp_read;
    end else if (((ap_ST_st22_fsm_21 == ap_CS_fsm) | ((ap_ST_st4_fsm_3 == ap_CS_fsm) & (tmp_i_11_reg_323 == ap_const_lv1_0)) | (ap_ST_st5_fsm_4 == ap_CS_fsm) | (ap_ST_st6_fsm_5 == ap_CS_fsm) | (ap_ST_st7_fsm_6 == ap_CS_fsm) | (ap_ST_st8_fsm_7 == ap_CS_fsm) | (ap_ST_st9_fsm_8 == ap_CS_fsm) | (ap_ST_st10_fsm_9 == ap_CS_fsm) | (ap_ST_st11_fsm_10 == ap_CS_fsm) | (ap_ST_st12_fsm_11 == ap_CS_fsm) | (ap_ST_st13_fsm_12 == ap_CS_fsm) | (ap_ST_st14_fsm_13 == ap_CS_fsm) | (ap_ST_st15_fsm_14 == ap_CS_fsm) | (ap_ST_st16_fsm_15 == ap_CS_fsm) | (ap_ST_st17_fsm_16 == ap_CS_fsm) | (ap_ST_st18_fsm_17 == ap_CS_fsm) | (ap_ST_st19_fsm_18 == ap_CS_fsm) | (ap_ST_st20_fsm_19 == ap_CS_fsm) | (ap_ST_st21_fsm_20 == ap_CS_fsm))) begin
        indices_samples_rsp_read = grp_sample_iterator_get_offset_fu_192_indices_samples_rsp_read;
    end else begin
        indices_samples_rsp_read = 'bx;
    end
end

/// indices_samples_size assign process. ///
always @ (ap_CS_fsm or tmp_i_11_reg_323 or grp_sample_iterator_get_offset_fu_192_indices_samples_size or grp_sample_iterator_next_fu_209_indices_samples_size)
begin
    if (((ap_ST_st39_fsm_38 == ap_CS_fsm) | (ap_ST_st32_fsm_31 == ap_CS_fsm) | (ap_ST_st33_fsm_32 == ap_CS_fsm) | (ap_ST_st34_fsm_33 == ap_CS_fsm) | (ap_ST_st35_fsm_34 == ap_CS_fsm) | (ap_ST_st36_fsm_35 == ap_CS_fsm) | (ap_ST_st37_fsm_36 == ap_CS_fsm) | (ap_ST_st38_fsm_37 == ap_CS_fsm))) begin
        indices_samples_size = grp_sample_iterator_next_fu_209_indices_samples_size;
    end else if (((ap_ST_st22_fsm_21 == ap_CS_fsm) | ((ap_ST_st4_fsm_3 == ap_CS_fsm) & (tmp_i_11_reg_323 == ap_const_lv1_0)) | (ap_ST_st5_fsm_4 == ap_CS_fsm) | (ap_ST_st6_fsm_5 == ap_CS_fsm) | (ap_ST_st7_fsm_6 == ap_CS_fsm) | (ap_ST_st8_fsm_7 == ap_CS_fsm) | (ap_ST_st9_fsm_8 == ap_CS_fsm) | (ap_ST_st10_fsm_9 == ap_CS_fsm) | (ap_ST_st11_fsm_10 == ap_CS_fsm) | (ap_ST_st12_fsm_11 == ap_CS_fsm) | (ap_ST_st13_fsm_12 == ap_CS_fsm) | (ap_ST_st14_fsm_13 == ap_CS_fsm) | (ap_ST_st15_fsm_14 == ap_CS_fsm) | (ap_ST_st16_fsm_15 == ap_CS_fsm) | (ap_ST_st17_fsm_16 == ap_CS_fsm) | (ap_ST_st18_fsm_17 == ap_CS_fsm) | (ap_ST_st19_fsm_18 == ap_CS_fsm) | (ap_ST_st20_fsm_19 == ap_CS_fsm) | (ap_ST_st21_fsm_20 == ap_CS_fsm))) begin
        indices_samples_size = grp_sample_iterator_get_offset_fu_192_indices_samples_size;
    end else begin
        indices_samples_size = 'bx;
    end
end

/// indices_stride_address assign process. ///
always @ (ap_CS_fsm or tmp_i_11_reg_323 or grp_sample_iterator_get_offset_fu_192_indices_stride_address or grp_sample_iterator_next_fu_209_indices_stride_address)
begin
    if (((ap_ST_st39_fsm_38 == ap_CS_fsm) | (ap_ST_st32_fsm_31 == ap_CS_fsm) | (ap_ST_st33_fsm_32 == ap_CS_fsm) | (ap_ST_st34_fsm_33 == ap_CS_fsm) | (ap_ST_st35_fsm_34 == ap_CS_fsm) | (ap_ST_st36_fsm_35 == ap_CS_fsm) | (ap_ST_st37_fsm_36 == ap_CS_fsm) | (ap_ST_st38_fsm_37 == ap_CS_fsm))) begin
        indices_stride_address = grp_sample_iterator_next_fu_209_indices_stride_address;
    end else if (((ap_ST_st22_fsm_21 == ap_CS_fsm) | ((ap_ST_st4_fsm_3 == ap_CS_fsm) & (tmp_i_11_reg_323 == ap_const_lv1_0)) | (ap_ST_st5_fsm_4 == ap_CS_fsm) | (ap_ST_st6_fsm_5 == ap_CS_fsm) | (ap_ST_st7_fsm_6 == ap_CS_fsm) | (ap_ST_st8_fsm_7 == ap_CS_fsm) | (ap_ST_st9_fsm_8 == ap_CS_fsm) | (ap_ST_st10_fsm_9 == ap_CS_fsm) | (ap_ST_st11_fsm_10 == ap_CS_fsm) | (ap_ST_st12_fsm_11 == ap_CS_fsm) | (ap_ST_st13_fsm_12 == ap_CS_fsm) | (ap_ST_st14_fsm_13 == ap_CS_fsm) | (ap_ST_st15_fsm_14 == ap_CS_fsm) | (ap_ST_st16_fsm_15 == ap_CS_fsm) | (ap_ST_st17_fsm_16 == ap_CS_fsm) | (ap_ST_st18_fsm_17 == ap_CS_fsm) | (ap_ST_st19_fsm_18 == ap_CS_fsm) | (ap_ST_st20_fsm_19 == ap_CS_fsm) | (ap_ST_st21_fsm_20 == ap_CS_fsm))) begin
        indices_stride_address = grp_sample_iterator_get_offset_fu_192_indices_stride_address;
    end else begin
        indices_stride_address = 'bx;
    end
end

/// indices_stride_dataout assign process. ///
always @ (ap_CS_fsm or tmp_i_11_reg_323 or grp_sample_iterator_get_offset_fu_192_indices_stride_dataout or grp_sample_iterator_next_fu_209_indices_stride_dataout)
begin
    if (((ap_ST_st39_fsm_38 == ap_CS_fsm) | (ap_ST_st32_fsm_31 == ap_CS_fsm) | (ap_ST_st33_fsm_32 == ap_CS_fsm) | (ap_ST_st34_fsm_33 == ap_CS_fsm) | (ap_ST_st35_fsm_34 == ap_CS_fsm) | (ap_ST_st36_fsm_35 == ap_CS_fsm) | (ap_ST_st37_fsm_36 == ap_CS_fsm) | (ap_ST_st38_fsm_37 == ap_CS_fsm))) begin
        indices_stride_dataout = grp_sample_iterator_next_fu_209_indices_stride_dataout;
    end else if (((ap_ST_st22_fsm_21 == ap_CS_fsm) | ((ap_ST_st4_fsm_3 == ap_CS_fsm) & (tmp_i_11_reg_323 == ap_const_lv1_0)) | (ap_ST_st5_fsm_4 == ap_CS_fsm) | (ap_ST_st6_fsm_5 == ap_CS_fsm) | (ap_ST_st7_fsm_6 == ap_CS_fsm) | (ap_ST_st8_fsm_7 == ap_CS_fsm) | (ap_ST_st9_fsm_8 == ap_CS_fsm) | (ap_ST_st10_fsm_9 == ap_CS_fsm) | (ap_ST_st11_fsm_10 == ap_CS_fsm) | (ap_ST_st12_fsm_11 == ap_CS_fsm) | (ap_ST_st13_fsm_12 == ap_CS_fsm) | (ap_ST_st14_fsm_13 == ap_CS_fsm) | (ap_ST_st15_fsm_14 == ap_CS_fsm) | (ap_ST_st16_fsm_15 == ap_CS_fsm) | (ap_ST_st17_fsm_16 == ap_CS_fsm) | (ap_ST_st18_fsm_17 == ap_CS_fsm) | (ap_ST_st19_fsm_18 == ap_CS_fsm) | (ap_ST_st20_fsm_19 == ap_CS_fsm) | (ap_ST_st21_fsm_20 == ap_CS_fsm))) begin
        indices_stride_dataout = grp_sample_iterator_get_offset_fu_192_indices_stride_dataout;
    end else begin
        indices_stride_dataout = 'bx;
    end
end

/// indices_stride_req_din assign process. ///
always @ (ap_CS_fsm or tmp_i_11_reg_323 or grp_sample_iterator_get_offset_fu_192_indices_stride_req_din or grp_sample_iterator_next_fu_209_indices_stride_req_din)
begin
    if (((ap_ST_st39_fsm_38 == ap_CS_fsm) | (ap_ST_st32_fsm_31 == ap_CS_fsm) | (ap_ST_st33_fsm_32 == ap_CS_fsm) | (ap_ST_st34_fsm_33 == ap_CS_fsm) | (ap_ST_st35_fsm_34 == ap_CS_fsm) | (ap_ST_st36_fsm_35 == ap_CS_fsm) | (ap_ST_st37_fsm_36 == ap_CS_fsm) | (ap_ST_st38_fsm_37 == ap_CS_fsm))) begin
        indices_stride_req_din = grp_sample_iterator_next_fu_209_indices_stride_req_din;
    end else if (((ap_ST_st22_fsm_21 == ap_CS_fsm) | ((ap_ST_st4_fsm_3 == ap_CS_fsm) & (tmp_i_11_reg_323 == ap_const_lv1_0)) | (ap_ST_st5_fsm_4 == ap_CS_fsm) | (ap_ST_st6_fsm_5 == ap_CS_fsm) | (ap_ST_st7_fsm_6 == ap_CS_fsm) | (ap_ST_st8_fsm_7 == ap_CS_fsm) | (ap_ST_st9_fsm_8 == ap_CS_fsm) | (ap_ST_st10_fsm_9 == ap_CS_fsm) | (ap_ST_st11_fsm_10 == ap_CS_fsm) | (ap_ST_st12_fsm_11 == ap_CS_fsm) | (ap_ST_st13_fsm_12 == ap_CS_fsm) | (ap_ST_st14_fsm_13 == ap_CS_fsm) | (ap_ST_st15_fsm_14 == ap_CS_fsm) | (ap_ST_st16_fsm_15 == ap_CS_fsm) | (ap_ST_st17_fsm_16 == ap_CS_fsm) | (ap_ST_st18_fsm_17 == ap_CS_fsm) | (ap_ST_st19_fsm_18 == ap_CS_fsm) | (ap_ST_st20_fsm_19 == ap_CS_fsm) | (ap_ST_st21_fsm_20 == ap_CS_fsm))) begin
        indices_stride_req_din = grp_sample_iterator_get_offset_fu_192_indices_stride_req_din;
    end else begin
        indices_stride_req_din = 'bx;
    end
end

/// indices_stride_req_write assign process. ///
always @ (ap_CS_fsm or tmp_i_11_reg_323 or grp_sample_iterator_get_offset_fu_192_indices_stride_req_write or grp_sample_iterator_next_fu_209_indices_stride_req_write)
begin
    if (((ap_ST_st39_fsm_38 == ap_CS_fsm) | (ap_ST_st32_fsm_31 == ap_CS_fsm) | (ap_ST_st33_fsm_32 == ap_CS_fsm) | (ap_ST_st34_fsm_33 == ap_CS_fsm) | (ap_ST_st35_fsm_34 == ap_CS_fsm) | (ap_ST_st36_fsm_35 == ap_CS_fsm) | (ap_ST_st37_fsm_36 == ap_CS_fsm) | (ap_ST_st38_fsm_37 == ap_CS_fsm))) begin
        indices_stride_req_write = grp_sample_iterator_next_fu_209_indices_stride_req_write;
    end else if (((ap_ST_st22_fsm_21 == ap_CS_fsm) | ((ap_ST_st4_fsm_3 == ap_CS_fsm) & (tmp_i_11_reg_323 == ap_const_lv1_0)) | (ap_ST_st5_fsm_4 == ap_CS_fsm) | (ap_ST_st6_fsm_5 == ap_CS_fsm) | (ap_ST_st7_fsm_6 == ap_CS_fsm) | (ap_ST_st8_fsm_7 == ap_CS_fsm) | (ap_ST_st9_fsm_8 == ap_CS_fsm) | (ap_ST_st10_fsm_9 == ap_CS_fsm) | (ap_ST_st11_fsm_10 == ap_CS_fsm) | (ap_ST_st12_fsm_11 == ap_CS_fsm) | (ap_ST_st13_fsm_12 == ap_CS_fsm) | (ap_ST_st14_fsm_13 == ap_CS_fsm) | (ap_ST_st15_fsm_14 == ap_CS_fsm) | (ap_ST_st16_fsm_15 == ap_CS_fsm) | (ap_ST_st17_fsm_16 == ap_CS_fsm) | (ap_ST_st18_fsm_17 == ap_CS_fsm) | (ap_ST_st19_fsm_18 == ap_CS_fsm) | (ap_ST_st20_fsm_19 == ap_CS_fsm) | (ap_ST_st21_fsm_20 == ap_CS_fsm))) begin
        indices_stride_req_write = grp_sample_iterator_get_offset_fu_192_indices_stride_req_write;
    end else begin
        indices_stride_req_write = 'bx;
    end
end

/// indices_stride_rsp_read assign process. ///
always @ (ap_CS_fsm or tmp_i_11_reg_323 or grp_sample_iterator_get_offset_fu_192_indices_stride_rsp_read or grp_sample_iterator_next_fu_209_indices_stride_rsp_read)
begin
    if (((ap_ST_st39_fsm_38 == ap_CS_fsm) | (ap_ST_st32_fsm_31 == ap_CS_fsm) | (ap_ST_st33_fsm_32 == ap_CS_fsm) | (ap_ST_st34_fsm_33 == ap_CS_fsm) | (ap_ST_st35_fsm_34 == ap_CS_fsm) | (ap_ST_st36_fsm_35 == ap_CS_fsm) | (ap_ST_st37_fsm_36 == ap_CS_fsm) | (ap_ST_st38_fsm_37 == ap_CS_fsm))) begin
        indices_stride_rsp_read = grp_sample_iterator_next_fu_209_indices_stride_rsp_read;
    end else if (((ap_ST_st22_fsm_21 == ap_CS_fsm) | ((ap_ST_st4_fsm_3 == ap_CS_fsm) & (tmp_i_11_reg_323 == ap_const_lv1_0)) | (ap_ST_st5_fsm_4 == ap_CS_fsm) | (ap_ST_st6_fsm_5 == ap_CS_fsm) | (ap_ST_st7_fsm_6 == ap_CS_fsm) | (ap_ST_st8_fsm_7 == ap_CS_fsm) | (ap_ST_st9_fsm_8 == ap_CS_fsm) | (ap_ST_st10_fsm_9 == ap_CS_fsm) | (ap_ST_st11_fsm_10 == ap_CS_fsm) | (ap_ST_st12_fsm_11 == ap_CS_fsm) | (ap_ST_st13_fsm_12 == ap_CS_fsm) | (ap_ST_st14_fsm_13 == ap_CS_fsm) | (ap_ST_st15_fsm_14 == ap_CS_fsm) | (ap_ST_st16_fsm_15 == ap_CS_fsm) | (ap_ST_st17_fsm_16 == ap_CS_fsm) | (ap_ST_st18_fsm_17 == ap_CS_fsm) | (ap_ST_st19_fsm_18 == ap_CS_fsm) | (ap_ST_st20_fsm_19 == ap_CS_fsm) | (ap_ST_st21_fsm_20 == ap_CS_fsm))) begin
        indices_stride_rsp_read = grp_sample_iterator_get_offset_fu_192_indices_stride_rsp_read;
    end else begin
        indices_stride_rsp_read = 'bx;
    end
end

/// indices_stride_size assign process. ///
always @ (ap_CS_fsm or tmp_i_11_reg_323 or grp_sample_iterator_get_offset_fu_192_indices_stride_size or grp_sample_iterator_next_fu_209_indices_stride_size)
begin
    if (((ap_ST_st39_fsm_38 == ap_CS_fsm) | (ap_ST_st32_fsm_31 == ap_CS_fsm) | (ap_ST_st33_fsm_32 == ap_CS_fsm) | (ap_ST_st34_fsm_33 == ap_CS_fsm) | (ap_ST_st35_fsm_34 == ap_CS_fsm) | (ap_ST_st36_fsm_35 == ap_CS_fsm) | (ap_ST_st37_fsm_36 == ap_CS_fsm) | (ap_ST_st38_fsm_37 == ap_CS_fsm))) begin
        indices_stride_size = grp_sample_iterator_next_fu_209_indices_stride_size;
    end else if (((ap_ST_st22_fsm_21 == ap_CS_fsm) | ((ap_ST_st4_fsm_3 == ap_CS_fsm) & (tmp_i_11_reg_323 == ap_const_lv1_0)) | (ap_ST_st5_fsm_4 == ap_CS_fsm) | (ap_ST_st6_fsm_5 == ap_CS_fsm) | (ap_ST_st7_fsm_6 == ap_CS_fsm) | (ap_ST_st8_fsm_7 == ap_CS_fsm) | (ap_ST_st9_fsm_8 == ap_CS_fsm) | (ap_ST_st10_fsm_9 == ap_CS_fsm) | (ap_ST_st11_fsm_10 == ap_CS_fsm) | (ap_ST_st12_fsm_11 == ap_CS_fsm) | (ap_ST_st13_fsm_12 == ap_CS_fsm) | (ap_ST_st14_fsm_13 == ap_CS_fsm) | (ap_ST_st15_fsm_14 == ap_CS_fsm) | (ap_ST_st16_fsm_15 == ap_CS_fsm) | (ap_ST_st17_fsm_16 == ap_CS_fsm) | (ap_ST_st18_fsm_17 == ap_CS_fsm) | (ap_ST_st19_fsm_18 == ap_CS_fsm) | (ap_ST_st20_fsm_19 == ap_CS_fsm) | (ap_ST_st21_fsm_20 == ap_CS_fsm))) begin
        indices_stride_size = grp_sample_iterator_get_offset_fu_192_indices_stride_size;
    end else begin
        indices_stride_size = 'bx;
    end
end
always @ (ap_start or ap_CS_fsm or stop_on_first_read_read_fu_102_p2 or tmp_i_11_reg_323 or grp_nfa_accept_sample_fu_176_ap_done or or_cond_fu_245_p2)
begin
    case (ap_CS_fsm)
        ap_ST_st1_fsm_0 : 
            if (~(ap_start == ap_const_logic_0)) begin
                ap_NS_fsm = ap_ST_st2_fsm_1;
            end else begin
                ap_NS_fsm = ap_ST_st1_fsm_0;
            end
        ap_ST_st2_fsm_1 : 
            ap_NS_fsm = ap_ST_st3_fsm_2;
        ap_ST_st3_fsm_2 : 
            ap_NS_fsm = ap_ST_st4_fsm_3;
        ap_ST_st4_fsm_3 : 
            if (~(tmp_i_11_reg_323 == ap_const_lv1_0)) begin
                ap_NS_fsm = ap_ST_st40_fsm_39;
            end else begin
                ap_NS_fsm = ap_ST_st5_fsm_4;
            end
        ap_ST_st5_fsm_4 : 
            ap_NS_fsm = ap_ST_st6_fsm_5;
        ap_ST_st6_fsm_5 : 
            ap_NS_fsm = ap_ST_st7_fsm_6;
        ap_ST_st7_fsm_6 : 
            ap_NS_fsm = ap_ST_st8_fsm_7;
        ap_ST_st8_fsm_7 : 
            ap_NS_fsm = ap_ST_st9_fsm_8;
        ap_ST_st9_fsm_8 : 
            ap_NS_fsm = ap_ST_st10_fsm_9;
        ap_ST_st10_fsm_9 : 
            ap_NS_fsm = ap_ST_st11_fsm_10;
        ap_ST_st11_fsm_10 : 
            ap_NS_fsm = ap_ST_st12_fsm_11;
        ap_ST_st12_fsm_11 : 
            ap_NS_fsm = ap_ST_st13_fsm_12;
        ap_ST_st13_fsm_12 : 
            ap_NS_fsm = ap_ST_st14_fsm_13;
        ap_ST_st14_fsm_13 : 
            ap_NS_fsm = ap_ST_st15_fsm_14;
        ap_ST_st15_fsm_14 : 
            ap_NS_fsm = ap_ST_st16_fsm_15;
        ap_ST_st16_fsm_15 : 
            ap_NS_fsm = ap_ST_st17_fsm_16;
        ap_ST_st17_fsm_16 : 
            ap_NS_fsm = ap_ST_st18_fsm_17;
        ap_ST_st18_fsm_17 : 
            ap_NS_fsm = ap_ST_st19_fsm_18;
        ap_ST_st19_fsm_18 : 
            ap_NS_fsm = ap_ST_st20_fsm_19;
        ap_ST_st20_fsm_19 : 
            ap_NS_fsm = ap_ST_st21_fsm_20;
        ap_ST_st21_fsm_20 : 
            ap_NS_fsm = ap_ST_st22_fsm_21;
        ap_ST_st22_fsm_21 : 
            ap_NS_fsm = ap_ST_st23_fsm_22;
        ap_ST_st23_fsm_22 : 
            if (~(ap_const_logic_0 == grp_nfa_accept_sample_fu_176_ap_done)) begin
                ap_NS_fsm = ap_ST_st24_fsm_23;
            end else begin
                ap_NS_fsm = ap_ST_st23_fsm_22;
            end
        ap_ST_st24_fsm_23 : 
            if ((~(stop_on_first_read_read_fu_102_p2 == ap_const_lv1_0) & (or_cond_fu_245_p2 == ap_const_lv1_0))) begin
                ap_NS_fsm = ap_ST_st40_fsm_39;
            end else if (((stop_on_first_read_read_fu_102_p2 == ap_const_lv1_0) & (or_cond_fu_245_p2 == ap_const_lv1_0))) begin
                ap_NS_fsm = ap_ST_st25_fsm_24;
            end else begin
                ap_NS_fsm = ap_ST_st32_fsm_31;
            end
        ap_ST_st25_fsm_24 : 
            ap_NS_fsm = ap_ST_st26_fsm_25;
        ap_ST_st26_fsm_25 : 
            ap_NS_fsm = ap_ST_st27_fsm_26;
        ap_ST_st27_fsm_26 : 
            ap_NS_fsm = ap_ST_st28_fsm_27;
        ap_ST_st28_fsm_27 : 
            ap_NS_fsm = ap_ST_st29_fsm_28;
        ap_ST_st29_fsm_28 : 
            ap_NS_fsm = ap_ST_st30_fsm_29;
        ap_ST_st30_fsm_29 : 
            ap_NS_fsm = ap_ST_st31_fsm_30;
        ap_ST_st31_fsm_30 : 
            ap_NS_fsm = ap_ST_st32_fsm_31;
        ap_ST_st32_fsm_31 : 
            ap_NS_fsm = ap_ST_st33_fsm_32;
        ap_ST_st33_fsm_32 : 
            ap_NS_fsm = ap_ST_st34_fsm_33;
        ap_ST_st34_fsm_33 : 
            ap_NS_fsm = ap_ST_st35_fsm_34;
        ap_ST_st35_fsm_34 : 
            ap_NS_fsm = ap_ST_st36_fsm_35;
        ap_ST_st36_fsm_35 : 
            ap_NS_fsm = ap_ST_st37_fsm_36;
        ap_ST_st37_fsm_36 : 
            ap_NS_fsm = ap_ST_st38_fsm_37;
        ap_ST_st38_fsm_37 : 
            ap_NS_fsm = ap_ST_st39_fsm_38;
        ap_ST_st39_fsm_38 : 
            ap_NS_fsm = ap_ST_st2_fsm_1;
        ap_ST_st40_fsm_39 : 
            ap_NS_fsm = ap_ST_st1_fsm_0;
        default : 
            ap_NS_fsm = 'bx;
    endcase
end
assign ap_return = p_0_reg_164;
assign grp_fu_249_ce = ap_const_logic_1;
assign grp_fu_249_p0 = c_load_reg_327;
assign grp_fu_249_p1 = ap_const_lv32_1;
assign grp_nfa_accept_sample_fu_176_ap_start = grp_nfa_accept_sample_fu_176_ap_start_ap_start_reg;
assign grp_nfa_accept_sample_fu_176_empty = offset_reg_333;
assign grp_nfa_accept_sample_fu_176_length_r = sample_length;
assign grp_nfa_accept_sample_fu_176_nfa_finals_buckets_datain = nfa_finals_buckets_datain;
assign grp_nfa_accept_sample_fu_176_nfa_finals_buckets_req_full_n = nfa_finals_buckets_req_full_n;
assign grp_nfa_accept_sample_fu_176_nfa_finals_buckets_rsp_empty_n = nfa_finals_buckets_rsp_empty_n;
assign grp_nfa_accept_sample_fu_176_nfa_forward_buckets_datain = nfa_forward_buckets_datain;
assign grp_nfa_accept_sample_fu_176_nfa_forward_buckets_req_full_n = nfa_forward_buckets_req_full_n;
assign grp_nfa_accept_sample_fu_176_nfa_forward_buckets_rsp_empty_n = nfa_forward_buckets_rsp_empty_n;
assign grp_nfa_accept_sample_fu_176_nfa_initials_buckets_datain = nfa_initials_buckets_datain;
assign grp_nfa_accept_sample_fu_176_nfa_initials_buckets_req_full_n = nfa_initials_buckets_req_full_n;
assign grp_nfa_accept_sample_fu_176_nfa_initials_buckets_rsp_empty_n = nfa_initials_buckets_rsp_empty_n;
assign grp_nfa_accept_sample_fu_176_nfa_symbols = nfa_symbols;
assign grp_nfa_accept_sample_fu_176_sample_datain = sample_buffer_datain;
assign grp_nfa_accept_sample_fu_176_sample_req_full_n = sample_buffer_req_full_n;
assign grp_nfa_accept_sample_fu_176_sample_rsp_empty_n = sample_buffer_rsp_empty_n;
assign grp_sample_iterator_get_offset_fu_192_ap_ce = ap_const_logic_1;
assign grp_sample_iterator_get_offset_fu_192_ap_start = grp_sample_iterator_get_offset_fu_192_ap_start_ap_start_reg;
assign grp_sample_iterator_get_offset_fu_192_i_index = i_index_reg_144;
assign grp_sample_iterator_get_offset_fu_192_i_sample = i_sample_reg_154;
assign grp_sample_iterator_get_offset_fu_192_indices_begin_datain = indices_begin_datain;
assign grp_sample_iterator_get_offset_fu_192_indices_begin_req_full_n = indices_begin_req_full_n;
assign grp_sample_iterator_get_offset_fu_192_indices_begin_rsp_empty_n = indices_begin_rsp_empty_n;
assign grp_sample_iterator_get_offset_fu_192_indices_samples_datain = indices_samples_datain;
assign grp_sample_iterator_get_offset_fu_192_indices_samples_req_full_n = indices_samples_req_full_n;
assign grp_sample_iterator_get_offset_fu_192_indices_samples_rsp_empty_n = indices_samples_rsp_empty_n;
assign grp_sample_iterator_get_offset_fu_192_indices_stride_datain = indices_stride_datain;
assign grp_sample_iterator_get_offset_fu_192_indices_stride_req_full_n = indices_stride_req_full_n;
assign grp_sample_iterator_get_offset_fu_192_indices_stride_rsp_empty_n = indices_stride_rsp_empty_n;
assign grp_sample_iterator_get_offset_fu_192_sample_buffer_size = sample_buffer_length;
assign grp_sample_iterator_get_offset_fu_192_sample_length = sample_length;
assign grp_sample_iterator_next_fu_209_ap_ce = ap_const_logic_1;
assign grp_sample_iterator_next_fu_209_ap_start = grp_sample_iterator_next_fu_209_ap_start_ap_start_reg;
assign grp_sample_iterator_next_fu_209_i_index = i_index_reg_144;
assign grp_sample_iterator_next_fu_209_i_sample = i_sample_reg_154;
assign grp_sample_iterator_next_fu_209_indices_begin_datain = indices_begin_datain;
assign grp_sample_iterator_next_fu_209_indices_begin_req_full_n = indices_begin_req_full_n;
assign grp_sample_iterator_next_fu_209_indices_begin_rsp_empty_n = indices_begin_rsp_empty_n;
assign grp_sample_iterator_next_fu_209_indices_samples_datain = indices_samples_datain;
assign grp_sample_iterator_next_fu_209_indices_samples_req_full_n = indices_samples_req_full_n;
assign grp_sample_iterator_next_fu_209_indices_samples_rsp_empty_n = indices_samples_rsp_empty_n;
assign grp_sample_iterator_next_fu_209_indices_stride_datain = indices_stride_datain;
assign grp_sample_iterator_next_fu_209_indices_stride_req_full_n = indices_stride_req_full_n;
assign grp_sample_iterator_next_fu_209_indices_stride_rsp_empty_n = indices_stride_rsp_empty_n;
assign nfa_finals_buckets_address = grp_nfa_accept_sample_fu_176_nfa_finals_buckets_address;
assign nfa_finals_buckets_dataout = grp_nfa_accept_sample_fu_176_nfa_finals_buckets_dataout;
assign nfa_finals_buckets_req_din = grp_nfa_accept_sample_fu_176_nfa_finals_buckets_req_din;
assign nfa_finals_buckets_req_write = grp_nfa_accept_sample_fu_176_nfa_finals_buckets_req_write;
assign nfa_finals_buckets_rsp_read = grp_nfa_accept_sample_fu_176_nfa_finals_buckets_rsp_read;
assign nfa_finals_buckets_size = grp_nfa_accept_sample_fu_176_nfa_finals_buckets_size;
assign nfa_forward_buckets_address = grp_nfa_accept_sample_fu_176_nfa_forward_buckets_address;
assign nfa_forward_buckets_dataout = grp_nfa_accept_sample_fu_176_nfa_forward_buckets_dataout;
assign nfa_forward_buckets_req_din = grp_nfa_accept_sample_fu_176_nfa_forward_buckets_req_din;
assign nfa_forward_buckets_req_write = grp_nfa_accept_sample_fu_176_nfa_forward_buckets_req_write;
assign nfa_forward_buckets_rsp_read = grp_nfa_accept_sample_fu_176_nfa_forward_buckets_rsp_read;
assign nfa_forward_buckets_size = grp_nfa_accept_sample_fu_176_nfa_forward_buckets_size;
assign nfa_initials_buckets_address = grp_nfa_accept_sample_fu_176_nfa_initials_buckets_address;
assign nfa_initials_buckets_dataout = grp_nfa_accept_sample_fu_176_nfa_initials_buckets_dataout;
assign nfa_initials_buckets_req_din = grp_nfa_accept_sample_fu_176_nfa_initials_buckets_req_din;
assign nfa_initials_buckets_req_write = grp_nfa_accept_sample_fu_176_nfa_initials_buckets_req_write;
assign nfa_initials_buckets_rsp_read = grp_nfa_accept_sample_fu_176_nfa_initials_buckets_rsp_read;
assign nfa_initials_buckets_size = grp_nfa_accept_sample_fu_176_nfa_initials_buckets_size;
assign or_cond_fu_245_p2 = (r_reg_338 ^ accept);
assign sample_buffer_address = grp_nfa_accept_sample_fu_176_sample_address;
assign sample_buffer_dataout = grp_nfa_accept_sample_fu_176_sample_dataout;
assign sample_buffer_req_din = grp_nfa_accept_sample_fu_176_sample_req_din;
assign sample_buffer_req_write = grp_nfa_accept_sample_fu_176_sample_req_write;
assign sample_buffer_rsp_read = grp_nfa_accept_sample_fu_176_sample_rsp_read;
assign sample_buffer_size = grp_nfa_accept_sample_fu_176_sample_size;
assign stop_on_first_read_read_fu_102_p2 = stop_on_first;
assign tmp_i_10_fu_233_p2 = (i_index_reg_144 == end_index? 1'b1: 1'b0);
assign tmp_i_11_fu_238_p2 = (tmp_i_reg_313 & tmp_i_10_reg_318);
assign tmp_i_fu_228_p2 = (i_sample_reg_154 == end_sample? 1'b1: 1'b0);


endmodule //nfa_accept_samples_generic_hw

