

================================================================
== Vivado HLS Report for 'nfa_accept_sample'
================================================================
* Date:           Thu Apr 17 08:58:49 2014

* Version:        2013.4 (build date: Mon Dec 09 17:07:59 PM 2013)
* Project:        oil_plainc_hls
* Solution:       solution_spartan3
* Product family: spartan3a spartan3a_fpv5 
* Target device:  xc3s200avq100-5


================================================================
== Performance Estimates
================================================================
+ Timing (ns): 
    * Summary: 
    +---------+-------+----------+------------+
    |  Clock  | Target| Estimated| Uncertainty|
    +---------+-------+----------+------------+
    |default  |   1.00|      3.45|        0.13|
    +---------+-------+----------+------------+

+ Latency (clock cycles): 
    * Summary: 
    +-----+---------+-----+---------+---------+
    |    Latency    |    Interval   | Pipeline|
    | min |   max   | min |   max   |   Type  |
    +-----+---------+-----+---------+---------+
    |   12|  1266719|   12|  1266719|   none  |
    +-----+---------+-----+---------+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +-------------+-----+---------+-----------+-----------+-----------+----------+----------+
        |             |    Latency    | Iteration |  Initiation Interval  |   Trip   |          |
        |  Loop Name  | min |   max   |  Latency  |  achieved |   target  |   Count  | Pipelined|
        +-------------+-----+---------+-----------+-----------+-----------+----------+----------+
        |- Loop 1     |    7|  1266708| 18 ~ 1237 |          -|          -| 0 ~ 1024 |    no    |
        | + Loop 1.1  |    0|     1216|         19|          -|          -|  0 ~ 64  |    no    |
        +-------------+-----+---------+-----------+-----------+-----------+----------+----------+



================================================================
== Utilization Estimates
================================================================
* Summary: 
+-----------------+---------+------+------+----------+
|       Name      | BRAM_18K|  FF  |  LUT | MULT18x18|
+-----------------+---------+------+------+----------+
|Expression       |        -|     -|     -|         -|
|FIFO             |        -|     -|     -|         -|
|Instance         |        -|     -|     -|         -|
|Memory           |        -|     -|     -|         -|
|Multiplexer      |        -|     -|     -|         -|
|Register         |        -|     -|     -|         -|
|ShiftMemory      |        -|     -|     -|         -|
+-----------------+---------+------+------+----------+
|Total            |        0|     0|     0|         0|
+-----------------+---------+------+------+----------+
|Available        |       16|  3584|  3584|        16|
+-----------------+---------+------+------+----------+
|Utilization (%)  |        0|     0|     0|         0|
+-----------------+---------+------+------+----------+

+ Detail: 
    * Instance: 
    N/A

    * Memory: 
    N/A

    * FIFO: 
    N/A

    * Shift register: 
    N/A

    * Expression: 
    N/A

    * Multiplexer: 
    N/A

    * Register: 
    N/A



================================================================
== Interface
================================================================
* Summary: 
N/A

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states: 50
* Pipeline: 0
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 
	2  / true
2 --> 
	3  / true
3 --> 
	4  / true
4 --> 
	5  / true
5 --> 
	6  / true
6 --> 
	7  / true
7 --> 
	8  / true
8 --> 
	9  / true
9 --> 
	10  / true
10 --> 
	11  / true
11 --> 
	12  / true
12 --> 
	13  / (tmp_s)
	44  / (!tmp_s)
13 --> 
	14  / true
14 --> 
	15  / true
15 --> 
	16  / true
16 --> 
	17  / true
17 --> 
	18  / true
18 --> 
	19  / true
19 --> 
	20  / (tmp_17_i)
	21  / (!tmp_17_i)
20 --> 
	21  / (!tmp_17_1_i)
	24  / (tmp_17_1_i)
21 --> 
	22  / true
22 --> 
	23  / true
23 --> 
	24  / true
24 --> 
	25  / true
25 --> 
	26  / (!j_end)
	50  / (j_end & !any)
	5  / (j_end & any)
26 --> 
	27  / true
27 --> 
	28  / true
28 --> 
	29  / true
29 --> 
	30  / true
30 --> 
	31  / true
31 --> 
	32  / true
32 --> 
	33  / true
33 --> 
	34  / true
34 --> 
	35  / true
35 --> 
	36  / true
36 --> 
	37  / true
37 --> 
	38  / true
38 --> 
	39  / true
39 --> 
	40  / true
40 --> 
	41  / true
41 --> 
	42  / true
42 --> 
	43  / true
43 --> 
	25  / true
44 --> 
	45  / true
45 --> 
	46  / true
46 --> 
	47  / true
47 --> 
	48  / true
48 --> 
	49  / true
49 --> 
	50  / true
50 --> 
* FSM state operations: 

 <State 1>: 0.00ns
ST_1: call_ret2 [3/3] 0.00ns
:15  %call_ret2 = call fastcc { i32, i32 } @nfa_get_initials(i32* %nfa_initials_buckets)


 <State 2>: 0.88ns
ST_2: call_ret2 [2/3] 0.88ns
:15  %call_ret2 = call fastcc { i32, i32 } @nfa_get_initials(i32* %nfa_initials_buckets)


 <State 3>: 0.88ns
ST_3: call_ret2 [1/3] 0.88ns
:15  %call_ret2 = call fastcc { i32, i32 } @nfa_get_initials(i32* %nfa_initials_buckets)

ST_3: current_buckets_0 [1/1] 0.00ns
:16  %current_buckets_0 = extractvalue { i32, i32 } %call_ret2, 0

ST_3: current_buckets_1 [1/1] 0.00ns
:17  %current_buckets_1 = extractvalue { i32, i32 } %call_ret2, 1


 <State 4>: 0.88ns
ST_4: stg_56 [1/1] 0.00ns
:0  call void (...)* @_ssdm_op_SpecIFCore(i8* %sample, [1 x i8]* @p_str1132, [7 x i8]* @p_str38, [1 x i8]* @p_str1132, [1 x i8]* @p_str1132, [1 x i8]* @p_str1132, [1 x i8]* @p_str1132)

ST_4: stg_57 [1/1] 0.00ns
:1  call void (...)* @_ssdm_op_SpecIFCore(i32* %nfa_forward_buckets, [1 x i8]* @p_str1132, [7 x i8]* @p_str38, [1 x i8]* @p_str1132, [1 x i8]* @p_str1132, [1 x i8]* @p_str1132, [1 x i8]* @p_str1132)

ST_4: stg_58 [1/1] 0.00ns
:2  call void (...)* @_ssdm_op_SpecBus(i8* %sample, [7 x i8]* @p_str35, i32 0, i32 0, i32 0, [1 x i8]* @p_str1132)

ST_4: stg_59 [1/1] 0.00ns
:3  call void (...)* @_ssdm_op_SpecBus(i32* %nfa_forward_buckets, [7 x i8]* @p_str35, i32 0, i32 0, i32 0, [1 x i8]* @p_str1132)

ST_4: length_read [1/1] 0.00ns
:4  %length_read = call i16 @_ssdm_op_Read.ap_auto.i16(i16 %length_r)

ST_4: tmp_4 [1/1] 0.00ns
:5  %tmp_4 = call i32 @_ssdm_op_Read.ap_auto.i32(i32 %empty)

ST_4: sample_addr [1/1] 0.00ns
:6  %sample_addr = getelementptr i8* %sample, i32 %tmp_4

ST_4: stg_63 [1/1] 0.00ns
:7  call void (...)* @_ssdm_op_SpecIFCore(i8* %nfa_symbols, [1 x i8]* @p_str1132, [7 x i8]* @p_str39, [1 x i8]* @p_str1132, [1 x i8]* @p_str1132, [1 x i8]* @p_str1132, [17 x i8]* @p_str40)

ST_4: stg_64 [1/1] 0.00ns
:8  call void (...)* @_ssdm_op_SpecIFCore(i32* %nfa_finals_buckets, [1 x i8]* @p_str1132, [7 x i8]* @p_str38, [1 x i8]* @p_str1132, [1 x i8]* @p_str1132, [1 x i8]* @p_str1132, [1 x i8]* @p_str1132)

ST_4: stg_65 [1/1] 0.00ns
:9  call void (...)* @_ssdm_op_SpecIFCore(i32* %nfa_initials_buckets, [1 x i8]* @p_str1132, [7 x i8]* @p_str38, [1 x i8]* @p_str1132, [1 x i8]* @p_str1132, [1 x i8]* @p_str1132, [1 x i8]* @p_str1132)

ST_4: stg_66 [1/1] 0.00ns
:10  call void (...)* @_ssdm_op_SpecBus(i32* %nfa_finals_buckets, [7 x i8]* @p_str35, i32 0, i32 0, i32 0, [1 x i8]* @p_str1132)

ST_4: stg_67 [1/1] 0.00ns
:11  call void (...)* @_ssdm_op_SpecBus(i32* %nfa_initials_buckets, [7 x i8]* @p_str35, i32 0, i32 0, i32 0, [1 x i8]* @p_str1132)

ST_4: stg_68 [1/1] 0.00ns
:12  call void (...)* @_ssdm_op_SpecIFCore(i16 %length_r, [1 x i8]* @p_str1132, [7 x i8]* @p_str39, [1 x i8]* @p_str1132, [1 x i8]* @p_str1132, [1 x i8]* @p_str1132, [17 x i8]* @p_str40)

ST_4: stg_69 [1/1] 0.00ns
:13  call void (...)* @_ssdm_op_SpecBus(i8* %sample_addr, [7 x i8]* @p_str35, i32 0, i32 0, i32 0, [1 x i8]* @p_str1132) nounwind

ST_4: stg_70 [1/1] 0.00ns
:14  call void (...)* @_ssdm_op_SpecPipeline(i32 1, i32 1, i32 1, [1 x i8]* @p_str1132) nounwind

ST_4: stg_71 [1/1] 0.88ns
:18  br label %1


 <State 5>: 3.16ns
ST_5: i [1/1] 0.00ns
:2  %i = phi i16 [ 0, %0 ], [ %i_1, %6 ]

ST_5: p_01_rec [1/1] 0.00ns
:3  %p_01_rec = phi i32 [ 0, %0 ], [ %p_rec, %6 ]

ST_5: sum [8/8] 1.16ns
:4  %sum = add i32 %p_01_rec, %tmp_4

ST_5: tmp_s [1/1] 3.16ns
:6  %tmp_s = icmp ult i16 %i, %length_read

ST_5: i_1 [4/4] 1.16ns
:7  %i_1 = add i16 %i, 1


 <State 6>: 1.16ns
ST_6: sum [7/8] 1.16ns
:4  %sum = add i32 %p_01_rec, %tmp_4

ST_6: i_1 [3/4] 1.16ns
:7  %i_1 = add i16 %i, 1


 <State 7>: 1.16ns
ST_7: sum [6/8] 1.16ns
:4  %sum = add i32 %p_01_rec, %tmp_4

ST_7: i_1 [2/4] 1.16ns
:7  %i_1 = add i16 %i, 1


 <State 8>: 1.16ns
ST_8: sum [5/8] 1.16ns
:4  %sum = add i32 %p_01_rec, %tmp_4

ST_8: i_1 [1/4] 1.16ns
:7  %i_1 = add i16 %i, 1


 <State 9>: 1.16ns
ST_9: sum [4/8] 1.16ns
:4  %sum = add i32 %p_01_rec, %tmp_4


 <State 10>: 1.16ns
ST_10: sum [3/8] 1.16ns
:4  %sum = add i32 %p_01_rec, %tmp_4


 <State 11>: 1.16ns
ST_11: sum [2/8] 1.16ns
:4  %sum = add i32 %p_01_rec, %tmp_4


 <State 12>: 1.16ns
ST_12: next_buckets_1 [1/1] 0.00ns
:0  %next_buckets_1 = phi i32 [ %current_buckets_1, %0 ], [ %tmp_buckets_1_3, %6 ]

ST_12: next_buckets_0 [1/1] 0.00ns
:1  %next_buckets_0 = phi i32 [ %current_buckets_0, %0 ], [ %tmp_buckets_0_3, %6 ]

ST_12: sum [1/8] 1.16ns
:4  %sum = add i32 %p_01_rec, %tmp_4

ST_12: sample_addr_1 [1/1] 0.00ns
:5  %sample_addr_1 = getelementptr i8* %sample, i32 %sum

ST_12: stg_90 [1/1] 0.00ns
:8  br i1 %tmp_s, label %2, label %7

ST_12: p_rec [8/8] 1.16ns
:2  %p_rec = add i32 %p_01_rec, 1

ST_12: call_ret4 [3/3] 0.00ns
:0  %call_ret4 = call fastcc { i32, i32 } @nfa_get_finals(i32* %nfa_finals_buckets)


 <State 13>: 1.16ns
ST_13: p_rec [7/8] 1.16ns
:2  %p_rec = add i32 %p_01_rec, 1


 <State 14>: 1.16ns
ST_14: p_rec [6/8] 1.16ns
:2  %p_rec = add i32 %p_01_rec, 1


 <State 15>: 1.16ns
ST_15: p_rec [5/8] 1.16ns
:2  %p_rec = add i32 %p_01_rec, 1


 <State 16>: 1.16ns
ST_16: p_rec [4/8] 1.16ns
:2  %p_rec = add i32 %p_01_rec, 1


 <State 17>: 1.16ns
ST_17: p_rec [3/8] 1.16ns
:2  %p_rec = add i32 %p_01_rec, 1


 <State 18>: 3.45ns
ST_18: p_rec [2/8] 1.16ns
:2  %p_rec = add i32 %p_01_rec, 1

ST_18: sym_req [1/1] 0.88ns
:3  %sym_req = call i1 @_ssdm_op_ReadReq.ap_bus.i8P(i8* %sample_addr_1, i32 1)

ST_18: tmp_17_i [1/1] 3.45ns
:5  %tmp_17_i = icmp eq i32 %next_buckets_0, 0


 <State 19>: 3.45ns
ST_19: tmp [1/1] 0.00ns
:0  %tmp = call i32 (...)* @_ssdm_op_SpecRegionBegin([12 x i8]* @p_str1233)

ST_19: stg_102 [1/1] 0.00ns
:1  call void (...)* @_ssdm_op_SpecLoopTripCount(i32 0, i32 1024, i32 512, [1 x i8]* @p_str1132) nounwind

ST_19: p_rec [1/8] 1.16ns
:2  %p_rec = add i32 %p_01_rec, 1

ST_19: sym [1/1] 0.88ns
:4  %sym = call i8 @_ssdm_op_Read.ap_bus.i8P(i8* %sample_addr_1)

ST_19: stg_105 [1/1] 0.88ns
:6  br i1 %tmp_17_i, label %4, label %3

ST_19: tmp_17_1_i [1/1] 3.45ns
:0  %tmp_17_1_i = icmp eq i32 %next_buckets_1, 0


 <State 20>: 0.88ns
ST_20: stg_107 [1/1] 0.88ns
:1  br i1 %tmp_17_1_i, label %bitset_first.exit.preheader, label %3


 <State 21>: 0.88ns
ST_21: bus_assign [1/1] 0.00ns
:0  %bus_assign = phi i32 [ %next_buckets_0, %2 ], [ %next_buckets_1, %4 ]

ST_21: r_bit [2/2] 0.88ns
:3  %r_bit = call fastcc zeroext i5 @_bsf32_hw(i32 %bus_assign) nounwind


 <State 22>: 0.88ns
ST_22: r_bit [1/2] 0.88ns
:3  %r_bit = call fastcc zeroext i5 @_bsf32_hw(i32 %bus_assign) nounwind


 <State 23>: 0.88ns
ST_23: agg_result_bucket_index_0_lcssa4_i [1/1] 0.00ns
:1  %agg_result_bucket_index_0_lcssa4_i = phi i1 [ false, %2 ], [ true, %4 ]

ST_23: agg_result_bucket_index_0_lcssa4_i_cast_cast [1/1] 0.00ns
:2  %agg_result_bucket_index_0_lcssa4_i_cast_cast = zext i1 %agg_result_bucket_index_0_lcssa4_i to i2

ST_23: stg_113 [1/1] 0.88ns
:4  br label %bitset_first.exit.preheader


 <State 24>: 0.88ns
ST_24: j_bucket1_ph [1/1] 0.00ns
bitset_first.exit.preheader:0  %j_bucket1_ph = phi i32 [ 0, %4 ], [ %bus_assign, %3 ]

ST_24: j_bucket_index1_ph [1/1] 0.00ns
bitset_first.exit.preheader:1  %j_bucket_index1_ph = phi i2 [ -2, %4 ], [ %agg_result_bucket_index_0_lcssa4_i_cast_cast, %3 ]

ST_24: j_bit1_ph [1/1] 0.00ns
bitset_first.exit.preheader:2  %j_bit1_ph = phi i5 [ undef, %4 ], [ %r_bit, %3 ]

ST_24: j_end_ph [1/1] 0.00ns
bitset_first.exit.preheader:3  %j_end_ph = phi i1 [ true, %4 ], [ false, %3 ]

ST_24: j_bucket_index1_ph_cast [1/1] 0.00ns
bitset_first.exit.preheader:4  %j_bucket_index1_ph_cast = zext i2 %j_bucket_index1_ph to i8

ST_24: j_bit1_ph_cast [1/1] 0.00ns
bitset_first.exit.preheader:5  %j_bit1_ph_cast = zext i5 %j_bit1_ph to i8

ST_24: tmp_7_i_cast [1/1] 0.00ns
bitset_first.exit.preheader:6  %tmp_7_i_cast = zext i8 %sym to i14

ST_24: stg_121 [1/1] 0.88ns
bitset_first.exit.preheader:7  br label %bitset_first.exit


 <State 25>: 1.16ns
ST_25: tmp_buckets_1_3 [1/1] 0.00ns
bitset_first.exit:0  %tmp_buckets_1_3 = phi i32 [ %next_buckets_1_1, %bitset_element.exit ], [ 0, %bitset_first.exit.preheader ]

ST_25: tmp_buckets_0_3 [1/1] 0.00ns
bitset_first.exit:1  %tmp_buckets_0_3 = phi i32 [ %next_buckets_0_1, %bitset_element.exit ], [ 0, %bitset_first.exit.preheader ]

ST_25: j_bucket1 [1/1] 0.00ns
bitset_first.exit:2  %j_bucket1 = phi i32 [ %j_bucket, %bitset_element.exit ], [ %j_bucket1_ph, %bitset_first.exit.preheader ]

ST_25: j_bucket_index1 [1/1] 0.00ns
bitset_first.exit:3  %j_bucket_index1 = phi i8 [ %j_bucket_index, %bitset_element.exit ], [ %j_bucket_index1_ph_cast, %bitset_first.exit.preheader ]

ST_25: j_bit1 [1/1] 0.00ns
bitset_first.exit:4  %j_bit1 = phi i8 [ %j_bit, %bitset_element.exit ], [ %j_bit1_ph_cast, %bitset_first.exit.preheader ]

ST_25: j_end [1/1] 0.00ns
bitset_first.exit:5  %j_end = phi i1 [ %p_s, %bitset_element.exit ], [ %j_end_ph, %bitset_first.exit.preheader ]

ST_25: any [1/1] 0.00ns
bitset_first.exit:6  %any = phi i1 [ true, %bitset_element.exit ], [ false, %bitset_first.exit.preheader ]

ST_25: stg_129 [1/1] 0.00ns
bitset_first.exit:7  br i1 %j_end, label %5, label %bitset_element.exit

ST_25: tmp_5 [1/1] 0.00ns
bitset_element.exit:2  %tmp_5 = trunc i8 %j_bucket_index1 to i1

ST_25: tmp_i [1/1] 0.00ns
bitset_element.exit:3  %tmp_i = call i6 @_ssdm_op_BitConcatenate.i6.i1.i5(i1 %tmp_5, i5 0)

ST_25: tmp_6 [1/1] 0.00ns
bitset_element.exit:4  %tmp_6 = trunc i8 %j_bit1 to i6

ST_25: state [2/2] 1.16ns
bitset_element.exit:5  %state = add i6 %tmp_i, %tmp_6

ST_25: call_ret8 [12/12] 0.00ns
bitset_element.exit:26  %call_ret8 = call fastcc { i8, i8, i32, i1 } @bitset_next(i32 %next_buckets_1, i8 %j_bit1, i8 %j_bucket_index1, i32 %j_bucket1)

ST_25: stg_135 [1/1] 0.88ns
:0  br i1 %any, label %6, label %.loopexit

ST_25: empty_13 [1/1] 0.00ns
:0  %empty_13 = call i32 (...)* @_ssdm_op_SpecRegionEnd([12 x i8]* @p_str1233, i32 %tmp)

ST_25: stg_137 [1/1] 0.00ns
:1  br label %1


 <State 26>: 3.45ns
ST_26: state [1/2] 1.16ns
bitset_element.exit:5  %state = add i6 %tmp_i, %tmp_6

ST_26: call_ret8 [11/12] 3.45ns
bitset_element.exit:26  %call_ret8 = call fastcc { i8, i8, i32, i1 } @bitset_next(i32 %next_buckets_1, i8 %j_bit1, i8 %j_bucket_index1, i32 %j_bucket1)


 <State 27>: 3.45ns
ST_27: nfa_symbols_read [1/1] 0.00ns
bitset_element.exit:8  %nfa_symbols_read = call i8 @_ssdm_op_Read.ap_auto.i8P(i8* %nfa_symbols)

ST_27: tmp_3_i_cast [1/1] 0.00ns
bitset_element.exit:9  %tmp_3_i_cast = zext i6 %state to i14

ST_27: tmp_5_i_cast [1/1] 0.00ns
bitset_element.exit:10  %tmp_5_i_cast = zext i8 %nfa_symbols_read to i14

ST_27: tmp_6_i [9/9] 0.82ns
bitset_element.exit:11  %tmp_6_i = mul i14 %tmp_5_i_cast, %tmp_3_i_cast

ST_27: call_ret8 [10/12] 3.45ns
bitset_element.exit:26  %call_ret8 = call fastcc { i8, i8, i32, i1 } @bitset_next(i32 %next_buckets_1, i8 %j_bit1, i8 %j_bucket_index1, i32 %j_bucket1)


 <State 28>: 3.45ns
ST_28: tmp_6_i [8/9] 0.82ns
bitset_element.exit:11  %tmp_6_i = mul i14 %tmp_5_i_cast, %tmp_3_i_cast

ST_28: call_ret8 [9/12] 3.45ns
bitset_element.exit:26  %call_ret8 = call fastcc { i8, i8, i32, i1 } @bitset_next(i32 %next_buckets_1, i8 %j_bit1, i8 %j_bucket_index1, i32 %j_bucket1)


 <State 29>: 3.45ns
ST_29: tmp_6_i [7/9] 0.82ns
bitset_element.exit:11  %tmp_6_i = mul i14 %tmp_5_i_cast, %tmp_3_i_cast

ST_29: call_ret8 [8/12] 3.45ns
bitset_element.exit:26  %call_ret8 = call fastcc { i8, i8, i32, i1 } @bitset_next(i32 %next_buckets_1, i8 %j_bit1, i8 %j_bucket_index1, i32 %j_bucket1)


 <State 30>: 3.45ns
ST_30: tmp_6_i [6/9] 0.82ns
bitset_element.exit:11  %tmp_6_i = mul i14 %tmp_5_i_cast, %tmp_3_i_cast

ST_30: call_ret8 [7/12] 3.45ns
bitset_element.exit:26  %call_ret8 = call fastcc { i8, i8, i32, i1 } @bitset_next(i32 %next_buckets_1, i8 %j_bit1, i8 %j_bucket_index1, i32 %j_bucket1)


 <State 31>: 3.45ns
ST_31: tmp_6_i [5/9] 0.82ns
bitset_element.exit:11  %tmp_6_i = mul i14 %tmp_5_i_cast, %tmp_3_i_cast

ST_31: call_ret8 [6/12] 3.45ns
bitset_element.exit:26  %call_ret8 = call fastcc { i8, i8, i32, i1 } @bitset_next(i32 %next_buckets_1, i8 %j_bit1, i8 %j_bucket_index1, i32 %j_bucket1)


 <State 32>: 3.45ns
ST_32: tmp_6_i [4/9] 0.82ns
bitset_element.exit:11  %tmp_6_i = mul i14 %tmp_5_i_cast, %tmp_3_i_cast

ST_32: call_ret8 [5/12] 3.45ns
bitset_element.exit:26  %call_ret8 = call fastcc { i8, i8, i32, i1 } @bitset_next(i32 %next_buckets_1, i8 %j_bit1, i8 %j_bucket_index1, i32 %j_bucket1)


 <State 33>: 3.45ns
ST_33: tmp_6_i [3/9] 0.82ns
bitset_element.exit:11  %tmp_6_i = mul i14 %tmp_5_i_cast, %tmp_3_i_cast

ST_33: call_ret8 [4/12] 3.45ns
bitset_element.exit:26  %call_ret8 = call fastcc { i8, i8, i32, i1 } @bitset_next(i32 %next_buckets_1, i8 %j_bit1, i8 %j_bucket_index1, i32 %j_bucket1)


 <State 34>: 3.45ns
ST_34: tmp_6_i [2/9] 0.82ns
bitset_element.exit:11  %tmp_6_i = mul i14 %tmp_5_i_cast, %tmp_3_i_cast

ST_34: call_ret8 [3/12] 3.45ns
bitset_element.exit:26  %call_ret8 = call fastcc { i8, i8, i32, i1 } @bitset_next(i32 %next_buckets_1, i8 %j_bit1, i8 %j_bucket_index1, i32 %j_bucket1)


 <State 35>: 3.45ns
ST_35: tmp_6_i [1/9] 0.82ns
bitset_element.exit:11  %tmp_6_i = mul i14 %tmp_5_i_cast, %tmp_3_i_cast

ST_35: call_ret8 [2/12] 3.45ns
bitset_element.exit:26  %call_ret8 = call fastcc { i8, i8, i32, i1 } @bitset_next(i32 %next_buckets_1, i8 %j_bit1, i8 %j_bucket_index1, i32 %j_bucket1)


 <State 36>: 1.16ns
ST_36: offset_i [4/4] 1.16ns
bitset_element.exit:12  %offset_i = add i14 %tmp_6_i, %tmp_7_i_cast

ST_36: call_ret8 [1/12] 0.88ns
bitset_element.exit:26  %call_ret8 = call fastcc { i8, i8, i32, i1 } @bitset_next(i32 %next_buckets_1, i8 %j_bit1, i8 %j_bucket_index1, i32 %j_bucket1)

ST_36: j_bit [1/1] 0.00ns
bitset_element.exit:27  %j_bit = extractvalue { i8, i8, i32, i1 } %call_ret8, 0

ST_36: j_bucket_index [1/1] 0.00ns
bitset_element.exit:28  %j_bucket_index = extractvalue { i8, i8, i32, i1 } %call_ret8, 1

ST_36: j_bucket [1/1] 0.00ns
bitset_element.exit:29  %j_bucket = extractvalue { i8, i8, i32, i1 } %call_ret8, 2

ST_36: p_s [1/1] 0.00ns
bitset_element.exit:30  %p_s = extractvalue { i8, i8, i32, i1 } %call_ret8, 3


 <State 37>: 1.16ns
ST_37: offset_i [3/4] 1.16ns
bitset_element.exit:12  %offset_i = add i14 %tmp_6_i, %tmp_7_i_cast


 <State 38>: 1.16ns
ST_38: offset_i [2/4] 1.16ns
bitset_element.exit:12  %offset_i = add i14 %tmp_6_i, %tmp_7_i_cast


 <State 39>: 1.16ns
ST_39: offset_i [1/4] 1.16ns
bitset_element.exit:12  %offset_i = add i14 %tmp_6_i, %tmp_7_i_cast


 <State 40>: 0.88ns
ST_40: tmp_4_i [1/1] 0.00ns
bitset_element.exit:13  %tmp_4_i = call i15 @_ssdm_op_BitConcatenate.i15.i14.i1(i14 %offset_i, i1 false)

ST_40: tmp_4_i_cast [1/1] 0.00ns
bitset_element.exit:14  %tmp_4_i_cast = zext i15 %tmp_4_i to i32

ST_40: nfa_forward_buckets_addr [1/1] 0.00ns
bitset_element.exit:15  %nfa_forward_buckets_addr = getelementptr i32* %nfa_forward_buckets, i32 %tmp_4_i_cast

ST_40: tmp_buckets_0_2_req [1/1] 0.88ns
bitset_element.exit:16  %tmp_buckets_0_2_req = call i1 @_ssdm_op_ReadReq.ap_bus.i32P(i32* %nfa_forward_buckets_addr, i32 1)


 <State 41>: 0.88ns
ST_41: tmp_buckets_0_1 [1/1] 0.88ns
bitset_element.exit:17  %tmp_buckets_0_1 = call i32 @_ssdm_op_Read.ap_bus.i32P(i32* %nfa_forward_buckets_addr)

ST_41: tmp_8_i [1/1] 0.00ns
bitset_element.exit:18  %tmp_8_i = call i15 @_ssdm_op_BitConcatenate.i15.i14.i1(i14 %offset_i, i1 true)

ST_41: tmp_8_i_cast [1/1] 0.00ns
bitset_element.exit:19  %tmp_8_i_cast = zext i15 %tmp_8_i to i32

ST_41: nfa_forward_buckets_addr_1 [1/1] 0.00ns
bitset_element.exit:20  %nfa_forward_buckets_addr_1 = getelementptr i32* %nfa_forward_buckets, i32 %tmp_8_i_cast

ST_41: tmp_buckets_1_2_req [1/1] 0.88ns
bitset_element.exit:21  %tmp_buckets_1_2_req = call i1 @_ssdm_op_ReadReq.ap_bus.i32P(i32* %nfa_forward_buckets_addr_1, i32 1)


 <State 42>: 1.80ns
ST_42: tmp_buckets_1_1 [1/1] 0.88ns
bitset_element.exit:22  %tmp_buckets_1_1 = call i32 @_ssdm_op_Read.ap_bus.i32P(i32* %nfa_forward_buckets_addr_1)

ST_42: next_buckets_0_1 [1/1] 1.80ns
bitset_element.exit:23  %next_buckets_0_1 = or i32 %tmp_buckets_0_3, %tmp_buckets_0_1


 <State 43>: 1.80ns
ST_43: tmp_3 [1/1] 0.00ns
bitset_element.exit:0  %tmp_3 = call i32 (...)* @_ssdm_op_SpecRegionBegin([12 x i8]* @p_str13)

ST_43: stg_182 [1/1] 0.00ns
bitset_element.exit:1  call void (...)* @_ssdm_op_SpecLoopTripCount(i32 0, i32 64, i32 5, [1 x i8]* @p_str1132) nounwind

ST_43: stg_183 [1/1] 0.00ns
bitset_element.exit:6  call void (...)* @_ssdm_op_SpecIFCore(i8* %nfa_symbols, [1 x i8]* @p_str1132, [7 x i8]* @p_str39, [1 x i8]* @p_str1132, [1 x i8]* @p_str1132, [1 x i8]* @p_str1132, [17 x i8]* @p_str40)

ST_43: stg_184 [1/1] 0.00ns
bitset_element.exit:7  call void (...)* @_ssdm_op_SpecIFCore(i8* %nfa_symbols, [1 x i8]* @p_str1132, [7 x i8]* @p_str39, [1 x i8]* @p_str1132, [1 x i8]* @p_str1132, [1 x i8]* @p_str1132, [17 x i8]* @p_str40)

ST_43: next_buckets_1_1 [1/1] 1.80ns
bitset_element.exit:24  %next_buckets_1_1 = or i32 %tmp_buckets_1_3, %tmp_buckets_1_1

ST_43: empty_12 [1/1] 0.00ns
bitset_element.exit:25  %empty_12 = call i32 (...)* @_ssdm_op_SpecRegionEnd([12 x i8]* @p_str13, i32 %tmp_3)

ST_43: stg_187 [1/1] 0.00ns
bitset_element.exit:31  br label %bitset_first.exit


 <State 44>: 0.88ns
ST_44: call_ret4 [2/3] 0.88ns
:0  %call_ret4 = call fastcc { i32, i32 } @nfa_get_finals(i32* %nfa_finals_buckets)


 <State 45>: 0.88ns
ST_45: call_ret4 [1/3] 0.88ns
:0  %call_ret4 = call fastcc { i32, i32 } @nfa_get_finals(i32* %nfa_finals_buckets)

ST_45: tmp_buckets_0 [1/1] 0.00ns
:1  %tmp_buckets_0 = extractvalue { i32, i32 } %call_ret4, 0

ST_45: tmp_buckets_1 [1/1] 0.00ns
:2  %tmp_buckets_1 = extractvalue { i32, i32 } %call_ret4, 1


 <State 46>: 1.80ns
ST_46: current_buckets_0_1 [1/1] 1.80ns
:3  %current_buckets_0_1 = and i32 %next_buckets_0, %tmp_buckets_0

ST_46: current_buckets_1_1 [1/1] 1.80ns
:4  %current_buckets_1_1 = and i32 %next_buckets_1, %tmp_buckets_1


 <State 47>: 1.80ns
ST_47: tmp_1 [1/1] 1.80ns
:5  %tmp_1 = or i32 %current_buckets_1_1, %current_buckets_0_1


 <State 48>: 3.45ns
ST_48: tmp_2 [1/1] 3.45ns
:6  %tmp_2 = icmp ne i32 %tmp_1, 0


 <State 49>: 0.88ns
ST_49: stg_196 [1/1] 0.88ns
:7  br label %.loopexit


 <State 50>: 0.00ns
ST_50: p_0 [1/1] 0.00ns
.loopexit:0  %p_0 = phi i1 [ %tmp_2, %7 ], [ false, %5 ]

ST_50: stg_198 [1/1] 0.00ns
.loopexit:1  ret i1 %p_0



============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7
	State 8
	State 9
	State 10
	State 11
	State 12
	State 13
	State 14
	State 15
	State 16
	State 17
	State 18
	State 19
	State 20
	State 21
	State 22
	State 23
	State 24
	State 25
	State 26
	State 27
	State 28
	State 29
	State 30
	State 31
	State 32
	State 33
	State 34
	State 35
	State 36
	State 37
	State 38
	State 39
	State 40
	State 41
	State 42
	State 43
	State 44
	State 45
	State 46
	State 47
	State 48
	State 49
	State 50


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
