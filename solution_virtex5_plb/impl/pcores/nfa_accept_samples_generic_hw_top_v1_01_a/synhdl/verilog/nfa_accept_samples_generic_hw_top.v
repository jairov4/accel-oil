// ==============================================================
// File generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2014.1
// Copyright (C) 2014 Xilinx Inc. All rights reserved.
// 
// ==============================================================

`timescale 1 ns / 1 ps
module nfa_accept_samples_generic_hw_top (
nfa_initials_buckets_MPLB_Clk,
nfa_initials_buckets_MPLB_Rst,
nfa_initials_buckets_M_request,
nfa_initials_buckets_M_priority,
nfa_initials_buckets_M_busLock,
nfa_initials_buckets_M_RNW,
nfa_initials_buckets_M_BE,
nfa_initials_buckets_M_MSize,
nfa_initials_buckets_M_size,
nfa_initials_buckets_M_type,
nfa_initials_buckets_M_TAttribute,
nfa_initials_buckets_M_lockErr,
nfa_initials_buckets_M_abort,
nfa_initials_buckets_M_UABus,
nfa_initials_buckets_M_ABus,
nfa_initials_buckets_M_wrDBus,
nfa_initials_buckets_M_wrBurst,
nfa_initials_buckets_M_rdBurst,
nfa_initials_buckets_PLB_MAddrAck,
nfa_initials_buckets_PLB_MSSize,
nfa_initials_buckets_PLB_MRearbitrate,
nfa_initials_buckets_PLB_MTimeout,
nfa_initials_buckets_PLB_MBusy,
nfa_initials_buckets_PLB_MRdErr,
nfa_initials_buckets_PLB_MWrErr,
nfa_initials_buckets_PLB_MIRQ,
nfa_initials_buckets_PLB_MRdDBus,
nfa_initials_buckets_PLB_MRdWdAddr,
nfa_initials_buckets_PLB_MRdDAck,
nfa_initials_buckets_PLB_MRdBTerm,
nfa_initials_buckets_PLB_MWrDAck,
nfa_initials_buckets_PLB_MWrBTerm,
nfa_finals_buckets_MPLB_Clk,
nfa_finals_buckets_MPLB_Rst,
nfa_finals_buckets_M_request,
nfa_finals_buckets_M_priority,
nfa_finals_buckets_M_busLock,
nfa_finals_buckets_M_RNW,
nfa_finals_buckets_M_BE,
nfa_finals_buckets_M_MSize,
nfa_finals_buckets_M_size,
nfa_finals_buckets_M_type,
nfa_finals_buckets_M_TAttribute,
nfa_finals_buckets_M_lockErr,
nfa_finals_buckets_M_abort,
nfa_finals_buckets_M_UABus,
nfa_finals_buckets_M_ABus,
nfa_finals_buckets_M_wrDBus,
nfa_finals_buckets_M_wrBurst,
nfa_finals_buckets_M_rdBurst,
nfa_finals_buckets_PLB_MAddrAck,
nfa_finals_buckets_PLB_MSSize,
nfa_finals_buckets_PLB_MRearbitrate,
nfa_finals_buckets_PLB_MTimeout,
nfa_finals_buckets_PLB_MBusy,
nfa_finals_buckets_PLB_MRdErr,
nfa_finals_buckets_PLB_MWrErr,
nfa_finals_buckets_PLB_MIRQ,
nfa_finals_buckets_PLB_MRdDBus,
nfa_finals_buckets_PLB_MRdWdAddr,
nfa_finals_buckets_PLB_MRdDAck,
nfa_finals_buckets_PLB_MRdBTerm,
nfa_finals_buckets_PLB_MWrDAck,
nfa_finals_buckets_PLB_MWrBTerm,
nfa_forward_buckets_MPLB_Clk,
nfa_forward_buckets_MPLB_Rst,
nfa_forward_buckets_M_request,
nfa_forward_buckets_M_priority,
nfa_forward_buckets_M_busLock,
nfa_forward_buckets_M_RNW,
nfa_forward_buckets_M_BE,
nfa_forward_buckets_M_MSize,
nfa_forward_buckets_M_size,
nfa_forward_buckets_M_type,
nfa_forward_buckets_M_TAttribute,
nfa_forward_buckets_M_lockErr,
nfa_forward_buckets_M_abort,
nfa_forward_buckets_M_UABus,
nfa_forward_buckets_M_ABus,
nfa_forward_buckets_M_wrDBus,
nfa_forward_buckets_M_wrBurst,
nfa_forward_buckets_M_rdBurst,
nfa_forward_buckets_PLB_MAddrAck,
nfa_forward_buckets_PLB_MSSize,
nfa_forward_buckets_PLB_MRearbitrate,
nfa_forward_buckets_PLB_MTimeout,
nfa_forward_buckets_PLB_MBusy,
nfa_forward_buckets_PLB_MRdErr,
nfa_forward_buckets_PLB_MWrErr,
nfa_forward_buckets_PLB_MIRQ,
nfa_forward_buckets_PLB_MRdDBus,
nfa_forward_buckets_PLB_MRdWdAddr,
nfa_forward_buckets_PLB_MRdDAck,
nfa_forward_buckets_PLB_MRdBTerm,
nfa_forward_buckets_PLB_MWrDAck,
nfa_forward_buckets_PLB_MWrBTerm,
sample_buffer_MPLB_Clk,
sample_buffer_MPLB_Rst,
sample_buffer_M_request,
sample_buffer_M_priority,
sample_buffer_M_busLock,
sample_buffer_M_RNW,
sample_buffer_M_BE,
sample_buffer_M_MSize,
sample_buffer_M_size,
sample_buffer_M_type,
sample_buffer_M_TAttribute,
sample_buffer_M_lockErr,
sample_buffer_M_abort,
sample_buffer_M_UABus,
sample_buffer_M_ABus,
sample_buffer_M_wrDBus,
sample_buffer_M_wrBurst,
sample_buffer_M_rdBurst,
sample_buffer_PLB_MAddrAck,
sample_buffer_PLB_MSSize,
sample_buffer_PLB_MRearbitrate,
sample_buffer_PLB_MTimeout,
sample_buffer_PLB_MBusy,
sample_buffer_PLB_MRdErr,
sample_buffer_PLB_MWrErr,
sample_buffer_PLB_MIRQ,
sample_buffer_PLB_MRdDBus,
sample_buffer_PLB_MRdWdAddr,
sample_buffer_PLB_MRdDAck,
sample_buffer_PLB_MRdBTerm,
sample_buffer_PLB_MWrDAck,
sample_buffer_PLB_MWrBTerm,
indices_MPLB_Clk,
indices_MPLB_Rst,
indices_M_request,
indices_M_priority,
indices_M_busLock,
indices_M_RNW,
indices_M_BE,
indices_M_MSize,
indices_M_size,
indices_M_type,
indices_M_TAttribute,
indices_M_lockErr,
indices_M_abort,
indices_M_UABus,
indices_M_ABus,
indices_M_wrDBus,
indices_M_wrBurst,
indices_M_rdBurst,
indices_PLB_MAddrAck,
indices_PLB_MSSize,
indices_PLB_MRearbitrate,
indices_PLB_MTimeout,
indices_PLB_MBusy,
indices_PLB_MRdErr,
indices_PLB_MWrErr,
indices_PLB_MIRQ,
indices_PLB_MRdDBus,
indices_PLB_MRdWdAddr,
indices_PLB_MRdDAck,
indices_PLB_MRdBTerm,
indices_PLB_MWrDAck,
indices_PLB_MWrBTerm,
splb_slv0_SPLB_Clk,
splb_slv0_SPLB_Rst,
splb_slv0_PLB_ABus,
splb_slv0_PLB_UABus,
splb_slv0_PLB_PAValid,
splb_slv0_PLB_SAValid,
splb_slv0_PLB_rdPrim,
splb_slv0_PLB_wrPrim,
splb_slv0_PLB_masterID,
splb_slv0_PLB_abort,
splb_slv0_PLB_busLock,
splb_slv0_PLB_RNW,
splb_slv0_PLB_BE,
splb_slv0_PLB_MSize,
splb_slv0_PLB_size,
splb_slv0_PLB_type,
splb_slv0_PLB_lockErr,
splb_slv0_PLB_wrDBus,
splb_slv0_PLB_wrBurst,
splb_slv0_PLB_rdBurst,
splb_slv0_PLB_wrPendReq,
splb_slv0_PLB_rdPendReq,
splb_slv0_PLB_wrPendPri,
splb_slv0_PLB_rdPendPri,
splb_slv0_PLB_reqPri,
splb_slv0_PLB_TAttribute,
splb_slv0_Sl_addrAck,
splb_slv0_Sl_SSize,
splb_slv0_Sl_wait,
splb_slv0_Sl_rearbitrate,
splb_slv0_Sl_wrDAck,
splb_slv0_Sl_wrComp,
splb_slv0_Sl_wrBTerm,
splb_slv0_Sl_rdDBus,
splb_slv0_Sl_rdWdAddr,
splb_slv0_Sl_rdDAck,
splb_slv0_Sl_rdComp,
splb_slv0_Sl_rdBTerm,
splb_slv0_Sl_MBusy,
splb_slv0_Sl_MWrErr,
splb_slv0_Sl_MRdErr,
splb_slv0_Sl_MIRQ,
aresetn,
aclk
);

parameter C_nfa_initials_buckets_REMOTE_DESTINATION_ADDRESS = 32'h00000000;
parameter C_nfa_initials_buckets_AWIDTH = 32;
parameter C_nfa_initials_buckets_DWIDTH = 64;
parameter C_nfa_initials_buckets_NATIVE_DWIDTH = 64;
parameter C_nfa_finals_buckets_REMOTE_DESTINATION_ADDRESS = 32'h00000000;
parameter C_nfa_finals_buckets_AWIDTH = 32;
parameter C_nfa_finals_buckets_DWIDTH = 64;
parameter C_nfa_finals_buckets_NATIVE_DWIDTH = 64;
parameter C_nfa_forward_buckets_REMOTE_DESTINATION_ADDRESS = 32'h00000000;
parameter C_nfa_forward_buckets_AWIDTH = 32;
parameter C_nfa_forward_buckets_DWIDTH = 64;
parameter C_nfa_forward_buckets_NATIVE_DWIDTH = 64;
parameter C_sample_buffer_REMOTE_DESTINATION_ADDRESS = 32'h00000000;
parameter C_sample_buffer_AWIDTH = 32;
parameter C_sample_buffer_DWIDTH = 64;
parameter C_sample_buffer_NATIVE_DWIDTH = 64;
parameter C_indices_REMOTE_DESTINATION_ADDRESS = 32'h00000000;
parameter C_indices_AWIDTH = 32;
parameter C_indices_DWIDTH = 64;
parameter C_indices_NATIVE_DWIDTH = 64;
parameter C_SPLB_SLV0_BASEADDR = 32'h00000000;
parameter C_SPLB_SLV0_HIGHADDR = 32'h0000000F;
parameter C_SPLB_SLV0_AWIDTH = 32;
parameter C_SPLB_SLV0_DWIDTH = 32;
parameter C_SPLB_SLV0_NUM_MASTERS = 8;
parameter C_SPLB_SLV0_MID_WIDTH = 3;
parameter C_SPLB_SLV0_NATIVE_DWIDTH = 32;
parameter C_SPLB_SLV0_P2P = 0;
parameter C_SPLB_SLV0_SUPPORT_BURSTS = 0;
parameter C_SPLB_SLV0_SMALLEST_MASTER = 32;
parameter C_SPLB_SLV0_INCLUDE_DPHASE_TIMER = 0;
parameter RESET_ACTIVE_LOW = 1;
input nfa_initials_buckets_MPLB_Clk ;
input nfa_initials_buckets_MPLB_Rst ;
output nfa_initials_buckets_M_request ;
output [2 - 1:0] nfa_initials_buckets_M_priority ;
output nfa_initials_buckets_M_busLock ;
output nfa_initials_buckets_M_RNW ;
output [C_nfa_initials_buckets_DWIDTH/8 - 1:0] nfa_initials_buckets_M_BE ;
output [2 - 1:0] nfa_initials_buckets_M_MSize ;
output [4 - 1:0] nfa_initials_buckets_M_size ;
output [3 - 1:0] nfa_initials_buckets_M_type ;
output [16 - 1:0] nfa_initials_buckets_M_TAttribute ;
output nfa_initials_buckets_M_lockErr ;
output nfa_initials_buckets_M_abort ;
output [32 - 1:0] nfa_initials_buckets_M_UABus ;
output [32 - 1:0] nfa_initials_buckets_M_ABus ;
output [C_nfa_initials_buckets_DWIDTH - 1:0] nfa_initials_buckets_M_wrDBus ;
output nfa_initials_buckets_M_wrBurst ;
output nfa_initials_buckets_M_rdBurst ;
input nfa_initials_buckets_PLB_MAddrAck ;
input [2 - 1:0] nfa_initials_buckets_PLB_MSSize ;
input nfa_initials_buckets_PLB_MRearbitrate ;
input nfa_initials_buckets_PLB_MTimeout ;
input nfa_initials_buckets_PLB_MBusy ;
input nfa_initials_buckets_PLB_MRdErr ;
input nfa_initials_buckets_PLB_MWrErr ;
input nfa_initials_buckets_PLB_MIRQ ;
input [C_nfa_initials_buckets_DWIDTH - 1:0] nfa_initials_buckets_PLB_MRdDBus ;
input [4 - 1:0] nfa_initials_buckets_PLB_MRdWdAddr ;
input nfa_initials_buckets_PLB_MRdDAck ;
input nfa_initials_buckets_PLB_MRdBTerm ;
input nfa_initials_buckets_PLB_MWrDAck ;
input nfa_initials_buckets_PLB_MWrBTerm ;

input nfa_finals_buckets_MPLB_Clk ;
input nfa_finals_buckets_MPLB_Rst ;
output nfa_finals_buckets_M_request ;
output [2 - 1:0] nfa_finals_buckets_M_priority ;
output nfa_finals_buckets_M_busLock ;
output nfa_finals_buckets_M_RNW ;
output [C_nfa_finals_buckets_DWIDTH/8 - 1:0] nfa_finals_buckets_M_BE ;
output [2 - 1:0] nfa_finals_buckets_M_MSize ;
output [4 - 1:0] nfa_finals_buckets_M_size ;
output [3 - 1:0] nfa_finals_buckets_M_type ;
output [16 - 1:0] nfa_finals_buckets_M_TAttribute ;
output nfa_finals_buckets_M_lockErr ;
output nfa_finals_buckets_M_abort ;
output [32 - 1:0] nfa_finals_buckets_M_UABus ;
output [32 - 1:0] nfa_finals_buckets_M_ABus ;
output [C_nfa_finals_buckets_DWIDTH - 1:0] nfa_finals_buckets_M_wrDBus ;
output nfa_finals_buckets_M_wrBurst ;
output nfa_finals_buckets_M_rdBurst ;
input nfa_finals_buckets_PLB_MAddrAck ;
input [2 - 1:0] nfa_finals_buckets_PLB_MSSize ;
input nfa_finals_buckets_PLB_MRearbitrate ;
input nfa_finals_buckets_PLB_MTimeout ;
input nfa_finals_buckets_PLB_MBusy ;
input nfa_finals_buckets_PLB_MRdErr ;
input nfa_finals_buckets_PLB_MWrErr ;
input nfa_finals_buckets_PLB_MIRQ ;
input [C_nfa_finals_buckets_DWIDTH - 1:0] nfa_finals_buckets_PLB_MRdDBus ;
input [4 - 1:0] nfa_finals_buckets_PLB_MRdWdAddr ;
input nfa_finals_buckets_PLB_MRdDAck ;
input nfa_finals_buckets_PLB_MRdBTerm ;
input nfa_finals_buckets_PLB_MWrDAck ;
input nfa_finals_buckets_PLB_MWrBTerm ;

input nfa_forward_buckets_MPLB_Clk ;
input nfa_forward_buckets_MPLB_Rst ;
output nfa_forward_buckets_M_request ;
output [2 - 1:0] nfa_forward_buckets_M_priority ;
output nfa_forward_buckets_M_busLock ;
output nfa_forward_buckets_M_RNW ;
output [C_nfa_forward_buckets_DWIDTH/8 - 1:0] nfa_forward_buckets_M_BE ;
output [2 - 1:0] nfa_forward_buckets_M_MSize ;
output [4 - 1:0] nfa_forward_buckets_M_size ;
output [3 - 1:0] nfa_forward_buckets_M_type ;
output [16 - 1:0] nfa_forward_buckets_M_TAttribute ;
output nfa_forward_buckets_M_lockErr ;
output nfa_forward_buckets_M_abort ;
output [32 - 1:0] nfa_forward_buckets_M_UABus ;
output [32 - 1:0] nfa_forward_buckets_M_ABus ;
output [C_nfa_forward_buckets_DWIDTH - 1:0] nfa_forward_buckets_M_wrDBus ;
output nfa_forward_buckets_M_wrBurst ;
output nfa_forward_buckets_M_rdBurst ;
input nfa_forward_buckets_PLB_MAddrAck ;
input [2 - 1:0] nfa_forward_buckets_PLB_MSSize ;
input nfa_forward_buckets_PLB_MRearbitrate ;
input nfa_forward_buckets_PLB_MTimeout ;
input nfa_forward_buckets_PLB_MBusy ;
input nfa_forward_buckets_PLB_MRdErr ;
input nfa_forward_buckets_PLB_MWrErr ;
input nfa_forward_buckets_PLB_MIRQ ;
input [C_nfa_forward_buckets_DWIDTH - 1:0] nfa_forward_buckets_PLB_MRdDBus ;
input [4 - 1:0] nfa_forward_buckets_PLB_MRdWdAddr ;
input nfa_forward_buckets_PLB_MRdDAck ;
input nfa_forward_buckets_PLB_MRdBTerm ;
input nfa_forward_buckets_PLB_MWrDAck ;
input nfa_forward_buckets_PLB_MWrBTerm ;

input sample_buffer_MPLB_Clk ;
input sample_buffer_MPLB_Rst ;
output sample_buffer_M_request ;
output [2 - 1:0] sample_buffer_M_priority ;
output sample_buffer_M_busLock ;
output sample_buffer_M_RNW ;
output [C_sample_buffer_DWIDTH/8 - 1:0] sample_buffer_M_BE ;
output [2 - 1:0] sample_buffer_M_MSize ;
output [4 - 1:0] sample_buffer_M_size ;
output [3 - 1:0] sample_buffer_M_type ;
output [16 - 1:0] sample_buffer_M_TAttribute ;
output sample_buffer_M_lockErr ;
output sample_buffer_M_abort ;
output [32 - 1:0] sample_buffer_M_UABus ;
output [32 - 1:0] sample_buffer_M_ABus ;
output [C_sample_buffer_DWIDTH - 1:0] sample_buffer_M_wrDBus ;
output sample_buffer_M_wrBurst ;
output sample_buffer_M_rdBurst ;
input sample_buffer_PLB_MAddrAck ;
input [2 - 1:0] sample_buffer_PLB_MSSize ;
input sample_buffer_PLB_MRearbitrate ;
input sample_buffer_PLB_MTimeout ;
input sample_buffer_PLB_MBusy ;
input sample_buffer_PLB_MRdErr ;
input sample_buffer_PLB_MWrErr ;
input sample_buffer_PLB_MIRQ ;
input [C_sample_buffer_DWIDTH - 1:0] sample_buffer_PLB_MRdDBus ;
input [4 - 1:0] sample_buffer_PLB_MRdWdAddr ;
input sample_buffer_PLB_MRdDAck ;
input sample_buffer_PLB_MRdBTerm ;
input sample_buffer_PLB_MWrDAck ;
input sample_buffer_PLB_MWrBTerm ;

input indices_MPLB_Clk ;
input indices_MPLB_Rst ;
output indices_M_request ;
output [2 - 1:0] indices_M_priority ;
output indices_M_busLock ;
output indices_M_RNW ;
output [C_indices_DWIDTH/8 - 1:0] indices_M_BE ;
output [2 - 1:0] indices_M_MSize ;
output [4 - 1:0] indices_M_size ;
output [3 - 1:0] indices_M_type ;
output [16 - 1:0] indices_M_TAttribute ;
output indices_M_lockErr ;
output indices_M_abort ;
output [32 - 1:0] indices_M_UABus ;
output [32 - 1:0] indices_M_ABus ;
output [C_indices_DWIDTH - 1:0] indices_M_wrDBus ;
output indices_M_wrBurst ;
output indices_M_rdBurst ;
input indices_PLB_MAddrAck ;
input [2 - 1:0] indices_PLB_MSSize ;
input indices_PLB_MRearbitrate ;
input indices_PLB_MTimeout ;
input indices_PLB_MBusy ;
input indices_PLB_MRdErr ;
input indices_PLB_MWrErr ;
input indices_PLB_MIRQ ;
input [C_indices_DWIDTH - 1:0] indices_PLB_MRdDBus ;
input [4 - 1:0] indices_PLB_MRdWdAddr ;
input indices_PLB_MRdDAck ;
input indices_PLB_MRdBTerm ;
input indices_PLB_MWrDAck ;
input indices_PLB_MWrBTerm ;

input splb_slv0_SPLB_Clk ;
input splb_slv0_SPLB_Rst ;
input [32 - 1:0] splb_slv0_PLB_ABus ;
input [32 - 1:0] splb_slv0_PLB_UABus ;
input splb_slv0_PLB_PAValid ;
input splb_slv0_PLB_SAValid ;
input splb_slv0_PLB_rdPrim ;
input splb_slv0_PLB_wrPrim ;
input [C_SPLB_SLV0_MID_WIDTH - 1:0] splb_slv0_PLB_masterID ;
input splb_slv0_PLB_abort ;
input splb_slv0_PLB_busLock ;
input splb_slv0_PLB_RNW ;
input [C_SPLB_SLV0_DWIDTH/8 - 1:0] splb_slv0_PLB_BE ;
input [2 - 1:0] splb_slv0_PLB_MSize ;
input [4 - 1:0] splb_slv0_PLB_size ;
input [3 - 1:0] splb_slv0_PLB_type ;
input splb_slv0_PLB_lockErr ;
input [C_SPLB_SLV0_DWIDTH - 1:0] splb_slv0_PLB_wrDBus ;
input splb_slv0_PLB_wrBurst ;
input splb_slv0_PLB_rdBurst ;
input splb_slv0_PLB_wrPendReq ;
input splb_slv0_PLB_rdPendReq ;
input [2 - 1:0] splb_slv0_PLB_wrPendPri ;
input [2 - 1:0] splb_slv0_PLB_rdPendPri ;
input [2 - 1:0] splb_slv0_PLB_reqPri ;
input [16 - 1:0] splb_slv0_PLB_TAttribute ;
output splb_slv0_Sl_addrAck ;
output [2 - 1:0] splb_slv0_Sl_SSize ;
output splb_slv0_Sl_wait ;
output splb_slv0_Sl_rearbitrate ;
output splb_slv0_Sl_wrDAck ;
output splb_slv0_Sl_wrComp ;
output splb_slv0_Sl_wrBTerm ;
output [C_SPLB_SLV0_DWIDTH - 1:0] splb_slv0_Sl_rdDBus ;
output [4 - 1:0] splb_slv0_Sl_rdWdAddr ;
output splb_slv0_Sl_rdDAck ;
output splb_slv0_Sl_rdComp ;
output splb_slv0_Sl_rdBTerm ;
output [C_SPLB_SLV0_NUM_MASTERS - 1:0] splb_slv0_Sl_MBusy ;
output [C_SPLB_SLV0_NUM_MASTERS - 1:0] splb_slv0_Sl_MWrErr ;
output [C_SPLB_SLV0_NUM_MASTERS - 1:0] splb_slv0_Sl_MRdErr ;
output [C_SPLB_SLV0_NUM_MASTERS - 1:0] splb_slv0_Sl_MIRQ ;

input aresetn ;

input aclk ;

wire nfa_initials_buckets_MPLB_Clk;
wire nfa_initials_buckets_MPLB_Rst;
wire nfa_initials_buckets_M_request;
wire [2 - 1:0] nfa_initials_buckets_M_priority;
wire nfa_initials_buckets_M_busLock;
wire nfa_initials_buckets_M_RNW;
wire [C_nfa_initials_buckets_DWIDTH/8 - 1:0] nfa_initials_buckets_M_BE;
wire [2 - 1:0] nfa_initials_buckets_M_MSize;
wire [4 - 1:0] nfa_initials_buckets_M_size;
wire [3 - 1:0] nfa_initials_buckets_M_type;
wire [16 - 1:0] nfa_initials_buckets_M_TAttribute;
wire nfa_initials_buckets_M_lockErr;
wire nfa_initials_buckets_M_abort;
wire [32 - 1:0] nfa_initials_buckets_M_UABus;
wire [32 - 1:0] nfa_initials_buckets_M_ABus;
wire [C_nfa_initials_buckets_DWIDTH - 1:0] nfa_initials_buckets_M_wrDBus;
wire nfa_initials_buckets_M_wrBurst;
wire nfa_initials_buckets_M_rdBurst;
wire nfa_initials_buckets_PLB_MAddrAck;
wire [2 - 1:0] nfa_initials_buckets_PLB_MSSize;
wire nfa_initials_buckets_PLB_MRearbitrate;
wire nfa_initials_buckets_PLB_MTimeout;
wire nfa_initials_buckets_PLB_MBusy;
wire nfa_initials_buckets_PLB_MRdErr;
wire nfa_initials_buckets_PLB_MWrErr;
wire nfa_initials_buckets_PLB_MIRQ;
wire [C_nfa_initials_buckets_DWIDTH - 1:0] nfa_initials_buckets_PLB_MRdDBus;
wire [4 - 1:0] nfa_initials_buckets_PLB_MRdWdAddr;
wire nfa_initials_buckets_PLB_MRdDAck;
wire nfa_initials_buckets_PLB_MRdBTerm;
wire nfa_initials_buckets_PLB_MWrDAck;
wire nfa_initials_buckets_PLB_MWrBTerm;

wire nfa_finals_buckets_MPLB_Clk;
wire nfa_finals_buckets_MPLB_Rst;
wire nfa_finals_buckets_M_request;
wire [2 - 1:0] nfa_finals_buckets_M_priority;
wire nfa_finals_buckets_M_busLock;
wire nfa_finals_buckets_M_RNW;
wire [C_nfa_finals_buckets_DWIDTH/8 - 1:0] nfa_finals_buckets_M_BE;
wire [2 - 1:0] nfa_finals_buckets_M_MSize;
wire [4 - 1:0] nfa_finals_buckets_M_size;
wire [3 - 1:0] nfa_finals_buckets_M_type;
wire [16 - 1:0] nfa_finals_buckets_M_TAttribute;
wire nfa_finals_buckets_M_lockErr;
wire nfa_finals_buckets_M_abort;
wire [32 - 1:0] nfa_finals_buckets_M_UABus;
wire [32 - 1:0] nfa_finals_buckets_M_ABus;
wire [C_nfa_finals_buckets_DWIDTH - 1:0] nfa_finals_buckets_M_wrDBus;
wire nfa_finals_buckets_M_wrBurst;
wire nfa_finals_buckets_M_rdBurst;
wire nfa_finals_buckets_PLB_MAddrAck;
wire [2 - 1:0] nfa_finals_buckets_PLB_MSSize;
wire nfa_finals_buckets_PLB_MRearbitrate;
wire nfa_finals_buckets_PLB_MTimeout;
wire nfa_finals_buckets_PLB_MBusy;
wire nfa_finals_buckets_PLB_MRdErr;
wire nfa_finals_buckets_PLB_MWrErr;
wire nfa_finals_buckets_PLB_MIRQ;
wire [C_nfa_finals_buckets_DWIDTH - 1:0] nfa_finals_buckets_PLB_MRdDBus;
wire [4 - 1:0] nfa_finals_buckets_PLB_MRdWdAddr;
wire nfa_finals_buckets_PLB_MRdDAck;
wire nfa_finals_buckets_PLB_MRdBTerm;
wire nfa_finals_buckets_PLB_MWrDAck;
wire nfa_finals_buckets_PLB_MWrBTerm;

wire nfa_forward_buckets_MPLB_Clk;
wire nfa_forward_buckets_MPLB_Rst;
wire nfa_forward_buckets_M_request;
wire [2 - 1:0] nfa_forward_buckets_M_priority;
wire nfa_forward_buckets_M_busLock;
wire nfa_forward_buckets_M_RNW;
wire [C_nfa_forward_buckets_DWIDTH/8 - 1:0] nfa_forward_buckets_M_BE;
wire [2 - 1:0] nfa_forward_buckets_M_MSize;
wire [4 - 1:0] nfa_forward_buckets_M_size;
wire [3 - 1:0] nfa_forward_buckets_M_type;
wire [16 - 1:0] nfa_forward_buckets_M_TAttribute;
wire nfa_forward_buckets_M_lockErr;
wire nfa_forward_buckets_M_abort;
wire [32 - 1:0] nfa_forward_buckets_M_UABus;
wire [32 - 1:0] nfa_forward_buckets_M_ABus;
wire [C_nfa_forward_buckets_DWIDTH - 1:0] nfa_forward_buckets_M_wrDBus;
wire nfa_forward_buckets_M_wrBurst;
wire nfa_forward_buckets_M_rdBurst;
wire nfa_forward_buckets_PLB_MAddrAck;
wire [2 - 1:0] nfa_forward_buckets_PLB_MSSize;
wire nfa_forward_buckets_PLB_MRearbitrate;
wire nfa_forward_buckets_PLB_MTimeout;
wire nfa_forward_buckets_PLB_MBusy;
wire nfa_forward_buckets_PLB_MRdErr;
wire nfa_forward_buckets_PLB_MWrErr;
wire nfa_forward_buckets_PLB_MIRQ;
wire [C_nfa_forward_buckets_DWIDTH - 1:0] nfa_forward_buckets_PLB_MRdDBus;
wire [4 - 1:0] nfa_forward_buckets_PLB_MRdWdAddr;
wire nfa_forward_buckets_PLB_MRdDAck;
wire nfa_forward_buckets_PLB_MRdBTerm;
wire nfa_forward_buckets_PLB_MWrDAck;
wire nfa_forward_buckets_PLB_MWrBTerm;

wire sample_buffer_MPLB_Clk;
wire sample_buffer_MPLB_Rst;
wire sample_buffer_M_request;
wire [2 - 1:0] sample_buffer_M_priority;
wire sample_buffer_M_busLock;
wire sample_buffer_M_RNW;
wire [C_sample_buffer_DWIDTH/8 - 1:0] sample_buffer_M_BE;
wire [2 - 1:0] sample_buffer_M_MSize;
wire [4 - 1:0] sample_buffer_M_size;
wire [3 - 1:0] sample_buffer_M_type;
wire [16 - 1:0] sample_buffer_M_TAttribute;
wire sample_buffer_M_lockErr;
wire sample_buffer_M_abort;
wire [32 - 1:0] sample_buffer_M_UABus;
wire [32 - 1:0] sample_buffer_M_ABus;
wire [C_sample_buffer_DWIDTH - 1:0] sample_buffer_M_wrDBus;
wire sample_buffer_M_wrBurst;
wire sample_buffer_M_rdBurst;
wire sample_buffer_PLB_MAddrAck;
wire [2 - 1:0] sample_buffer_PLB_MSSize;
wire sample_buffer_PLB_MRearbitrate;
wire sample_buffer_PLB_MTimeout;
wire sample_buffer_PLB_MBusy;
wire sample_buffer_PLB_MRdErr;
wire sample_buffer_PLB_MWrErr;
wire sample_buffer_PLB_MIRQ;
wire [C_sample_buffer_DWIDTH - 1:0] sample_buffer_PLB_MRdDBus;
wire [4 - 1:0] sample_buffer_PLB_MRdWdAddr;
wire sample_buffer_PLB_MRdDAck;
wire sample_buffer_PLB_MRdBTerm;
wire sample_buffer_PLB_MWrDAck;
wire sample_buffer_PLB_MWrBTerm;

wire indices_MPLB_Clk;
wire indices_MPLB_Rst;
wire indices_M_request;
wire [2 - 1:0] indices_M_priority;
wire indices_M_busLock;
wire indices_M_RNW;
wire [C_indices_DWIDTH/8 - 1:0] indices_M_BE;
wire [2 - 1:0] indices_M_MSize;
wire [4 - 1:0] indices_M_size;
wire [3 - 1:0] indices_M_type;
wire [16 - 1:0] indices_M_TAttribute;
wire indices_M_lockErr;
wire indices_M_abort;
wire [32 - 1:0] indices_M_UABus;
wire [32 - 1:0] indices_M_ABus;
wire [C_indices_DWIDTH - 1:0] indices_M_wrDBus;
wire indices_M_wrBurst;
wire indices_M_rdBurst;
wire indices_PLB_MAddrAck;
wire [2 - 1:0] indices_PLB_MSSize;
wire indices_PLB_MRearbitrate;
wire indices_PLB_MTimeout;
wire indices_PLB_MBusy;
wire indices_PLB_MRdErr;
wire indices_PLB_MWrErr;
wire indices_PLB_MIRQ;
wire [C_indices_DWIDTH - 1:0] indices_PLB_MRdDBus;
wire [4 - 1:0] indices_PLB_MRdWdAddr;
wire indices_PLB_MRdDAck;
wire indices_PLB_MRdBTerm;
wire indices_PLB_MWrDAck;
wire indices_PLB_MWrBTerm;

wire splb_slv0_SPLB_Clk;
wire splb_slv0_SPLB_Rst;
wire [32 - 1:0] splb_slv0_PLB_ABus;
wire [32 - 1:0] splb_slv0_PLB_UABus;
wire splb_slv0_PLB_PAValid;
wire splb_slv0_PLB_SAValid;
wire splb_slv0_PLB_rdPrim;
wire splb_slv0_PLB_wrPrim;
wire [C_SPLB_SLV0_MID_WIDTH - 1:0] splb_slv0_PLB_masterID;
wire splb_slv0_PLB_abort;
wire splb_slv0_PLB_busLock;
wire splb_slv0_PLB_RNW;
wire [C_SPLB_SLV0_DWIDTH/8 - 1:0] splb_slv0_PLB_BE;
wire [2 - 1:0] splb_slv0_PLB_MSize;
wire [4 - 1:0] splb_slv0_PLB_size;
wire [3 - 1:0] splb_slv0_PLB_type;
wire splb_slv0_PLB_lockErr;
wire [C_SPLB_SLV0_DWIDTH - 1:0] splb_slv0_PLB_wrDBus;
wire splb_slv0_PLB_wrBurst;
wire splb_slv0_PLB_rdBurst;
wire splb_slv0_PLB_wrPendReq;
wire splb_slv0_PLB_rdPendReq;
wire [2 - 1:0] splb_slv0_PLB_wrPendPri;
wire [2 - 1:0] splb_slv0_PLB_rdPendPri;
wire [2 - 1:0] splb_slv0_PLB_reqPri;
wire [16 - 1:0] splb_slv0_PLB_TAttribute;
wire splb_slv0_Sl_addrAck;
wire [2 - 1:0] splb_slv0_Sl_SSize;
wire splb_slv0_Sl_wait;
wire splb_slv0_Sl_rearbitrate;
wire splb_slv0_Sl_wrDAck;
wire splb_slv0_Sl_wrComp;
wire splb_slv0_Sl_wrBTerm;
wire [C_SPLB_SLV0_DWIDTH - 1:0] splb_slv0_Sl_rdDBus;
wire [4 - 1:0] splb_slv0_Sl_rdWdAddr;
wire splb_slv0_Sl_rdDAck;
wire splb_slv0_Sl_rdComp;
wire splb_slv0_Sl_rdBTerm;
wire [C_SPLB_SLV0_NUM_MASTERS - 1:0] splb_slv0_Sl_MBusy;
wire [C_SPLB_SLV0_NUM_MASTERS - 1:0] splb_slv0_Sl_MWrErr;
wire [C_SPLB_SLV0_NUM_MASTERS - 1:0] splb_slv0_Sl_MRdErr;
wire [C_SPLB_SLV0_NUM_MASTERS - 1:0] splb_slv0_Sl_MIRQ;

wire aresetn;


wire [32 - 1:0] sig_nfa_accept_samples_generic_hw_nfa_initials_buckets_datain;
wire [32 - 1:0] sig_nfa_accept_samples_generic_hw_nfa_initials_buckets_dataout;
wire [32 - 1:0] sig_nfa_accept_samples_generic_hw_nfa_initials_buckets_address;
wire [32 - 1:0] sig_nfa_accept_samples_generic_hw_nfa_initials_buckets_size;
wire sig_nfa_accept_samples_generic_hw_nfa_initials_buckets_req_din;
wire sig_nfa_accept_samples_generic_hw_nfa_initials_buckets_req_full_n;
wire sig_nfa_accept_samples_generic_hw_nfa_initials_buckets_req_write;
wire sig_nfa_accept_samples_generic_hw_nfa_initials_buckets_rsp_empty_n;
wire sig_nfa_accept_samples_generic_hw_nfa_initials_buckets_rsp_read;

wire [32 - 1:0] sig_nfa_accept_samples_generic_hw_nfa_finals_buckets_datain;
wire [32 - 1:0] sig_nfa_accept_samples_generic_hw_nfa_finals_buckets_dataout;
wire [32 - 1:0] sig_nfa_accept_samples_generic_hw_nfa_finals_buckets_address;
wire [32 - 1:0] sig_nfa_accept_samples_generic_hw_nfa_finals_buckets_size;
wire sig_nfa_accept_samples_generic_hw_nfa_finals_buckets_req_din;
wire sig_nfa_accept_samples_generic_hw_nfa_finals_buckets_req_full_n;
wire sig_nfa_accept_samples_generic_hw_nfa_finals_buckets_req_write;
wire sig_nfa_accept_samples_generic_hw_nfa_finals_buckets_rsp_empty_n;
wire sig_nfa_accept_samples_generic_hw_nfa_finals_buckets_rsp_read;

wire [32 - 1:0] sig_nfa_accept_samples_generic_hw_nfa_forward_buckets_datain;
wire [32 - 1:0] sig_nfa_accept_samples_generic_hw_nfa_forward_buckets_dataout;
wire [32 - 1:0] sig_nfa_accept_samples_generic_hw_nfa_forward_buckets_address;
wire [32 - 1:0] sig_nfa_accept_samples_generic_hw_nfa_forward_buckets_size;
wire sig_nfa_accept_samples_generic_hw_nfa_forward_buckets_req_din;
wire sig_nfa_accept_samples_generic_hw_nfa_forward_buckets_req_full_n;
wire sig_nfa_accept_samples_generic_hw_nfa_forward_buckets_req_write;
wire sig_nfa_accept_samples_generic_hw_nfa_forward_buckets_rsp_empty_n;
wire sig_nfa_accept_samples_generic_hw_nfa_forward_buckets_rsp_read;

wire [8 - 1:0] sig_nfa_accept_samples_generic_hw_sample_buffer_datain;
wire [8 - 1:0] sig_nfa_accept_samples_generic_hw_sample_buffer_dataout;
wire [32 - 1:0] sig_nfa_accept_samples_generic_hw_sample_buffer_address;
wire [32 - 1:0] sig_nfa_accept_samples_generic_hw_sample_buffer_size;
wire sig_nfa_accept_samples_generic_hw_sample_buffer_req_din;
wire sig_nfa_accept_samples_generic_hw_sample_buffer_req_full_n;
wire sig_nfa_accept_samples_generic_hw_sample_buffer_req_write;
wire sig_nfa_accept_samples_generic_hw_sample_buffer_rsp_empty_n;
wire sig_nfa_accept_samples_generic_hw_sample_buffer_rsp_read;

wire [56 - 1:0] sig_nfa_accept_samples_generic_hw_indices_datain;
wire [56 - 1:0] sig_nfa_accept_samples_generic_hw_indices_dataout;
wire [32 - 1:0] sig_nfa_accept_samples_generic_hw_indices_address;
wire [32 - 1:0] sig_nfa_accept_samples_generic_hw_indices_size;
wire sig_nfa_accept_samples_generic_hw_indices_req_din;
wire sig_nfa_accept_samples_generic_hw_indices_req_full_n;
wire sig_nfa_accept_samples_generic_hw_indices_req_write;
wire sig_nfa_accept_samples_generic_hw_indices_rsp_empty_n;
wire sig_nfa_accept_samples_generic_hw_indices_rsp_read;

wire [8 - 1:0] sig_nfa_accept_samples_generic_hw_nfa_symbols;
wire [32 - 1:0] sig_nfa_accept_samples_generic_hw_sample_buffer_length;
wire [16 - 1:0] sig_nfa_accept_samples_generic_hw_sample_length;
wire [16 - 1:0] sig_nfa_accept_samples_generic_hw_i_size;
wire [16 - 1:0] sig_nfa_accept_samples_generic_hw_begin_index;
wire [16 - 1:0] sig_nfa_accept_samples_generic_hw_begin_sample;
wire [16 - 1:0] sig_nfa_accept_samples_generic_hw_end_index;
wire [16 - 1:0] sig_nfa_accept_samples_generic_hw_end_sample;
wire [1 - 1:0] sig_nfa_accept_samples_generic_hw_stop_on_first;
wire [1 - 1:0] sig_nfa_accept_samples_generic_hw_accept;
wire sig_nfa_accept_samples_generic_hw_ap_start;
wire sig_nfa_accept_samples_generic_hw_ap_ready;
wire sig_nfa_accept_samples_generic_hw_ap_done;
wire sig_nfa_accept_samples_generic_hw_ap_idle;
wire [32 - 1:0] sig_nfa_accept_samples_generic_hw_ap_return;

wire sig_nfa_accept_samples_generic_hw_ap_rst;



nfa_accept_samples_generic_hw nfa_accept_samples_generic_hw_U(
    .nfa_initials_buckets_datain(sig_nfa_accept_samples_generic_hw_nfa_initials_buckets_datain),
    .nfa_initials_buckets_dataout(sig_nfa_accept_samples_generic_hw_nfa_initials_buckets_dataout),
    .nfa_initials_buckets_address(sig_nfa_accept_samples_generic_hw_nfa_initials_buckets_address),
    .nfa_initials_buckets_size(sig_nfa_accept_samples_generic_hw_nfa_initials_buckets_size),
    .nfa_initials_buckets_req_din(sig_nfa_accept_samples_generic_hw_nfa_initials_buckets_req_din),
    .nfa_initials_buckets_req_full_n(sig_nfa_accept_samples_generic_hw_nfa_initials_buckets_req_full_n),
    .nfa_initials_buckets_req_write(sig_nfa_accept_samples_generic_hw_nfa_initials_buckets_req_write),
    .nfa_initials_buckets_rsp_empty_n(sig_nfa_accept_samples_generic_hw_nfa_initials_buckets_rsp_empty_n),
    .nfa_initials_buckets_rsp_read(sig_nfa_accept_samples_generic_hw_nfa_initials_buckets_rsp_read),
    .nfa_finals_buckets_datain(sig_nfa_accept_samples_generic_hw_nfa_finals_buckets_datain),
    .nfa_finals_buckets_dataout(sig_nfa_accept_samples_generic_hw_nfa_finals_buckets_dataout),
    .nfa_finals_buckets_address(sig_nfa_accept_samples_generic_hw_nfa_finals_buckets_address),
    .nfa_finals_buckets_size(sig_nfa_accept_samples_generic_hw_nfa_finals_buckets_size),
    .nfa_finals_buckets_req_din(sig_nfa_accept_samples_generic_hw_nfa_finals_buckets_req_din),
    .nfa_finals_buckets_req_full_n(sig_nfa_accept_samples_generic_hw_nfa_finals_buckets_req_full_n),
    .nfa_finals_buckets_req_write(sig_nfa_accept_samples_generic_hw_nfa_finals_buckets_req_write),
    .nfa_finals_buckets_rsp_empty_n(sig_nfa_accept_samples_generic_hw_nfa_finals_buckets_rsp_empty_n),
    .nfa_finals_buckets_rsp_read(sig_nfa_accept_samples_generic_hw_nfa_finals_buckets_rsp_read),
    .nfa_forward_buckets_datain(sig_nfa_accept_samples_generic_hw_nfa_forward_buckets_datain),
    .nfa_forward_buckets_dataout(sig_nfa_accept_samples_generic_hw_nfa_forward_buckets_dataout),
    .nfa_forward_buckets_address(sig_nfa_accept_samples_generic_hw_nfa_forward_buckets_address),
    .nfa_forward_buckets_size(sig_nfa_accept_samples_generic_hw_nfa_forward_buckets_size),
    .nfa_forward_buckets_req_din(sig_nfa_accept_samples_generic_hw_nfa_forward_buckets_req_din),
    .nfa_forward_buckets_req_full_n(sig_nfa_accept_samples_generic_hw_nfa_forward_buckets_req_full_n),
    .nfa_forward_buckets_req_write(sig_nfa_accept_samples_generic_hw_nfa_forward_buckets_req_write),
    .nfa_forward_buckets_rsp_empty_n(sig_nfa_accept_samples_generic_hw_nfa_forward_buckets_rsp_empty_n),
    .nfa_forward_buckets_rsp_read(sig_nfa_accept_samples_generic_hw_nfa_forward_buckets_rsp_read),
    .sample_buffer_datain(sig_nfa_accept_samples_generic_hw_sample_buffer_datain),
    .sample_buffer_dataout(sig_nfa_accept_samples_generic_hw_sample_buffer_dataout),
    .sample_buffer_address(sig_nfa_accept_samples_generic_hw_sample_buffer_address),
    .sample_buffer_size(sig_nfa_accept_samples_generic_hw_sample_buffer_size),
    .sample_buffer_req_din(sig_nfa_accept_samples_generic_hw_sample_buffer_req_din),
    .sample_buffer_req_full_n(sig_nfa_accept_samples_generic_hw_sample_buffer_req_full_n),
    .sample_buffer_req_write(sig_nfa_accept_samples_generic_hw_sample_buffer_req_write),
    .sample_buffer_rsp_empty_n(sig_nfa_accept_samples_generic_hw_sample_buffer_rsp_empty_n),
    .sample_buffer_rsp_read(sig_nfa_accept_samples_generic_hw_sample_buffer_rsp_read),
    .indices_datain(sig_nfa_accept_samples_generic_hw_indices_datain),
    .indices_dataout(sig_nfa_accept_samples_generic_hw_indices_dataout),
    .indices_address(sig_nfa_accept_samples_generic_hw_indices_address),
    .indices_size(sig_nfa_accept_samples_generic_hw_indices_size),
    .indices_req_din(sig_nfa_accept_samples_generic_hw_indices_req_din),
    .indices_req_full_n(sig_nfa_accept_samples_generic_hw_indices_req_full_n),
    .indices_req_write(sig_nfa_accept_samples_generic_hw_indices_req_write),
    .indices_rsp_empty_n(sig_nfa_accept_samples_generic_hw_indices_rsp_empty_n),
    .indices_rsp_read(sig_nfa_accept_samples_generic_hw_indices_rsp_read),
    .nfa_symbols(sig_nfa_accept_samples_generic_hw_nfa_symbols),
    .sample_buffer_length(sig_nfa_accept_samples_generic_hw_sample_buffer_length),
    .sample_length(sig_nfa_accept_samples_generic_hw_sample_length),
    .i_size(sig_nfa_accept_samples_generic_hw_i_size),
    .begin_index(sig_nfa_accept_samples_generic_hw_begin_index),
    .begin_sample(sig_nfa_accept_samples_generic_hw_begin_sample),
    .end_index(sig_nfa_accept_samples_generic_hw_end_index),
    .end_sample(sig_nfa_accept_samples_generic_hw_end_sample),
    .stop_on_first(sig_nfa_accept_samples_generic_hw_stop_on_first),
    .accept(sig_nfa_accept_samples_generic_hw_accept),
    .ap_start(sig_nfa_accept_samples_generic_hw_ap_start),
    .ap_ready(sig_nfa_accept_samples_generic_hw_ap_ready),
    .ap_done(sig_nfa_accept_samples_generic_hw_ap_done),
    .ap_idle(sig_nfa_accept_samples_generic_hw_ap_idle),
    .ap_return(sig_nfa_accept_samples_generic_hw_ap_return),
    .ap_rst(sig_nfa_accept_samples_generic_hw_ap_rst),
    .ap_clk(aclk)
);

nfa_initials_buckets_if #(
    .REMOTE_DESTINATION_ADDRESS(C_nfa_initials_buckets_REMOTE_DESTINATION_ADDRESS),
    .C_PLB_AWIDTH(C_nfa_initials_buckets_AWIDTH),
    .C_PLB_DWIDTH(C_nfa_initials_buckets_DWIDTH))
nfa_initials_buckets_if_U(
    .USER_RdData(sig_nfa_accept_samples_generic_hw_nfa_initials_buckets_datain),
    .USER_WrData(sig_nfa_accept_samples_generic_hw_nfa_initials_buckets_dataout),
    .USER_address(sig_nfa_accept_samples_generic_hw_nfa_initials_buckets_address),
    .USER_size(sig_nfa_accept_samples_generic_hw_nfa_initials_buckets_size),
    .USER_req_nRW(sig_nfa_accept_samples_generic_hw_nfa_initials_buckets_req_din),
    .USER_req_full_n(sig_nfa_accept_samples_generic_hw_nfa_initials_buckets_req_full_n),
    .USER_req_push(sig_nfa_accept_samples_generic_hw_nfa_initials_buckets_req_write),
    .USER_rsp_empty_n(sig_nfa_accept_samples_generic_hw_nfa_initials_buckets_rsp_empty_n),
    .USER_rsp_pop(sig_nfa_accept_samples_generic_hw_nfa_initials_buckets_rsp_read),
    .MPLB_Clk(nfa_initials_buckets_MPLB_Clk),
    .MPLB_Rst(nfa_initials_buckets_MPLB_Rst),
    .M_request(nfa_initials_buckets_M_request),
    .M_priority(nfa_initials_buckets_M_priority),
    .M_busLock(nfa_initials_buckets_M_busLock),
    .M_RNW(nfa_initials_buckets_M_RNW),
    .M_BE(nfa_initials_buckets_M_BE),
    .M_MSize(nfa_initials_buckets_M_MSize),
    .M_size(nfa_initials_buckets_M_size),
    .M_type(nfa_initials_buckets_M_type),
    .M_TAttribute(nfa_initials_buckets_M_TAttribute),
    .M_lockErr(nfa_initials_buckets_M_lockErr),
    .M_abort(nfa_initials_buckets_M_abort),
    .M_UABus(nfa_initials_buckets_M_UABus),
    .M_ABus(nfa_initials_buckets_M_ABus),
    .M_wrDBus(nfa_initials_buckets_M_wrDBus),
    .M_wrBurst(nfa_initials_buckets_M_wrBurst),
    .M_rdBurst(nfa_initials_buckets_M_rdBurst),
    .PLB_MAddrAck(nfa_initials_buckets_PLB_MAddrAck),
    .PLB_MSSize(nfa_initials_buckets_PLB_MSSize),
    .PLB_MRearbitrate(nfa_initials_buckets_PLB_MRearbitrate),
    .PLB_MTimeout(nfa_initials_buckets_PLB_MTimeout),
    .PLB_MBusy(nfa_initials_buckets_PLB_MBusy),
    .PLB_MRdErr(nfa_initials_buckets_PLB_MRdErr),
    .PLB_MWrErr(nfa_initials_buckets_PLB_MWrErr),
    .PLB_MIRQ(nfa_initials_buckets_PLB_MIRQ),
    .PLB_MRdDBus(nfa_initials_buckets_PLB_MRdDBus),
    .PLB_MRdWdAddr(nfa_initials_buckets_PLB_MRdWdAddr),
    .PLB_MRdDAck(nfa_initials_buckets_PLB_MRdDAck),
    .PLB_MRdBTerm(nfa_initials_buckets_PLB_MRdBTerm),
    .PLB_MWrDAck(nfa_initials_buckets_PLB_MWrDAck),
    .PLB_MWrBTerm(nfa_initials_buckets_PLB_MWrBTerm));

nfa_finals_buckets_if #(
    .REMOTE_DESTINATION_ADDRESS(C_nfa_finals_buckets_REMOTE_DESTINATION_ADDRESS),
    .C_PLB_AWIDTH(C_nfa_finals_buckets_AWIDTH),
    .C_PLB_DWIDTH(C_nfa_finals_buckets_DWIDTH))
nfa_finals_buckets_if_U(
    .USER_RdData(sig_nfa_accept_samples_generic_hw_nfa_finals_buckets_datain),
    .USER_WrData(sig_nfa_accept_samples_generic_hw_nfa_finals_buckets_dataout),
    .USER_address(sig_nfa_accept_samples_generic_hw_nfa_finals_buckets_address),
    .USER_size(sig_nfa_accept_samples_generic_hw_nfa_finals_buckets_size),
    .USER_req_nRW(sig_nfa_accept_samples_generic_hw_nfa_finals_buckets_req_din),
    .USER_req_full_n(sig_nfa_accept_samples_generic_hw_nfa_finals_buckets_req_full_n),
    .USER_req_push(sig_nfa_accept_samples_generic_hw_nfa_finals_buckets_req_write),
    .USER_rsp_empty_n(sig_nfa_accept_samples_generic_hw_nfa_finals_buckets_rsp_empty_n),
    .USER_rsp_pop(sig_nfa_accept_samples_generic_hw_nfa_finals_buckets_rsp_read),
    .MPLB_Clk(nfa_finals_buckets_MPLB_Clk),
    .MPLB_Rst(nfa_finals_buckets_MPLB_Rst),
    .M_request(nfa_finals_buckets_M_request),
    .M_priority(nfa_finals_buckets_M_priority),
    .M_busLock(nfa_finals_buckets_M_busLock),
    .M_RNW(nfa_finals_buckets_M_RNW),
    .M_BE(nfa_finals_buckets_M_BE),
    .M_MSize(nfa_finals_buckets_M_MSize),
    .M_size(nfa_finals_buckets_M_size),
    .M_type(nfa_finals_buckets_M_type),
    .M_TAttribute(nfa_finals_buckets_M_TAttribute),
    .M_lockErr(nfa_finals_buckets_M_lockErr),
    .M_abort(nfa_finals_buckets_M_abort),
    .M_UABus(nfa_finals_buckets_M_UABus),
    .M_ABus(nfa_finals_buckets_M_ABus),
    .M_wrDBus(nfa_finals_buckets_M_wrDBus),
    .M_wrBurst(nfa_finals_buckets_M_wrBurst),
    .M_rdBurst(nfa_finals_buckets_M_rdBurst),
    .PLB_MAddrAck(nfa_finals_buckets_PLB_MAddrAck),
    .PLB_MSSize(nfa_finals_buckets_PLB_MSSize),
    .PLB_MRearbitrate(nfa_finals_buckets_PLB_MRearbitrate),
    .PLB_MTimeout(nfa_finals_buckets_PLB_MTimeout),
    .PLB_MBusy(nfa_finals_buckets_PLB_MBusy),
    .PLB_MRdErr(nfa_finals_buckets_PLB_MRdErr),
    .PLB_MWrErr(nfa_finals_buckets_PLB_MWrErr),
    .PLB_MIRQ(nfa_finals_buckets_PLB_MIRQ),
    .PLB_MRdDBus(nfa_finals_buckets_PLB_MRdDBus),
    .PLB_MRdWdAddr(nfa_finals_buckets_PLB_MRdWdAddr),
    .PLB_MRdDAck(nfa_finals_buckets_PLB_MRdDAck),
    .PLB_MRdBTerm(nfa_finals_buckets_PLB_MRdBTerm),
    .PLB_MWrDAck(nfa_finals_buckets_PLB_MWrDAck),
    .PLB_MWrBTerm(nfa_finals_buckets_PLB_MWrBTerm));

nfa_forward_buckets_if #(
    .REMOTE_DESTINATION_ADDRESS(C_nfa_forward_buckets_REMOTE_DESTINATION_ADDRESS),
    .C_PLB_AWIDTH(C_nfa_forward_buckets_AWIDTH),
    .C_PLB_DWIDTH(C_nfa_forward_buckets_DWIDTH))
nfa_forward_buckets_if_U(
    .USER_RdData(sig_nfa_accept_samples_generic_hw_nfa_forward_buckets_datain),
    .USER_WrData(sig_nfa_accept_samples_generic_hw_nfa_forward_buckets_dataout),
    .USER_address(sig_nfa_accept_samples_generic_hw_nfa_forward_buckets_address),
    .USER_size(sig_nfa_accept_samples_generic_hw_nfa_forward_buckets_size),
    .USER_req_nRW(sig_nfa_accept_samples_generic_hw_nfa_forward_buckets_req_din),
    .USER_req_full_n(sig_nfa_accept_samples_generic_hw_nfa_forward_buckets_req_full_n),
    .USER_req_push(sig_nfa_accept_samples_generic_hw_nfa_forward_buckets_req_write),
    .USER_rsp_empty_n(sig_nfa_accept_samples_generic_hw_nfa_forward_buckets_rsp_empty_n),
    .USER_rsp_pop(sig_nfa_accept_samples_generic_hw_nfa_forward_buckets_rsp_read),
    .MPLB_Clk(nfa_forward_buckets_MPLB_Clk),
    .MPLB_Rst(nfa_forward_buckets_MPLB_Rst),
    .M_request(nfa_forward_buckets_M_request),
    .M_priority(nfa_forward_buckets_M_priority),
    .M_busLock(nfa_forward_buckets_M_busLock),
    .M_RNW(nfa_forward_buckets_M_RNW),
    .M_BE(nfa_forward_buckets_M_BE),
    .M_MSize(nfa_forward_buckets_M_MSize),
    .M_size(nfa_forward_buckets_M_size),
    .M_type(nfa_forward_buckets_M_type),
    .M_TAttribute(nfa_forward_buckets_M_TAttribute),
    .M_lockErr(nfa_forward_buckets_M_lockErr),
    .M_abort(nfa_forward_buckets_M_abort),
    .M_UABus(nfa_forward_buckets_M_UABus),
    .M_ABus(nfa_forward_buckets_M_ABus),
    .M_wrDBus(nfa_forward_buckets_M_wrDBus),
    .M_wrBurst(nfa_forward_buckets_M_wrBurst),
    .M_rdBurst(nfa_forward_buckets_M_rdBurst),
    .PLB_MAddrAck(nfa_forward_buckets_PLB_MAddrAck),
    .PLB_MSSize(nfa_forward_buckets_PLB_MSSize),
    .PLB_MRearbitrate(nfa_forward_buckets_PLB_MRearbitrate),
    .PLB_MTimeout(nfa_forward_buckets_PLB_MTimeout),
    .PLB_MBusy(nfa_forward_buckets_PLB_MBusy),
    .PLB_MRdErr(nfa_forward_buckets_PLB_MRdErr),
    .PLB_MWrErr(nfa_forward_buckets_PLB_MWrErr),
    .PLB_MIRQ(nfa_forward_buckets_PLB_MIRQ),
    .PLB_MRdDBus(nfa_forward_buckets_PLB_MRdDBus),
    .PLB_MRdWdAddr(nfa_forward_buckets_PLB_MRdWdAddr),
    .PLB_MRdDAck(nfa_forward_buckets_PLB_MRdDAck),
    .PLB_MRdBTerm(nfa_forward_buckets_PLB_MRdBTerm),
    .PLB_MWrDAck(nfa_forward_buckets_PLB_MWrDAck),
    .PLB_MWrBTerm(nfa_forward_buckets_PLB_MWrBTerm));

sample_buffer_if #(
    .REMOTE_DESTINATION_ADDRESS(C_sample_buffer_REMOTE_DESTINATION_ADDRESS),
    .C_PLB_AWIDTH(C_sample_buffer_AWIDTH),
    .C_PLB_DWIDTH(C_sample_buffer_DWIDTH))
sample_buffer_if_U(
    .USER_RdData(sig_nfa_accept_samples_generic_hw_sample_buffer_datain),
    .USER_WrData(sig_nfa_accept_samples_generic_hw_sample_buffer_dataout),
    .USER_address(sig_nfa_accept_samples_generic_hw_sample_buffer_address),
    .USER_size(sig_nfa_accept_samples_generic_hw_sample_buffer_size),
    .USER_req_nRW(sig_nfa_accept_samples_generic_hw_sample_buffer_req_din),
    .USER_req_full_n(sig_nfa_accept_samples_generic_hw_sample_buffer_req_full_n),
    .USER_req_push(sig_nfa_accept_samples_generic_hw_sample_buffer_req_write),
    .USER_rsp_empty_n(sig_nfa_accept_samples_generic_hw_sample_buffer_rsp_empty_n),
    .USER_rsp_pop(sig_nfa_accept_samples_generic_hw_sample_buffer_rsp_read),
    .MPLB_Clk(sample_buffer_MPLB_Clk),
    .MPLB_Rst(sample_buffer_MPLB_Rst),
    .M_request(sample_buffer_M_request),
    .M_priority(sample_buffer_M_priority),
    .M_busLock(sample_buffer_M_busLock),
    .M_RNW(sample_buffer_M_RNW),
    .M_BE(sample_buffer_M_BE),
    .M_MSize(sample_buffer_M_MSize),
    .M_size(sample_buffer_M_size),
    .M_type(sample_buffer_M_type),
    .M_TAttribute(sample_buffer_M_TAttribute),
    .M_lockErr(sample_buffer_M_lockErr),
    .M_abort(sample_buffer_M_abort),
    .M_UABus(sample_buffer_M_UABus),
    .M_ABus(sample_buffer_M_ABus),
    .M_wrDBus(sample_buffer_M_wrDBus),
    .M_wrBurst(sample_buffer_M_wrBurst),
    .M_rdBurst(sample_buffer_M_rdBurst),
    .PLB_MAddrAck(sample_buffer_PLB_MAddrAck),
    .PLB_MSSize(sample_buffer_PLB_MSSize),
    .PLB_MRearbitrate(sample_buffer_PLB_MRearbitrate),
    .PLB_MTimeout(sample_buffer_PLB_MTimeout),
    .PLB_MBusy(sample_buffer_PLB_MBusy),
    .PLB_MRdErr(sample_buffer_PLB_MRdErr),
    .PLB_MWrErr(sample_buffer_PLB_MWrErr),
    .PLB_MIRQ(sample_buffer_PLB_MIRQ),
    .PLB_MRdDBus(sample_buffer_PLB_MRdDBus),
    .PLB_MRdWdAddr(sample_buffer_PLB_MRdWdAddr),
    .PLB_MRdDAck(sample_buffer_PLB_MRdDAck),
    .PLB_MRdBTerm(sample_buffer_PLB_MRdBTerm),
    .PLB_MWrDAck(sample_buffer_PLB_MWrDAck),
    .PLB_MWrBTerm(sample_buffer_PLB_MWrBTerm));

indices_if #(
    .REMOTE_DESTINATION_ADDRESS(C_indices_REMOTE_DESTINATION_ADDRESS),
    .C_PLB_AWIDTH(C_indices_AWIDTH),
    .C_PLB_DWIDTH(C_indices_DWIDTH))
indices_if_U(
    .USER_RdData(sig_nfa_accept_samples_generic_hw_indices_datain),
    .USER_WrData(sig_nfa_accept_samples_generic_hw_indices_dataout),
    .USER_address(sig_nfa_accept_samples_generic_hw_indices_address),
    .USER_size(sig_nfa_accept_samples_generic_hw_indices_size),
    .USER_req_nRW(sig_nfa_accept_samples_generic_hw_indices_req_din),
    .USER_req_full_n(sig_nfa_accept_samples_generic_hw_indices_req_full_n),
    .USER_req_push(sig_nfa_accept_samples_generic_hw_indices_req_write),
    .USER_rsp_empty_n(sig_nfa_accept_samples_generic_hw_indices_rsp_empty_n),
    .USER_rsp_pop(sig_nfa_accept_samples_generic_hw_indices_rsp_read),
    .MPLB_Clk(indices_MPLB_Clk),
    .MPLB_Rst(indices_MPLB_Rst),
    .M_request(indices_M_request),
    .M_priority(indices_M_priority),
    .M_busLock(indices_M_busLock),
    .M_RNW(indices_M_RNW),
    .M_BE(indices_M_BE),
    .M_MSize(indices_M_MSize),
    .M_size(indices_M_size),
    .M_type(indices_M_type),
    .M_TAttribute(indices_M_TAttribute),
    .M_lockErr(indices_M_lockErr),
    .M_abort(indices_M_abort),
    .M_UABus(indices_M_UABus),
    .M_ABus(indices_M_ABus),
    .M_wrDBus(indices_M_wrDBus),
    .M_wrBurst(indices_M_wrBurst),
    .M_rdBurst(indices_M_rdBurst),
    .PLB_MAddrAck(indices_PLB_MAddrAck),
    .PLB_MSSize(indices_PLB_MSSize),
    .PLB_MRearbitrate(indices_PLB_MRearbitrate),
    .PLB_MTimeout(indices_PLB_MTimeout),
    .PLB_MBusy(indices_PLB_MBusy),
    .PLB_MRdErr(indices_PLB_MRdErr),
    .PLB_MWrErr(indices_PLB_MWrErr),
    .PLB_MIRQ(indices_PLB_MIRQ),
    .PLB_MRdDBus(indices_PLB_MRdDBus),
    .PLB_MRdWdAddr(indices_PLB_MRdWdAddr),
    .PLB_MRdDAck(indices_PLB_MRdDAck),
    .PLB_MRdBTerm(indices_PLB_MRdBTerm),
    .PLB_MWrDAck(indices_PLB_MWrDAck),
    .PLB_MWrBTerm(indices_PLB_MWrBTerm));

slv0_if #(
    .C_BASEADDR(C_SPLB_SLV0_BASEADDR),
    .C_HIGHADDR(C_SPLB_SLV0_HIGHADDR),
    .C_SPLB_AWIDTH(C_SPLB_SLV0_AWIDTH),
    .C_SPLB_DWIDTH(C_SPLB_SLV0_DWIDTH),
    .C_SPLB_NUM_MASTERS(C_SPLB_SLV0_NUM_MASTERS),
    .C_SPLB_MID_WIDTH(C_SPLB_SLV0_MID_WIDTH),
    .C_SPLB_NATIVE_DWIDTH(C_SPLB_SLV0_NATIVE_DWIDTH),
    .C_SPLB_P2P(C_SPLB_SLV0_P2P),
    .C_SPLB_SUPPORT_BURSTS(C_SPLB_SLV0_SUPPORT_BURSTS),
    .C_SPLB_SMALLEST_MASTER(C_SPLB_SLV0_SMALLEST_MASTER),
    .C_INCLUDE_DPHASE_TIMER(C_SPLB_SLV0_INCLUDE_DPHASE_TIMER))
slv0_if_U(
    .DOUT_nfa_symbols(sig_nfa_accept_samples_generic_hw_nfa_symbols),
    .DOUT_sample_buffer_length(sig_nfa_accept_samples_generic_hw_sample_buffer_length),
    .DOUT_sample_length(sig_nfa_accept_samples_generic_hw_sample_length),
    .DOUT_i_size(sig_nfa_accept_samples_generic_hw_i_size),
    .DOUT_begin_index(sig_nfa_accept_samples_generic_hw_begin_index),
    .DOUT_begin_sample(sig_nfa_accept_samples_generic_hw_begin_sample),
    .DOUT_end_index(sig_nfa_accept_samples_generic_hw_end_index),
    .DOUT_end_sample(sig_nfa_accept_samples_generic_hw_end_sample),
    .DOUT_stop_on_first(sig_nfa_accept_samples_generic_hw_stop_on_first),
    .DOUT_accept(sig_nfa_accept_samples_generic_hw_accept),
    .DOUT_ap_start(sig_nfa_accept_samples_generic_hw_ap_start),
    .DIN_ap_ready(sig_nfa_accept_samples_generic_hw_ap_ready),
    .DIN_ap_done(sig_nfa_accept_samples_generic_hw_ap_done),
    .DIN_ap_idle(sig_nfa_accept_samples_generic_hw_ap_idle),
    .DIN_ap_return(sig_nfa_accept_samples_generic_hw_ap_return),
    .SPLB_Clk(splb_slv0_SPLB_Clk),
    .SPLB_Rst(splb_slv0_SPLB_Rst),
    .PLB_ABus(splb_slv0_PLB_ABus),
    .PLB_UABus(splb_slv0_PLB_UABus),
    .PLB_PAValid(splb_slv0_PLB_PAValid),
    .PLB_SAValid(splb_slv0_PLB_SAValid),
    .PLB_rdPrim(splb_slv0_PLB_rdPrim),
    .PLB_wrPrim(splb_slv0_PLB_wrPrim),
    .PLB_masterID(splb_slv0_PLB_masterID),
    .PLB_abort(splb_slv0_PLB_abort),
    .PLB_busLock(splb_slv0_PLB_busLock),
    .PLB_RNW(splb_slv0_PLB_RNW),
    .PLB_BE(splb_slv0_PLB_BE),
    .PLB_MSize(splb_slv0_PLB_MSize),
    .PLB_size(splb_slv0_PLB_size),
    .PLB_type(splb_slv0_PLB_type),
    .PLB_lockErr(splb_slv0_PLB_lockErr),
    .PLB_wrDBus(splb_slv0_PLB_wrDBus),
    .PLB_wrBurst(splb_slv0_PLB_wrBurst),
    .PLB_rdBurst(splb_slv0_PLB_rdBurst),
    .PLB_wrPendReq(splb_slv0_PLB_wrPendReq),
    .PLB_rdPendReq(splb_slv0_PLB_rdPendReq),
    .PLB_wrPendPri(splb_slv0_PLB_wrPendPri),
    .PLB_rdPendPri(splb_slv0_PLB_rdPendPri),
    .PLB_reqPri(splb_slv0_PLB_reqPri),
    .PLB_TAttribute(splb_slv0_PLB_TAttribute),
    .Sl_addrAck(splb_slv0_Sl_addrAck),
    .Sl_SSize(splb_slv0_Sl_SSize),
    .Sl_wait(splb_slv0_Sl_wait),
    .Sl_rearbitrate(splb_slv0_Sl_rearbitrate),
    .Sl_wrDAck(splb_slv0_Sl_wrDAck),
    .Sl_wrComp(splb_slv0_Sl_wrComp),
    .Sl_wrBTerm(splb_slv0_Sl_wrBTerm),
    .Sl_rdDBus(splb_slv0_Sl_rdDBus),
    .Sl_rdWdAddr(splb_slv0_Sl_rdWdAddr),
    .Sl_rdDAck(splb_slv0_Sl_rdDAck),
    .Sl_rdComp(splb_slv0_Sl_rdComp),
    .Sl_rdBTerm(splb_slv0_Sl_rdBTerm),
    .Sl_MBusy(splb_slv0_Sl_MBusy),
    .Sl_MWrErr(splb_slv0_Sl_MWrErr),
    .Sl_MRdErr(splb_slv0_Sl_MRdErr),
    .Sl_MIRQ(splb_slv0_Sl_MIRQ));

nfa_accept_samples_generic_hw_ap_rst_if #(
    .RESET_ACTIVE_LOW(RESET_ACTIVE_LOW))
ap_rst_if_U(
    .dout(sig_nfa_accept_samples_generic_hw_ap_rst),
    .din(aresetn));

endmodule
