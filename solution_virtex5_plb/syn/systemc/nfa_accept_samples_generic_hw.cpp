// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2014.1
// Copyright (C) 2014 Xilinx Inc. All rights reserved.
// 
// ===========================================================

#include "nfa_accept_samples_generic_hw.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic nfa_accept_samples_generic_hw::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic nfa_accept_samples_generic_hw::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<4> nfa_accept_samples_generic_hw::ap_ST_st1_fsm_0 = "0000";
const sc_lv<4> nfa_accept_samples_generic_hw::ap_ST_st2_fsm_1 = "1";
const sc_lv<4> nfa_accept_samples_generic_hw::ap_ST_st3_fsm_2 = "10";
const sc_lv<4> nfa_accept_samples_generic_hw::ap_ST_st4_fsm_3 = "11";
const sc_lv<4> nfa_accept_samples_generic_hw::ap_ST_st5_fsm_4 = "100";
const sc_lv<4> nfa_accept_samples_generic_hw::ap_ST_st6_fsm_5 = "101";
const sc_lv<4> nfa_accept_samples_generic_hw::ap_ST_st7_fsm_6 = "110";
const sc_lv<4> nfa_accept_samples_generic_hw::ap_ST_st8_fsm_7 = "111";
const sc_lv<4> nfa_accept_samples_generic_hw::ap_ST_st9_fsm_8 = "1000";
const sc_lv<4> nfa_accept_samples_generic_hw::ap_ST_st10_fsm_9 = "1001";
const sc_lv<1> nfa_accept_samples_generic_hw::ap_const_lv1_0 = "0";
const sc_lv<5> nfa_accept_samples_generic_hw::ap_const_lv5_0 = "00000";
const sc_lv<16> nfa_accept_samples_generic_hw::ap_const_lv16_1 = "1";
const sc_lv<16> nfa_accept_samples_generic_hw::ap_const_lv16_0 = "0000000000000000";
const sc_lv<32> nfa_accept_samples_generic_hw::ap_const_lv32_4 = "100";
const sc_lv<5> nfa_accept_samples_generic_hw::ap_const_lv5_1 = "1";

nfa_accept_samples_generic_hw::nfa_accept_samples_generic_hw(sc_module_name name) : sc_module(name), mVcdFile(0) {
    result_U = new nfa_accept_samples_generic_hw_result("result_U");
    result_U->clk(ap_clk);
    result_U->reset(ap_rst);
    result_U->address0(result_address0);
    result_U->ce0(result_ce0);
    result_U->we0(result_we0);
    result_U->d0(result_d0);
    result_U->q0(result_q0);
    start_indices_U = new nfa_accept_samples_generic_hw_start_indices("start_indices_U");
    start_indices_U->clk(ap_clk);
    start_indices_U->reset(ap_rst);
    start_indices_U->address0(start_indices_address0);
    start_indices_U->ce0(start_indices_ce0);
    start_indices_U->we0(start_indices_we0);
    start_indices_U->d0(start_indices_d0);
    start_indices_U->q0(start_indices_q0);
    grp_nfa_accept_sample_multi_fu_268 = new nfa_accept_sample_multi("grp_nfa_accept_sample_multi_fu_268");
    grp_nfa_accept_sample_multi_fu_268->ap_clk(ap_clk);
    grp_nfa_accept_sample_multi_fu_268->ap_rst(ap_rst);
    grp_nfa_accept_sample_multi_fu_268->ap_start(grp_nfa_accept_sample_multi_fu_268_ap_start);
    grp_nfa_accept_sample_multi_fu_268->ap_done(grp_nfa_accept_sample_multi_fu_268_ap_done);
    grp_nfa_accept_sample_multi_fu_268->ap_idle(grp_nfa_accept_sample_multi_fu_268_ap_idle);
    grp_nfa_accept_sample_multi_fu_268->ap_ready(grp_nfa_accept_sample_multi_fu_268_ap_ready);
    grp_nfa_accept_sample_multi_fu_268->nfa_initials_buckets_req_din(grp_nfa_accept_sample_multi_fu_268_nfa_initials_buckets_req_din);
    grp_nfa_accept_sample_multi_fu_268->nfa_initials_buckets_req_full_n(grp_nfa_accept_sample_multi_fu_268_nfa_initials_buckets_req_full_n);
    grp_nfa_accept_sample_multi_fu_268->nfa_initials_buckets_req_write(grp_nfa_accept_sample_multi_fu_268_nfa_initials_buckets_req_write);
    grp_nfa_accept_sample_multi_fu_268->nfa_initials_buckets_rsp_empty_n(grp_nfa_accept_sample_multi_fu_268_nfa_initials_buckets_rsp_empty_n);
    grp_nfa_accept_sample_multi_fu_268->nfa_initials_buckets_rsp_read(grp_nfa_accept_sample_multi_fu_268_nfa_initials_buckets_rsp_read);
    grp_nfa_accept_sample_multi_fu_268->nfa_initials_buckets_address(grp_nfa_accept_sample_multi_fu_268_nfa_initials_buckets_address);
    grp_nfa_accept_sample_multi_fu_268->nfa_initials_buckets_datain(grp_nfa_accept_sample_multi_fu_268_nfa_initials_buckets_datain);
    grp_nfa_accept_sample_multi_fu_268->nfa_initials_buckets_dataout(grp_nfa_accept_sample_multi_fu_268_nfa_initials_buckets_dataout);
    grp_nfa_accept_sample_multi_fu_268->nfa_initials_buckets_size(grp_nfa_accept_sample_multi_fu_268_nfa_initials_buckets_size);
    grp_nfa_accept_sample_multi_fu_268->nfa_finals_buckets_req_din(grp_nfa_accept_sample_multi_fu_268_nfa_finals_buckets_req_din);
    grp_nfa_accept_sample_multi_fu_268->nfa_finals_buckets_req_full_n(grp_nfa_accept_sample_multi_fu_268_nfa_finals_buckets_req_full_n);
    grp_nfa_accept_sample_multi_fu_268->nfa_finals_buckets_req_write(grp_nfa_accept_sample_multi_fu_268_nfa_finals_buckets_req_write);
    grp_nfa_accept_sample_multi_fu_268->nfa_finals_buckets_rsp_empty_n(grp_nfa_accept_sample_multi_fu_268_nfa_finals_buckets_rsp_empty_n);
    grp_nfa_accept_sample_multi_fu_268->nfa_finals_buckets_rsp_read(grp_nfa_accept_sample_multi_fu_268_nfa_finals_buckets_rsp_read);
    grp_nfa_accept_sample_multi_fu_268->nfa_finals_buckets_address(grp_nfa_accept_sample_multi_fu_268_nfa_finals_buckets_address);
    grp_nfa_accept_sample_multi_fu_268->nfa_finals_buckets_datain(grp_nfa_accept_sample_multi_fu_268_nfa_finals_buckets_datain);
    grp_nfa_accept_sample_multi_fu_268->nfa_finals_buckets_dataout(grp_nfa_accept_sample_multi_fu_268_nfa_finals_buckets_dataout);
    grp_nfa_accept_sample_multi_fu_268->nfa_finals_buckets_size(grp_nfa_accept_sample_multi_fu_268_nfa_finals_buckets_size);
    grp_nfa_accept_sample_multi_fu_268->nfa_forward_buckets_req_din(grp_nfa_accept_sample_multi_fu_268_nfa_forward_buckets_req_din);
    grp_nfa_accept_sample_multi_fu_268->nfa_forward_buckets_req_full_n(grp_nfa_accept_sample_multi_fu_268_nfa_forward_buckets_req_full_n);
    grp_nfa_accept_sample_multi_fu_268->nfa_forward_buckets_req_write(grp_nfa_accept_sample_multi_fu_268_nfa_forward_buckets_req_write);
    grp_nfa_accept_sample_multi_fu_268->nfa_forward_buckets_rsp_empty_n(grp_nfa_accept_sample_multi_fu_268_nfa_forward_buckets_rsp_empty_n);
    grp_nfa_accept_sample_multi_fu_268->nfa_forward_buckets_rsp_read(grp_nfa_accept_sample_multi_fu_268_nfa_forward_buckets_rsp_read);
    grp_nfa_accept_sample_multi_fu_268->nfa_forward_buckets_address(grp_nfa_accept_sample_multi_fu_268_nfa_forward_buckets_address);
    grp_nfa_accept_sample_multi_fu_268->nfa_forward_buckets_datain(grp_nfa_accept_sample_multi_fu_268_nfa_forward_buckets_datain);
    grp_nfa_accept_sample_multi_fu_268->nfa_forward_buckets_dataout(grp_nfa_accept_sample_multi_fu_268_nfa_forward_buckets_dataout);
    grp_nfa_accept_sample_multi_fu_268->nfa_forward_buckets_size(grp_nfa_accept_sample_multi_fu_268_nfa_forward_buckets_size);
    grp_nfa_accept_sample_multi_fu_268->nfa_symbols(grp_nfa_accept_sample_multi_fu_268_nfa_symbols);
    grp_nfa_accept_sample_multi_fu_268->sample_req_din(grp_nfa_accept_sample_multi_fu_268_sample_req_din);
    grp_nfa_accept_sample_multi_fu_268->sample_req_full_n(grp_nfa_accept_sample_multi_fu_268_sample_req_full_n);
    grp_nfa_accept_sample_multi_fu_268->sample_req_write(grp_nfa_accept_sample_multi_fu_268_sample_req_write);
    grp_nfa_accept_sample_multi_fu_268->sample_rsp_empty_n(grp_nfa_accept_sample_multi_fu_268_sample_rsp_empty_n);
    grp_nfa_accept_sample_multi_fu_268->sample_rsp_read(grp_nfa_accept_sample_multi_fu_268_sample_rsp_read);
    grp_nfa_accept_sample_multi_fu_268->sample_address(grp_nfa_accept_sample_multi_fu_268_sample_address);
    grp_nfa_accept_sample_multi_fu_268->sample_datain(grp_nfa_accept_sample_multi_fu_268_sample_datain);
    grp_nfa_accept_sample_multi_fu_268->sample_dataout(grp_nfa_accept_sample_multi_fu_268_sample_dataout);
    grp_nfa_accept_sample_multi_fu_268->sample_size(grp_nfa_accept_sample_multi_fu_268_sample_size);
    grp_nfa_accept_sample_multi_fu_268->length_r(grp_nfa_accept_sample_multi_fu_268_length_r);
    grp_nfa_accept_sample_multi_fu_268->start_indices_address0(grp_nfa_accept_sample_multi_fu_268_start_indices_address0);
    grp_nfa_accept_sample_multi_fu_268->start_indices_ce0(grp_nfa_accept_sample_multi_fu_268_start_indices_ce0);
    grp_nfa_accept_sample_multi_fu_268->start_indices_q0(grp_nfa_accept_sample_multi_fu_268_start_indices_q0);
    grp_nfa_accept_sample_multi_fu_268->stop_on_first(grp_nfa_accept_sample_multi_fu_268_stop_on_first);
    grp_nfa_accept_sample_multi_fu_268->accept(grp_nfa_accept_sample_multi_fu_268_accept);
    grp_nfa_accept_sample_multi_fu_268->units(grp_nfa_accept_sample_multi_fu_268_units);
    grp_nfa_accept_sample_multi_fu_268->result_address0(grp_nfa_accept_sample_multi_fu_268_result_address0);
    grp_nfa_accept_sample_multi_fu_268->result_ce0(grp_nfa_accept_sample_multi_fu_268_result_ce0);
    grp_nfa_accept_sample_multi_fu_268->result_we0(grp_nfa_accept_sample_multi_fu_268_result_we0);
    grp_nfa_accept_sample_multi_fu_268->result_d0(grp_nfa_accept_sample_multi_fu_268_result_d0);
    grp_nfa_accept_sample_multi_fu_268->result_q0(grp_nfa_accept_sample_multi_fu_268_result_q0);
    grp_nfa_accept_sample_multi_fu_268->ap_return(grp_nfa_accept_sample_multi_fu_268_ap_return);
    grp_sample_iterator_next_fu_289 = new sample_iterator_next("grp_sample_iterator_next_fu_289");
    grp_sample_iterator_next_fu_289->ap_clk(ap_clk);
    grp_sample_iterator_next_fu_289->ap_rst(ap_rst);
    grp_sample_iterator_next_fu_289->ap_start(grp_sample_iterator_next_fu_289_ap_start);
    grp_sample_iterator_next_fu_289->ap_done(grp_sample_iterator_next_fu_289_ap_done);
    grp_sample_iterator_next_fu_289->ap_idle(grp_sample_iterator_next_fu_289_ap_idle);
    grp_sample_iterator_next_fu_289->ap_ready(grp_sample_iterator_next_fu_289_ap_ready);
    grp_sample_iterator_next_fu_289->indices_req_din(grp_sample_iterator_next_fu_289_indices_req_din);
    grp_sample_iterator_next_fu_289->indices_req_full_n(grp_sample_iterator_next_fu_289_indices_req_full_n);
    grp_sample_iterator_next_fu_289->indices_req_write(grp_sample_iterator_next_fu_289_indices_req_write);
    grp_sample_iterator_next_fu_289->indices_rsp_empty_n(grp_sample_iterator_next_fu_289_indices_rsp_empty_n);
    grp_sample_iterator_next_fu_289->indices_rsp_read(grp_sample_iterator_next_fu_289_indices_rsp_read);
    grp_sample_iterator_next_fu_289->indices_address(grp_sample_iterator_next_fu_289_indices_address);
    grp_sample_iterator_next_fu_289->indices_datain(grp_sample_iterator_next_fu_289_indices_datain);
    grp_sample_iterator_next_fu_289->indices_dataout(grp_sample_iterator_next_fu_289_indices_dataout);
    grp_sample_iterator_next_fu_289->indices_size(grp_sample_iterator_next_fu_289_indices_size);
    grp_sample_iterator_next_fu_289->i_index(grp_sample_iterator_next_fu_289_i_index);
    grp_sample_iterator_next_fu_289->i_sample(grp_sample_iterator_next_fu_289_i_sample);
    grp_sample_iterator_next_fu_289->ap_return_0(grp_sample_iterator_next_fu_289_ap_return_0);
    grp_sample_iterator_next_fu_289->ap_return_1(grp_sample_iterator_next_fu_289_ap_return_1);
    grp_sample_iterator_get_offset_fu_297 = new sample_iterator_get_offset("grp_sample_iterator_get_offset_fu_297");
    grp_sample_iterator_get_offset_fu_297->ap_clk(ap_clk);
    grp_sample_iterator_get_offset_fu_297->ap_rst(ap_rst);
    grp_sample_iterator_get_offset_fu_297->ap_start(grp_sample_iterator_get_offset_fu_297_ap_start);
    grp_sample_iterator_get_offset_fu_297->ap_done(grp_sample_iterator_get_offset_fu_297_ap_done);
    grp_sample_iterator_get_offset_fu_297->ap_idle(grp_sample_iterator_get_offset_fu_297_ap_idle);
    grp_sample_iterator_get_offset_fu_297->ap_ready(grp_sample_iterator_get_offset_fu_297_ap_ready);
    grp_sample_iterator_get_offset_fu_297->i_index(grp_sample_iterator_get_offset_fu_297_i_index);
    grp_sample_iterator_get_offset_fu_297->i_sample(grp_sample_iterator_get_offset_fu_297_i_sample);
    grp_sample_iterator_get_offset_fu_297->indices_req_din(grp_sample_iterator_get_offset_fu_297_indices_req_din);
    grp_sample_iterator_get_offset_fu_297->indices_req_full_n(grp_sample_iterator_get_offset_fu_297_indices_req_full_n);
    grp_sample_iterator_get_offset_fu_297->indices_req_write(grp_sample_iterator_get_offset_fu_297_indices_req_write);
    grp_sample_iterator_get_offset_fu_297->indices_rsp_empty_n(grp_sample_iterator_get_offset_fu_297_indices_rsp_empty_n);
    grp_sample_iterator_get_offset_fu_297->indices_rsp_read(grp_sample_iterator_get_offset_fu_297_indices_rsp_read);
    grp_sample_iterator_get_offset_fu_297->indices_address(grp_sample_iterator_get_offset_fu_297_indices_address);
    grp_sample_iterator_get_offset_fu_297->indices_datain(grp_sample_iterator_get_offset_fu_297_indices_datain);
    grp_sample_iterator_get_offset_fu_297->indices_dataout(grp_sample_iterator_get_offset_fu_297_indices_dataout);
    grp_sample_iterator_get_offset_fu_297->indices_size(grp_sample_iterator_get_offset_fu_297_indices_size);
    grp_sample_iterator_get_offset_fu_297->sample_buffer_size(grp_sample_iterator_get_offset_fu_297_sample_buffer_size);
    grp_sample_iterator_get_offset_fu_297->sample_length(grp_sample_iterator_get_offset_fu_297_sample_length);
    grp_sample_iterator_get_offset_fu_297->ap_return(grp_sample_iterator_get_offset_fu_297_ap_return);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_return);
    sensitive << ( ap_CS_fsm );
    sensitive << ( p_0_reg_256 );

    SC_METHOD(thread_ap_sig_bdd_287);
    sensitive << ( tmp_3_fu_326_p3 );
    sensitive << ( finished_3_fu_358_p2 );

    SC_METHOD(thread_brmerge_demorgan_fu_387_p2);
    sensitive << ( stop_on_first );
    sensitive << ( grp_nfa_accept_sample_multi_fu_268_ap_return );

    SC_METHOD(thread_c_1_fu_419_p2);
    sensitive << ( c_fu_106 );

    SC_METHOD(thread_exitcond_fu_392_p2);
    sensitive << ( ap_CS_fsm );
    sensitive << ( indvars_iv_reg_208 );
    sensitive << ( k_1_reg_245 );

    SC_METHOD(thread_finished_3_fu_358_p2);
    sensitive << ( tmp_i_fu_348_p2 );
    sensitive << ( tmp_i_16_fu_353_p2 );

    SC_METHOD(thread_grp_nfa_accept_sample_multi_fu_268_accept);
    sensitive << ( ap_CS_fsm );
    sensitive << ( accept );

    SC_METHOD(thread_grp_nfa_accept_sample_multi_fu_268_ap_start);
    sensitive << ( grp_nfa_accept_sample_multi_fu_268_ap_start_ap_start_reg );

    SC_METHOD(thread_grp_nfa_accept_sample_multi_fu_268_length_r);
    sensitive << ( ap_CS_fsm );
    sensitive << ( sample_length );

    SC_METHOD(thread_grp_nfa_accept_sample_multi_fu_268_nfa_finals_buckets_datain);
    sensitive << ( ap_CS_fsm );
    sensitive << ( nfa_finals_buckets_datain );
    sensitive << ( tmp_3_fu_326_p3 );
    sensitive << ( finished_3_fu_358_p2 );
    sensitive << ( grp_nfa_accept_sample_multi_fu_268_ap_done );

    SC_METHOD(thread_grp_nfa_accept_sample_multi_fu_268_nfa_finals_buckets_req_full_n);
    sensitive << ( ap_CS_fsm );
    sensitive << ( nfa_finals_buckets_req_full_n );
    sensitive << ( tmp_3_fu_326_p3 );
    sensitive << ( finished_3_fu_358_p2 );
    sensitive << ( grp_nfa_accept_sample_multi_fu_268_ap_done );

    SC_METHOD(thread_grp_nfa_accept_sample_multi_fu_268_nfa_finals_buckets_rsp_empty_n);
    sensitive << ( ap_CS_fsm );
    sensitive << ( nfa_finals_buckets_rsp_empty_n );
    sensitive << ( tmp_3_fu_326_p3 );
    sensitive << ( finished_3_fu_358_p2 );
    sensitive << ( grp_nfa_accept_sample_multi_fu_268_ap_done );

    SC_METHOD(thread_grp_nfa_accept_sample_multi_fu_268_nfa_forward_buckets_datain);
    sensitive << ( ap_CS_fsm );
    sensitive << ( nfa_forward_buckets_datain );
    sensitive << ( tmp_3_fu_326_p3 );
    sensitive << ( finished_3_fu_358_p2 );
    sensitive << ( grp_nfa_accept_sample_multi_fu_268_ap_done );

    SC_METHOD(thread_grp_nfa_accept_sample_multi_fu_268_nfa_forward_buckets_req_full_n);
    sensitive << ( ap_CS_fsm );
    sensitive << ( nfa_forward_buckets_req_full_n );
    sensitive << ( tmp_3_fu_326_p3 );
    sensitive << ( finished_3_fu_358_p2 );
    sensitive << ( grp_nfa_accept_sample_multi_fu_268_ap_done );

    SC_METHOD(thread_grp_nfa_accept_sample_multi_fu_268_nfa_forward_buckets_rsp_empty_n);
    sensitive << ( ap_CS_fsm );
    sensitive << ( nfa_forward_buckets_rsp_empty_n );
    sensitive << ( tmp_3_fu_326_p3 );
    sensitive << ( finished_3_fu_358_p2 );
    sensitive << ( grp_nfa_accept_sample_multi_fu_268_ap_done );

    SC_METHOD(thread_grp_nfa_accept_sample_multi_fu_268_nfa_initials_buckets_datain);
    sensitive << ( ap_CS_fsm );
    sensitive << ( nfa_initials_buckets_datain );
    sensitive << ( tmp_3_fu_326_p3 );
    sensitive << ( finished_3_fu_358_p2 );
    sensitive << ( grp_nfa_accept_sample_multi_fu_268_ap_done );

    SC_METHOD(thread_grp_nfa_accept_sample_multi_fu_268_nfa_initials_buckets_req_full_n);
    sensitive << ( ap_CS_fsm );
    sensitive << ( nfa_initials_buckets_req_full_n );
    sensitive << ( tmp_3_fu_326_p3 );
    sensitive << ( finished_3_fu_358_p2 );
    sensitive << ( grp_nfa_accept_sample_multi_fu_268_ap_done );

    SC_METHOD(thread_grp_nfa_accept_sample_multi_fu_268_nfa_initials_buckets_rsp_empty_n);
    sensitive << ( ap_CS_fsm );
    sensitive << ( nfa_initials_buckets_rsp_empty_n );
    sensitive << ( tmp_3_fu_326_p3 );
    sensitive << ( finished_3_fu_358_p2 );
    sensitive << ( grp_nfa_accept_sample_multi_fu_268_ap_done );

    SC_METHOD(thread_grp_nfa_accept_sample_multi_fu_268_nfa_symbols);
    sensitive << ( ap_CS_fsm );
    sensitive << ( nfa_symbols );

    SC_METHOD(thread_grp_nfa_accept_sample_multi_fu_268_result_q0);
    sensitive << ( ap_CS_fsm );
    sensitive << ( result_q0 );

    SC_METHOD(thread_grp_nfa_accept_sample_multi_fu_268_sample_datain);
    sensitive << ( ap_CS_fsm );
    sensitive << ( sample_buffer_datain );
    sensitive << ( tmp_3_fu_326_p3 );
    sensitive << ( finished_3_fu_358_p2 );
    sensitive << ( grp_nfa_accept_sample_multi_fu_268_ap_done );

    SC_METHOD(thread_grp_nfa_accept_sample_multi_fu_268_sample_req_full_n);
    sensitive << ( ap_CS_fsm );
    sensitive << ( sample_buffer_req_full_n );
    sensitive << ( tmp_3_fu_326_p3 );
    sensitive << ( finished_3_fu_358_p2 );
    sensitive << ( grp_nfa_accept_sample_multi_fu_268_ap_done );

    SC_METHOD(thread_grp_nfa_accept_sample_multi_fu_268_sample_rsp_empty_n);
    sensitive << ( ap_CS_fsm );
    sensitive << ( sample_buffer_rsp_empty_n );
    sensitive << ( tmp_3_fu_326_p3 );
    sensitive << ( finished_3_fu_358_p2 );
    sensitive << ( grp_nfa_accept_sample_multi_fu_268_ap_done );

    SC_METHOD(thread_grp_nfa_accept_sample_multi_fu_268_start_indices_q0);
    sensitive << ( ap_CS_fsm );
    sensitive << ( start_indices_q0 );

    SC_METHOD(thread_grp_nfa_accept_sample_multi_fu_268_stop_on_first);
    sensitive << ( ap_CS_fsm );
    sensitive << ( stop_on_first );

    SC_METHOD(thread_grp_nfa_accept_sample_multi_fu_268_units);
    sensitive << ( ap_CS_fsm );
    sensitive << ( indvars_iv_reg_208 );

    SC_METHOD(thread_grp_sample_iterator_get_offset_fu_297_ap_start);
    sensitive << ( grp_sample_iterator_get_offset_fu_297_ap_start_ap_start_reg );

    SC_METHOD(thread_grp_sample_iterator_get_offset_fu_297_i_index);
    sensitive << ( ap_CS_fsm );
    sensitive << ( i_index_load_reg_504 );

    SC_METHOD(thread_grp_sample_iterator_get_offset_fu_297_i_sample);
    sensitive << ( ap_CS_fsm );
    sensitive << ( i_sample_load_reg_510 );

    SC_METHOD(thread_grp_sample_iterator_get_offset_fu_297_indices_datain);
    sensitive << ( ap_CS_fsm );
    sensitive << ( indices_datain );
    sensitive << ( tmp_3_fu_326_p3 );
    sensitive << ( finished_3_fu_358_p2 );
    sensitive << ( grp_sample_iterator_get_offset_fu_297_ap_done );

    SC_METHOD(thread_grp_sample_iterator_get_offset_fu_297_indices_req_full_n);
    sensitive << ( ap_CS_fsm );
    sensitive << ( indices_req_full_n );
    sensitive << ( tmp_3_fu_326_p3 );
    sensitive << ( finished_3_fu_358_p2 );
    sensitive << ( grp_sample_iterator_get_offset_fu_297_ap_done );

    SC_METHOD(thread_grp_sample_iterator_get_offset_fu_297_indices_rsp_empty_n);
    sensitive << ( ap_CS_fsm );
    sensitive << ( indices_rsp_empty_n );
    sensitive << ( tmp_3_fu_326_p3 );
    sensitive << ( finished_3_fu_358_p2 );
    sensitive << ( grp_sample_iterator_get_offset_fu_297_ap_done );

    SC_METHOD(thread_grp_sample_iterator_get_offset_fu_297_sample_buffer_size);
    sensitive << ( ap_CS_fsm );
    sensitive << ( sample_buffer_length );

    SC_METHOD(thread_grp_sample_iterator_get_offset_fu_297_sample_length);
    sensitive << ( ap_CS_fsm );
    sensitive << ( sample_length );

    SC_METHOD(thread_grp_sample_iterator_next_fu_289_ap_start);
    sensitive << ( grp_sample_iterator_next_fu_289_ap_start_ap_start_reg );

    SC_METHOD(thread_grp_sample_iterator_next_fu_289_i_index);
    sensitive << ( ap_CS_fsm );
    sensitive << ( i_index_load_reg_504 );

    SC_METHOD(thread_grp_sample_iterator_next_fu_289_i_sample);
    sensitive << ( ap_CS_fsm );
    sensitive << ( i_sample_load_reg_510 );

    SC_METHOD(thread_grp_sample_iterator_next_fu_289_indices_datain);
    sensitive << ( ap_CS_fsm );
    sensitive << ( indices_datain );
    sensitive << ( grp_sample_iterator_next_fu_289_ap_done );

    SC_METHOD(thread_grp_sample_iterator_next_fu_289_indices_req_full_n);
    sensitive << ( ap_CS_fsm );
    sensitive << ( indices_req_full_n );
    sensitive << ( grp_sample_iterator_next_fu_289_ap_done );

    SC_METHOD(thread_grp_sample_iterator_next_fu_289_indices_rsp_empty_n);
    sensitive << ( ap_CS_fsm );
    sensitive << ( indices_rsp_empty_n );
    sensitive << ( grp_sample_iterator_next_fu_289_ap_done );

    SC_METHOD(thread_indices_address);
    sensitive << ( ap_CS_fsm );
    sensitive << ( tmp_3_fu_326_p3 );
    sensitive << ( finished_3_fu_358_p2 );
    sensitive << ( grp_sample_iterator_next_fu_289_ap_idle );
    sensitive << ( grp_sample_iterator_next_fu_289_indices_address );
    sensitive << ( grp_sample_iterator_get_offset_fu_297_ap_idle );
    sensitive << ( grp_sample_iterator_get_offset_fu_297_indices_address );

    SC_METHOD(thread_indices_dataout);
    sensitive << ( ap_CS_fsm );
    sensitive << ( tmp_3_fu_326_p3 );
    sensitive << ( finished_3_fu_358_p2 );
    sensitive << ( grp_sample_iterator_next_fu_289_ap_idle );
    sensitive << ( grp_sample_iterator_next_fu_289_indices_dataout );
    sensitive << ( grp_sample_iterator_get_offset_fu_297_ap_idle );
    sensitive << ( grp_sample_iterator_get_offset_fu_297_indices_dataout );

    SC_METHOD(thread_indices_req_din);
    sensitive << ( ap_CS_fsm );
    sensitive << ( tmp_3_fu_326_p3 );
    sensitive << ( finished_3_fu_358_p2 );
    sensitive << ( grp_sample_iterator_next_fu_289_ap_idle );
    sensitive << ( grp_sample_iterator_next_fu_289_indices_req_din );
    sensitive << ( grp_sample_iterator_get_offset_fu_297_ap_idle );
    sensitive << ( grp_sample_iterator_get_offset_fu_297_indices_req_din );

    SC_METHOD(thread_indices_req_write);
    sensitive << ( ap_CS_fsm );
    sensitive << ( tmp_3_fu_326_p3 );
    sensitive << ( finished_3_fu_358_p2 );
    sensitive << ( grp_sample_iterator_next_fu_289_ap_idle );
    sensitive << ( grp_sample_iterator_next_fu_289_indices_req_write );
    sensitive << ( grp_sample_iterator_get_offset_fu_297_ap_idle );
    sensitive << ( grp_sample_iterator_get_offset_fu_297_indices_req_write );

    SC_METHOD(thread_indices_rsp_read);
    sensitive << ( ap_CS_fsm );
    sensitive << ( tmp_3_fu_326_p3 );
    sensitive << ( finished_3_fu_358_p2 );
    sensitive << ( grp_sample_iterator_next_fu_289_ap_idle );
    sensitive << ( grp_sample_iterator_next_fu_289_indices_rsp_read );
    sensitive << ( grp_sample_iterator_get_offset_fu_297_ap_idle );
    sensitive << ( grp_sample_iterator_get_offset_fu_297_indices_rsp_read );

    SC_METHOD(thread_indices_size);
    sensitive << ( ap_CS_fsm );
    sensitive << ( tmp_3_fu_326_p3 );
    sensitive << ( finished_3_fu_358_p2 );
    sensitive << ( grp_sample_iterator_next_fu_289_ap_idle );
    sensitive << ( grp_sample_iterator_next_fu_289_indices_size );
    sensitive << ( grp_sample_iterator_get_offset_fu_297_ap_idle );
    sensitive << ( grp_sample_iterator_get_offset_fu_297_indices_size );

    SC_METHOD(thread_k_2_fu_398_p2);
    sensitive << ( k_1_reg_245 );

    SC_METHOD(thread_nfa_finals_buckets_address);
    sensitive << ( ap_CS_fsm );
    sensitive << ( tmp_3_fu_326_p3 );
    sensitive << ( finished_3_fu_358_p2 );
    sensitive << ( grp_nfa_accept_sample_multi_fu_268_ap_idle );
    sensitive << ( grp_nfa_accept_sample_multi_fu_268_nfa_finals_buckets_address );

    SC_METHOD(thread_nfa_finals_buckets_dataout);
    sensitive << ( ap_CS_fsm );
    sensitive << ( tmp_3_fu_326_p3 );
    sensitive << ( finished_3_fu_358_p2 );
    sensitive << ( grp_nfa_accept_sample_multi_fu_268_ap_idle );
    sensitive << ( grp_nfa_accept_sample_multi_fu_268_nfa_finals_buckets_dataout );

    SC_METHOD(thread_nfa_finals_buckets_req_din);
    sensitive << ( ap_CS_fsm );
    sensitive << ( tmp_3_fu_326_p3 );
    sensitive << ( finished_3_fu_358_p2 );
    sensitive << ( grp_nfa_accept_sample_multi_fu_268_ap_idle );
    sensitive << ( grp_nfa_accept_sample_multi_fu_268_nfa_finals_buckets_req_din );

    SC_METHOD(thread_nfa_finals_buckets_req_write);
    sensitive << ( ap_CS_fsm );
    sensitive << ( tmp_3_fu_326_p3 );
    sensitive << ( finished_3_fu_358_p2 );
    sensitive << ( grp_nfa_accept_sample_multi_fu_268_ap_idle );
    sensitive << ( grp_nfa_accept_sample_multi_fu_268_nfa_finals_buckets_req_write );

    SC_METHOD(thread_nfa_finals_buckets_rsp_read);
    sensitive << ( ap_CS_fsm );
    sensitive << ( tmp_3_fu_326_p3 );
    sensitive << ( finished_3_fu_358_p2 );
    sensitive << ( grp_nfa_accept_sample_multi_fu_268_ap_idle );
    sensitive << ( grp_nfa_accept_sample_multi_fu_268_nfa_finals_buckets_rsp_read );

    SC_METHOD(thread_nfa_finals_buckets_size);
    sensitive << ( ap_CS_fsm );
    sensitive << ( tmp_3_fu_326_p3 );
    sensitive << ( finished_3_fu_358_p2 );
    sensitive << ( grp_nfa_accept_sample_multi_fu_268_ap_idle );
    sensitive << ( grp_nfa_accept_sample_multi_fu_268_nfa_finals_buckets_size );

    SC_METHOD(thread_nfa_forward_buckets_address);
    sensitive << ( ap_CS_fsm );
    sensitive << ( tmp_3_fu_326_p3 );
    sensitive << ( finished_3_fu_358_p2 );
    sensitive << ( grp_nfa_accept_sample_multi_fu_268_ap_idle );
    sensitive << ( grp_nfa_accept_sample_multi_fu_268_nfa_forward_buckets_address );

    SC_METHOD(thread_nfa_forward_buckets_dataout);
    sensitive << ( ap_CS_fsm );
    sensitive << ( tmp_3_fu_326_p3 );
    sensitive << ( finished_3_fu_358_p2 );
    sensitive << ( grp_nfa_accept_sample_multi_fu_268_ap_idle );
    sensitive << ( grp_nfa_accept_sample_multi_fu_268_nfa_forward_buckets_dataout );

    SC_METHOD(thread_nfa_forward_buckets_req_din);
    sensitive << ( ap_CS_fsm );
    sensitive << ( tmp_3_fu_326_p3 );
    sensitive << ( finished_3_fu_358_p2 );
    sensitive << ( grp_nfa_accept_sample_multi_fu_268_ap_idle );
    sensitive << ( grp_nfa_accept_sample_multi_fu_268_nfa_forward_buckets_req_din );

    SC_METHOD(thread_nfa_forward_buckets_req_write);
    sensitive << ( ap_CS_fsm );
    sensitive << ( tmp_3_fu_326_p3 );
    sensitive << ( finished_3_fu_358_p2 );
    sensitive << ( grp_nfa_accept_sample_multi_fu_268_ap_idle );
    sensitive << ( grp_nfa_accept_sample_multi_fu_268_nfa_forward_buckets_req_write );

    SC_METHOD(thread_nfa_forward_buckets_rsp_read);
    sensitive << ( ap_CS_fsm );
    sensitive << ( tmp_3_fu_326_p3 );
    sensitive << ( finished_3_fu_358_p2 );
    sensitive << ( grp_nfa_accept_sample_multi_fu_268_ap_idle );
    sensitive << ( grp_nfa_accept_sample_multi_fu_268_nfa_forward_buckets_rsp_read );

    SC_METHOD(thread_nfa_forward_buckets_size);
    sensitive << ( ap_CS_fsm );
    sensitive << ( tmp_3_fu_326_p3 );
    sensitive << ( finished_3_fu_358_p2 );
    sensitive << ( grp_nfa_accept_sample_multi_fu_268_ap_idle );
    sensitive << ( grp_nfa_accept_sample_multi_fu_268_nfa_forward_buckets_size );

    SC_METHOD(thread_nfa_initials_buckets_address);
    sensitive << ( ap_CS_fsm );
    sensitive << ( tmp_3_fu_326_p3 );
    sensitive << ( finished_3_fu_358_p2 );
    sensitive << ( grp_nfa_accept_sample_multi_fu_268_ap_idle );
    sensitive << ( grp_nfa_accept_sample_multi_fu_268_nfa_initials_buckets_address );

    SC_METHOD(thread_nfa_initials_buckets_dataout);
    sensitive << ( ap_CS_fsm );
    sensitive << ( tmp_3_fu_326_p3 );
    sensitive << ( finished_3_fu_358_p2 );
    sensitive << ( grp_nfa_accept_sample_multi_fu_268_ap_idle );
    sensitive << ( grp_nfa_accept_sample_multi_fu_268_nfa_initials_buckets_dataout );

    SC_METHOD(thread_nfa_initials_buckets_req_din);
    sensitive << ( ap_CS_fsm );
    sensitive << ( tmp_3_fu_326_p3 );
    sensitive << ( finished_3_fu_358_p2 );
    sensitive << ( grp_nfa_accept_sample_multi_fu_268_ap_idle );
    sensitive << ( grp_nfa_accept_sample_multi_fu_268_nfa_initials_buckets_req_din );

    SC_METHOD(thread_nfa_initials_buckets_req_write);
    sensitive << ( ap_CS_fsm );
    sensitive << ( tmp_3_fu_326_p3 );
    sensitive << ( finished_3_fu_358_p2 );
    sensitive << ( grp_nfa_accept_sample_multi_fu_268_ap_idle );
    sensitive << ( grp_nfa_accept_sample_multi_fu_268_nfa_initials_buckets_req_write );

    SC_METHOD(thread_nfa_initials_buckets_rsp_read);
    sensitive << ( ap_CS_fsm );
    sensitive << ( tmp_3_fu_326_p3 );
    sensitive << ( finished_3_fu_358_p2 );
    sensitive << ( grp_nfa_accept_sample_multi_fu_268_ap_idle );
    sensitive << ( grp_nfa_accept_sample_multi_fu_268_nfa_initials_buckets_rsp_read );

    SC_METHOD(thread_nfa_initials_buckets_size);
    sensitive << ( ap_CS_fsm );
    sensitive << ( tmp_3_fu_326_p3 );
    sensitive << ( finished_3_fu_358_p2 );
    sensitive << ( grp_nfa_accept_sample_multi_fu_268_ap_idle );
    sensitive << ( grp_nfa_accept_sample_multi_fu_268_nfa_initials_buckets_size );

    SC_METHOD(thread_p_c_1_fu_425_p3);
    sensitive << ( result_q0 );
    sensitive << ( c_fu_106 );
    sensitive << ( c_1_fu_419_p2 );

    SC_METHOD(thread_result_address0);
    sensitive << ( ap_CS_fsm );
    sensitive << ( grp_nfa_accept_sample_multi_fu_268_result_address0 );
    sensitive << ( tmp_2_fu_404_p1 );

    SC_METHOD(thread_result_ce0);
    sensitive << ( ap_CS_fsm );
    sensitive << ( grp_nfa_accept_sample_multi_fu_268_result_ce0 );

    SC_METHOD(thread_result_d0);
    sensitive << ( ap_CS_fsm );
    sensitive << ( grp_nfa_accept_sample_multi_fu_268_result_d0 );

    SC_METHOD(thread_result_we0);
    sensitive << ( ap_CS_fsm );
    sensitive << ( grp_nfa_accept_sample_multi_fu_268_result_we0 );

    SC_METHOD(thread_sample_buffer_address);
    sensitive << ( ap_CS_fsm );
    sensitive << ( tmp_3_fu_326_p3 );
    sensitive << ( finished_3_fu_358_p2 );
    sensitive << ( grp_nfa_accept_sample_multi_fu_268_ap_idle );
    sensitive << ( grp_nfa_accept_sample_multi_fu_268_sample_address );

    SC_METHOD(thread_sample_buffer_dataout);
    sensitive << ( ap_CS_fsm );
    sensitive << ( tmp_3_fu_326_p3 );
    sensitive << ( finished_3_fu_358_p2 );
    sensitive << ( grp_nfa_accept_sample_multi_fu_268_ap_idle );
    sensitive << ( grp_nfa_accept_sample_multi_fu_268_sample_dataout );

    SC_METHOD(thread_sample_buffer_req_din);
    sensitive << ( ap_CS_fsm );
    sensitive << ( tmp_3_fu_326_p3 );
    sensitive << ( finished_3_fu_358_p2 );
    sensitive << ( grp_nfa_accept_sample_multi_fu_268_ap_idle );
    sensitive << ( grp_nfa_accept_sample_multi_fu_268_sample_req_din );

    SC_METHOD(thread_sample_buffer_req_write);
    sensitive << ( ap_CS_fsm );
    sensitive << ( tmp_3_fu_326_p3 );
    sensitive << ( finished_3_fu_358_p2 );
    sensitive << ( grp_nfa_accept_sample_multi_fu_268_ap_idle );
    sensitive << ( grp_nfa_accept_sample_multi_fu_268_sample_req_write );

    SC_METHOD(thread_sample_buffer_rsp_read);
    sensitive << ( ap_CS_fsm );
    sensitive << ( tmp_3_fu_326_p3 );
    sensitive << ( finished_3_fu_358_p2 );
    sensitive << ( grp_nfa_accept_sample_multi_fu_268_ap_idle );
    sensitive << ( grp_nfa_accept_sample_multi_fu_268_sample_rsp_read );

    SC_METHOD(thread_sample_buffer_size);
    sensitive << ( ap_CS_fsm );
    sensitive << ( tmp_3_fu_326_p3 );
    sensitive << ( finished_3_fu_358_p2 );
    sensitive << ( grp_nfa_accept_sample_multi_fu_268_ap_idle );
    sensitive << ( grp_nfa_accept_sample_multi_fu_268_sample_size );

    SC_METHOD(thread_start_indices_address0);
    sensitive << ( ap_CS_fsm );
    sensitive << ( grp_nfa_accept_sample_multi_fu_268_start_indices_address0 );
    sensitive << ( tmp_1_fu_364_p1 );

    SC_METHOD(thread_start_indices_ce0);
    sensitive << ( ap_CS_fsm );
    sensitive << ( grp_nfa_accept_sample_multi_fu_268_start_indices_ce0 );
    sensitive << ( grp_sample_iterator_get_offset_fu_297_ap_done );

    SC_METHOD(thread_start_indices_d0);
    sensitive << ( ap_CS_fsm );
    sensitive << ( grp_sample_iterator_get_offset_fu_297_ap_return );

    SC_METHOD(thread_start_indices_we0);
    sensitive << ( ap_CS_fsm );
    sensitive << ( grp_sample_iterator_get_offset_fu_297_ap_done );

    SC_METHOD(thread_tmp_1_fu_364_p1);
    sensitive << ( indvars_iv_reg_208 );

    SC_METHOD(thread_tmp_2_fu_404_p1);
    sensitive << ( k_1_reg_245 );

    SC_METHOD(thread_tmp_3_cast_fu_409_p1);
    sensitive << ( stop_on_first_meet_reg_521 );

    SC_METHOD(thread_tmp_3_fu_326_p3);
    sensitive << ( indvars_iv_reg_208 );

    SC_METHOD(thread_tmp_5_fu_412_p3);
    sensitive << ( stop_on_first );
    sensitive << ( c_fu_106 );
    sensitive << ( tmp_3_cast_fu_409_p1 );

    SC_METHOD(thread_tmp_i_16_fu_353_p2);
    sensitive << ( ap_CS_fsm );
    sensitive << ( end_index );
    sensitive << ( tmp_3_fu_326_p3 );
    sensitive << ( i_index_fu_110 );

    SC_METHOD(thread_tmp_i_fu_348_p2);
    sensitive << ( ap_CS_fsm );
    sensitive << ( end_sample );
    sensitive << ( tmp_3_fu_326_p3 );
    sensitive << ( i_sample_fu_114 );

    SC_METHOD(thread_units_fu_334_p2);
    sensitive << ( indvars_iv_reg_208 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( tmp_3_fu_326_p3 );
    sensitive << ( finished_3_fu_358_p2 );
    sensitive << ( grp_nfa_accept_sample_multi_fu_268_ap_done );
    sensitive << ( exitcond_fu_392_p2 );
    sensitive << ( finished_2_reg_233 );
    sensitive << ( grp_sample_iterator_next_fu_289_ap_done );
    sensitive << ( grp_sample_iterator_get_offset_fu_297_ap_done );
    sensitive << ( brmerge_demorgan_fu_387_p2 );

    SC_THREAD(thread_hdltv_gen);
    sensitive << ( ap_clk.pos() );

    ap_CS_fsm = "0000";
    grp_nfa_accept_sample_multi_fu_268_ap_start_ap_start_reg = SC_LOGIC_0;
    grp_sample_iterator_next_fu_289_ap_start_ap_start_reg = SC_LOGIC_0;
    grp_sample_iterator_get_offset_fu_297_ap_start_ap_start_reg = SC_LOGIC_0;
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "nfa_accept_samples_generic_hw_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, nfa_initials_buckets_req_din, "(port)nfa_initials_buckets_req_din");
    sc_trace(mVcdFile, nfa_initials_buckets_req_full_n, "(port)nfa_initials_buckets_req_full_n");
    sc_trace(mVcdFile, nfa_initials_buckets_req_write, "(port)nfa_initials_buckets_req_write");
    sc_trace(mVcdFile, nfa_initials_buckets_rsp_empty_n, "(port)nfa_initials_buckets_rsp_empty_n");
    sc_trace(mVcdFile, nfa_initials_buckets_rsp_read, "(port)nfa_initials_buckets_rsp_read");
    sc_trace(mVcdFile, nfa_initials_buckets_address, "(port)nfa_initials_buckets_address");
    sc_trace(mVcdFile, nfa_initials_buckets_datain, "(port)nfa_initials_buckets_datain");
    sc_trace(mVcdFile, nfa_initials_buckets_dataout, "(port)nfa_initials_buckets_dataout");
    sc_trace(mVcdFile, nfa_initials_buckets_size, "(port)nfa_initials_buckets_size");
    sc_trace(mVcdFile, nfa_finals_buckets_req_din, "(port)nfa_finals_buckets_req_din");
    sc_trace(mVcdFile, nfa_finals_buckets_req_full_n, "(port)nfa_finals_buckets_req_full_n");
    sc_trace(mVcdFile, nfa_finals_buckets_req_write, "(port)nfa_finals_buckets_req_write");
    sc_trace(mVcdFile, nfa_finals_buckets_rsp_empty_n, "(port)nfa_finals_buckets_rsp_empty_n");
    sc_trace(mVcdFile, nfa_finals_buckets_rsp_read, "(port)nfa_finals_buckets_rsp_read");
    sc_trace(mVcdFile, nfa_finals_buckets_address, "(port)nfa_finals_buckets_address");
    sc_trace(mVcdFile, nfa_finals_buckets_datain, "(port)nfa_finals_buckets_datain");
    sc_trace(mVcdFile, nfa_finals_buckets_dataout, "(port)nfa_finals_buckets_dataout");
    sc_trace(mVcdFile, nfa_finals_buckets_size, "(port)nfa_finals_buckets_size");
    sc_trace(mVcdFile, nfa_forward_buckets_req_din, "(port)nfa_forward_buckets_req_din");
    sc_trace(mVcdFile, nfa_forward_buckets_req_full_n, "(port)nfa_forward_buckets_req_full_n");
    sc_trace(mVcdFile, nfa_forward_buckets_req_write, "(port)nfa_forward_buckets_req_write");
    sc_trace(mVcdFile, nfa_forward_buckets_rsp_empty_n, "(port)nfa_forward_buckets_rsp_empty_n");
    sc_trace(mVcdFile, nfa_forward_buckets_rsp_read, "(port)nfa_forward_buckets_rsp_read");
    sc_trace(mVcdFile, nfa_forward_buckets_address, "(port)nfa_forward_buckets_address");
    sc_trace(mVcdFile, nfa_forward_buckets_datain, "(port)nfa_forward_buckets_datain");
    sc_trace(mVcdFile, nfa_forward_buckets_dataout, "(port)nfa_forward_buckets_dataout");
    sc_trace(mVcdFile, nfa_forward_buckets_size, "(port)nfa_forward_buckets_size");
    sc_trace(mVcdFile, nfa_symbols, "(port)nfa_symbols");
    sc_trace(mVcdFile, sample_buffer_req_din, "(port)sample_buffer_req_din");
    sc_trace(mVcdFile, sample_buffer_req_full_n, "(port)sample_buffer_req_full_n");
    sc_trace(mVcdFile, sample_buffer_req_write, "(port)sample_buffer_req_write");
    sc_trace(mVcdFile, sample_buffer_rsp_empty_n, "(port)sample_buffer_rsp_empty_n");
    sc_trace(mVcdFile, sample_buffer_rsp_read, "(port)sample_buffer_rsp_read");
    sc_trace(mVcdFile, sample_buffer_address, "(port)sample_buffer_address");
    sc_trace(mVcdFile, sample_buffer_datain, "(port)sample_buffer_datain");
    sc_trace(mVcdFile, sample_buffer_dataout, "(port)sample_buffer_dataout");
    sc_trace(mVcdFile, sample_buffer_size, "(port)sample_buffer_size");
    sc_trace(mVcdFile, sample_buffer_length, "(port)sample_buffer_length");
    sc_trace(mVcdFile, sample_length, "(port)sample_length");
    sc_trace(mVcdFile, indices_req_din, "(port)indices_req_din");
    sc_trace(mVcdFile, indices_req_full_n, "(port)indices_req_full_n");
    sc_trace(mVcdFile, indices_req_write, "(port)indices_req_write");
    sc_trace(mVcdFile, indices_rsp_empty_n, "(port)indices_rsp_empty_n");
    sc_trace(mVcdFile, indices_rsp_read, "(port)indices_rsp_read");
    sc_trace(mVcdFile, indices_address, "(port)indices_address");
    sc_trace(mVcdFile, indices_datain, "(port)indices_datain");
    sc_trace(mVcdFile, indices_dataout, "(port)indices_dataout");
    sc_trace(mVcdFile, indices_size, "(port)indices_size");
    sc_trace(mVcdFile, i_size, "(port)i_size");
    sc_trace(mVcdFile, begin_index, "(port)begin_index");
    sc_trace(mVcdFile, begin_sample, "(port)begin_sample");
    sc_trace(mVcdFile, end_index, "(port)end_index");
    sc_trace(mVcdFile, end_sample, "(port)end_sample");
    sc_trace(mVcdFile, stop_on_first, "(port)stop_on_first");
    sc_trace(mVcdFile, accept, "(port)accept");
    sc_trace(mVcdFile, ap_return, "(port)ap_return");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, units_fu_334_p2, "units_fu_334_p2");
    sc_trace(mVcdFile, units_reg_499, "units_reg_499");
    sc_trace(mVcdFile, i_index_load_reg_504, "i_index_load_reg_504");
    sc_trace(mVcdFile, tmp_3_fu_326_p3, "tmp_3_fu_326_p3");
    sc_trace(mVcdFile, i_sample_load_reg_510, "i_sample_load_reg_510");
    sc_trace(mVcdFile, finished_3_fu_358_p2, "finished_3_fu_358_p2");
    sc_trace(mVcdFile, grp_nfa_accept_sample_multi_fu_268_ap_return, "grp_nfa_accept_sample_multi_fu_268_ap_return");
    sc_trace(mVcdFile, stop_on_first_meet_reg_521, "stop_on_first_meet_reg_521");
    sc_trace(mVcdFile, grp_nfa_accept_sample_multi_fu_268_ap_done, "grp_nfa_accept_sample_multi_fu_268_ap_done");
    sc_trace(mVcdFile, k_2_fu_398_p2, "k_2_fu_398_p2");
    sc_trace(mVcdFile, k_2_reg_532, "k_2_reg_532");
    sc_trace(mVcdFile, exitcond_fu_392_p2, "exitcond_fu_392_p2");
    sc_trace(mVcdFile, tmp_5_fu_412_p3, "tmp_5_fu_412_p3");
    sc_trace(mVcdFile, finished_2_reg_233, "finished_2_reg_233");
    sc_trace(mVcdFile, result_address0, "result_address0");
    sc_trace(mVcdFile, result_ce0, "result_ce0");
    sc_trace(mVcdFile, result_we0, "result_we0");
    sc_trace(mVcdFile, result_d0, "result_d0");
    sc_trace(mVcdFile, result_q0, "result_q0");
    sc_trace(mVcdFile, start_indices_address0, "start_indices_address0");
    sc_trace(mVcdFile, start_indices_ce0, "start_indices_ce0");
    sc_trace(mVcdFile, start_indices_we0, "start_indices_we0");
    sc_trace(mVcdFile, start_indices_d0, "start_indices_d0");
    sc_trace(mVcdFile, start_indices_q0, "start_indices_q0");
    sc_trace(mVcdFile, grp_nfa_accept_sample_multi_fu_268_ap_start, "grp_nfa_accept_sample_multi_fu_268_ap_start");
    sc_trace(mVcdFile, grp_nfa_accept_sample_multi_fu_268_ap_idle, "grp_nfa_accept_sample_multi_fu_268_ap_idle");
    sc_trace(mVcdFile, grp_nfa_accept_sample_multi_fu_268_ap_ready, "grp_nfa_accept_sample_multi_fu_268_ap_ready");
    sc_trace(mVcdFile, grp_nfa_accept_sample_multi_fu_268_nfa_initials_buckets_req_din, "grp_nfa_accept_sample_multi_fu_268_nfa_initials_buckets_req_din");
    sc_trace(mVcdFile, grp_nfa_accept_sample_multi_fu_268_nfa_initials_buckets_req_full_n, "grp_nfa_accept_sample_multi_fu_268_nfa_initials_buckets_req_full_n");
    sc_trace(mVcdFile, grp_nfa_accept_sample_multi_fu_268_nfa_initials_buckets_req_write, "grp_nfa_accept_sample_multi_fu_268_nfa_initials_buckets_req_write");
    sc_trace(mVcdFile, grp_nfa_accept_sample_multi_fu_268_nfa_initials_buckets_rsp_empty_n, "grp_nfa_accept_sample_multi_fu_268_nfa_initials_buckets_rsp_empty_n");
    sc_trace(mVcdFile, grp_nfa_accept_sample_multi_fu_268_nfa_initials_buckets_rsp_read, "grp_nfa_accept_sample_multi_fu_268_nfa_initials_buckets_rsp_read");
    sc_trace(mVcdFile, grp_nfa_accept_sample_multi_fu_268_nfa_initials_buckets_address, "grp_nfa_accept_sample_multi_fu_268_nfa_initials_buckets_address");
    sc_trace(mVcdFile, grp_nfa_accept_sample_multi_fu_268_nfa_initials_buckets_datain, "grp_nfa_accept_sample_multi_fu_268_nfa_initials_buckets_datain");
    sc_trace(mVcdFile, grp_nfa_accept_sample_multi_fu_268_nfa_initials_buckets_dataout, "grp_nfa_accept_sample_multi_fu_268_nfa_initials_buckets_dataout");
    sc_trace(mVcdFile, grp_nfa_accept_sample_multi_fu_268_nfa_initials_buckets_size, "grp_nfa_accept_sample_multi_fu_268_nfa_initials_buckets_size");
    sc_trace(mVcdFile, grp_nfa_accept_sample_multi_fu_268_nfa_finals_buckets_req_din, "grp_nfa_accept_sample_multi_fu_268_nfa_finals_buckets_req_din");
    sc_trace(mVcdFile, grp_nfa_accept_sample_multi_fu_268_nfa_finals_buckets_req_full_n, "grp_nfa_accept_sample_multi_fu_268_nfa_finals_buckets_req_full_n");
    sc_trace(mVcdFile, grp_nfa_accept_sample_multi_fu_268_nfa_finals_buckets_req_write, "grp_nfa_accept_sample_multi_fu_268_nfa_finals_buckets_req_write");
    sc_trace(mVcdFile, grp_nfa_accept_sample_multi_fu_268_nfa_finals_buckets_rsp_empty_n, "grp_nfa_accept_sample_multi_fu_268_nfa_finals_buckets_rsp_empty_n");
    sc_trace(mVcdFile, grp_nfa_accept_sample_multi_fu_268_nfa_finals_buckets_rsp_read, "grp_nfa_accept_sample_multi_fu_268_nfa_finals_buckets_rsp_read");
    sc_trace(mVcdFile, grp_nfa_accept_sample_multi_fu_268_nfa_finals_buckets_address, "grp_nfa_accept_sample_multi_fu_268_nfa_finals_buckets_address");
    sc_trace(mVcdFile, grp_nfa_accept_sample_multi_fu_268_nfa_finals_buckets_datain, "grp_nfa_accept_sample_multi_fu_268_nfa_finals_buckets_datain");
    sc_trace(mVcdFile, grp_nfa_accept_sample_multi_fu_268_nfa_finals_buckets_dataout, "grp_nfa_accept_sample_multi_fu_268_nfa_finals_buckets_dataout");
    sc_trace(mVcdFile, grp_nfa_accept_sample_multi_fu_268_nfa_finals_buckets_size, "grp_nfa_accept_sample_multi_fu_268_nfa_finals_buckets_size");
    sc_trace(mVcdFile, grp_nfa_accept_sample_multi_fu_268_nfa_forward_buckets_req_din, "grp_nfa_accept_sample_multi_fu_268_nfa_forward_buckets_req_din");
    sc_trace(mVcdFile, grp_nfa_accept_sample_multi_fu_268_nfa_forward_buckets_req_full_n, "grp_nfa_accept_sample_multi_fu_268_nfa_forward_buckets_req_full_n");
    sc_trace(mVcdFile, grp_nfa_accept_sample_multi_fu_268_nfa_forward_buckets_req_write, "grp_nfa_accept_sample_multi_fu_268_nfa_forward_buckets_req_write");
    sc_trace(mVcdFile, grp_nfa_accept_sample_multi_fu_268_nfa_forward_buckets_rsp_empty_n, "grp_nfa_accept_sample_multi_fu_268_nfa_forward_buckets_rsp_empty_n");
    sc_trace(mVcdFile, grp_nfa_accept_sample_multi_fu_268_nfa_forward_buckets_rsp_read, "grp_nfa_accept_sample_multi_fu_268_nfa_forward_buckets_rsp_read");
    sc_trace(mVcdFile, grp_nfa_accept_sample_multi_fu_268_nfa_forward_buckets_address, "grp_nfa_accept_sample_multi_fu_268_nfa_forward_buckets_address");
    sc_trace(mVcdFile, grp_nfa_accept_sample_multi_fu_268_nfa_forward_buckets_datain, "grp_nfa_accept_sample_multi_fu_268_nfa_forward_buckets_datain");
    sc_trace(mVcdFile, grp_nfa_accept_sample_multi_fu_268_nfa_forward_buckets_dataout, "grp_nfa_accept_sample_multi_fu_268_nfa_forward_buckets_dataout");
    sc_trace(mVcdFile, grp_nfa_accept_sample_multi_fu_268_nfa_forward_buckets_size, "grp_nfa_accept_sample_multi_fu_268_nfa_forward_buckets_size");
    sc_trace(mVcdFile, grp_nfa_accept_sample_multi_fu_268_nfa_symbols, "grp_nfa_accept_sample_multi_fu_268_nfa_symbols");
    sc_trace(mVcdFile, grp_nfa_accept_sample_multi_fu_268_sample_req_din, "grp_nfa_accept_sample_multi_fu_268_sample_req_din");
    sc_trace(mVcdFile, grp_nfa_accept_sample_multi_fu_268_sample_req_full_n, "grp_nfa_accept_sample_multi_fu_268_sample_req_full_n");
    sc_trace(mVcdFile, grp_nfa_accept_sample_multi_fu_268_sample_req_write, "grp_nfa_accept_sample_multi_fu_268_sample_req_write");
    sc_trace(mVcdFile, grp_nfa_accept_sample_multi_fu_268_sample_rsp_empty_n, "grp_nfa_accept_sample_multi_fu_268_sample_rsp_empty_n");
    sc_trace(mVcdFile, grp_nfa_accept_sample_multi_fu_268_sample_rsp_read, "grp_nfa_accept_sample_multi_fu_268_sample_rsp_read");
    sc_trace(mVcdFile, grp_nfa_accept_sample_multi_fu_268_sample_address, "grp_nfa_accept_sample_multi_fu_268_sample_address");
    sc_trace(mVcdFile, grp_nfa_accept_sample_multi_fu_268_sample_datain, "grp_nfa_accept_sample_multi_fu_268_sample_datain");
    sc_trace(mVcdFile, grp_nfa_accept_sample_multi_fu_268_sample_dataout, "grp_nfa_accept_sample_multi_fu_268_sample_dataout");
    sc_trace(mVcdFile, grp_nfa_accept_sample_multi_fu_268_sample_size, "grp_nfa_accept_sample_multi_fu_268_sample_size");
    sc_trace(mVcdFile, grp_nfa_accept_sample_multi_fu_268_length_r, "grp_nfa_accept_sample_multi_fu_268_length_r");
    sc_trace(mVcdFile, grp_nfa_accept_sample_multi_fu_268_start_indices_address0, "grp_nfa_accept_sample_multi_fu_268_start_indices_address0");
    sc_trace(mVcdFile, grp_nfa_accept_sample_multi_fu_268_start_indices_ce0, "grp_nfa_accept_sample_multi_fu_268_start_indices_ce0");
    sc_trace(mVcdFile, grp_nfa_accept_sample_multi_fu_268_start_indices_q0, "grp_nfa_accept_sample_multi_fu_268_start_indices_q0");
    sc_trace(mVcdFile, grp_nfa_accept_sample_multi_fu_268_stop_on_first, "grp_nfa_accept_sample_multi_fu_268_stop_on_first");
    sc_trace(mVcdFile, grp_nfa_accept_sample_multi_fu_268_accept, "grp_nfa_accept_sample_multi_fu_268_accept");
    sc_trace(mVcdFile, grp_nfa_accept_sample_multi_fu_268_units, "grp_nfa_accept_sample_multi_fu_268_units");
    sc_trace(mVcdFile, grp_nfa_accept_sample_multi_fu_268_result_address0, "grp_nfa_accept_sample_multi_fu_268_result_address0");
    sc_trace(mVcdFile, grp_nfa_accept_sample_multi_fu_268_result_ce0, "grp_nfa_accept_sample_multi_fu_268_result_ce0");
    sc_trace(mVcdFile, grp_nfa_accept_sample_multi_fu_268_result_we0, "grp_nfa_accept_sample_multi_fu_268_result_we0");
    sc_trace(mVcdFile, grp_nfa_accept_sample_multi_fu_268_result_d0, "grp_nfa_accept_sample_multi_fu_268_result_d0");
    sc_trace(mVcdFile, grp_nfa_accept_sample_multi_fu_268_result_q0, "grp_nfa_accept_sample_multi_fu_268_result_q0");
    sc_trace(mVcdFile, grp_sample_iterator_next_fu_289_ap_start, "grp_sample_iterator_next_fu_289_ap_start");
    sc_trace(mVcdFile, grp_sample_iterator_next_fu_289_ap_done, "grp_sample_iterator_next_fu_289_ap_done");
    sc_trace(mVcdFile, grp_sample_iterator_next_fu_289_ap_idle, "grp_sample_iterator_next_fu_289_ap_idle");
    sc_trace(mVcdFile, grp_sample_iterator_next_fu_289_ap_ready, "grp_sample_iterator_next_fu_289_ap_ready");
    sc_trace(mVcdFile, grp_sample_iterator_next_fu_289_indices_req_din, "grp_sample_iterator_next_fu_289_indices_req_din");
    sc_trace(mVcdFile, grp_sample_iterator_next_fu_289_indices_req_full_n, "grp_sample_iterator_next_fu_289_indices_req_full_n");
    sc_trace(mVcdFile, grp_sample_iterator_next_fu_289_indices_req_write, "grp_sample_iterator_next_fu_289_indices_req_write");
    sc_trace(mVcdFile, grp_sample_iterator_next_fu_289_indices_rsp_empty_n, "grp_sample_iterator_next_fu_289_indices_rsp_empty_n");
    sc_trace(mVcdFile, grp_sample_iterator_next_fu_289_indices_rsp_read, "grp_sample_iterator_next_fu_289_indices_rsp_read");
    sc_trace(mVcdFile, grp_sample_iterator_next_fu_289_indices_address, "grp_sample_iterator_next_fu_289_indices_address");
    sc_trace(mVcdFile, grp_sample_iterator_next_fu_289_indices_datain, "grp_sample_iterator_next_fu_289_indices_datain");
    sc_trace(mVcdFile, grp_sample_iterator_next_fu_289_indices_dataout, "grp_sample_iterator_next_fu_289_indices_dataout");
    sc_trace(mVcdFile, grp_sample_iterator_next_fu_289_indices_size, "grp_sample_iterator_next_fu_289_indices_size");
    sc_trace(mVcdFile, grp_sample_iterator_next_fu_289_i_index, "grp_sample_iterator_next_fu_289_i_index");
    sc_trace(mVcdFile, grp_sample_iterator_next_fu_289_i_sample, "grp_sample_iterator_next_fu_289_i_sample");
    sc_trace(mVcdFile, grp_sample_iterator_next_fu_289_ap_return_0, "grp_sample_iterator_next_fu_289_ap_return_0");
    sc_trace(mVcdFile, grp_sample_iterator_next_fu_289_ap_return_1, "grp_sample_iterator_next_fu_289_ap_return_1");
    sc_trace(mVcdFile, grp_sample_iterator_get_offset_fu_297_ap_start, "grp_sample_iterator_get_offset_fu_297_ap_start");
    sc_trace(mVcdFile, grp_sample_iterator_get_offset_fu_297_ap_done, "grp_sample_iterator_get_offset_fu_297_ap_done");
    sc_trace(mVcdFile, grp_sample_iterator_get_offset_fu_297_ap_idle, "grp_sample_iterator_get_offset_fu_297_ap_idle");
    sc_trace(mVcdFile, grp_sample_iterator_get_offset_fu_297_ap_ready, "grp_sample_iterator_get_offset_fu_297_ap_ready");
    sc_trace(mVcdFile, grp_sample_iterator_get_offset_fu_297_i_index, "grp_sample_iterator_get_offset_fu_297_i_index");
    sc_trace(mVcdFile, grp_sample_iterator_get_offset_fu_297_i_sample, "grp_sample_iterator_get_offset_fu_297_i_sample");
    sc_trace(mVcdFile, grp_sample_iterator_get_offset_fu_297_indices_req_din, "grp_sample_iterator_get_offset_fu_297_indices_req_din");
    sc_trace(mVcdFile, grp_sample_iterator_get_offset_fu_297_indices_req_full_n, "grp_sample_iterator_get_offset_fu_297_indices_req_full_n");
    sc_trace(mVcdFile, grp_sample_iterator_get_offset_fu_297_indices_req_write, "grp_sample_iterator_get_offset_fu_297_indices_req_write");
    sc_trace(mVcdFile, grp_sample_iterator_get_offset_fu_297_indices_rsp_empty_n, "grp_sample_iterator_get_offset_fu_297_indices_rsp_empty_n");
    sc_trace(mVcdFile, grp_sample_iterator_get_offset_fu_297_indices_rsp_read, "grp_sample_iterator_get_offset_fu_297_indices_rsp_read");
    sc_trace(mVcdFile, grp_sample_iterator_get_offset_fu_297_indices_address, "grp_sample_iterator_get_offset_fu_297_indices_address");
    sc_trace(mVcdFile, grp_sample_iterator_get_offset_fu_297_indices_datain, "grp_sample_iterator_get_offset_fu_297_indices_datain");
    sc_trace(mVcdFile, grp_sample_iterator_get_offset_fu_297_indices_dataout, "grp_sample_iterator_get_offset_fu_297_indices_dataout");
    sc_trace(mVcdFile, grp_sample_iterator_get_offset_fu_297_indices_size, "grp_sample_iterator_get_offset_fu_297_indices_size");
    sc_trace(mVcdFile, grp_sample_iterator_get_offset_fu_297_sample_buffer_size, "grp_sample_iterator_get_offset_fu_297_sample_buffer_size");
    sc_trace(mVcdFile, grp_sample_iterator_get_offset_fu_297_sample_length, "grp_sample_iterator_get_offset_fu_297_sample_length");
    sc_trace(mVcdFile, grp_sample_iterator_get_offset_fu_297_ap_return, "grp_sample_iterator_get_offset_fu_297_ap_return");
    sc_trace(mVcdFile, finished_reg_196, "finished_reg_196");
    sc_trace(mVcdFile, indvars_iv_reg_208, "indvars_iv_reg_208");
    sc_trace(mVcdFile, finished_1_reg_220, "finished_1_reg_220");
    sc_trace(mVcdFile, k_1_reg_245, "k_1_reg_245");
    sc_trace(mVcdFile, brmerge_demorgan_fu_387_p2, "brmerge_demorgan_fu_387_p2");
    sc_trace(mVcdFile, p_0_reg_256, "p_0_reg_256");
    sc_trace(mVcdFile, grp_nfa_accept_sample_multi_fu_268_ap_start_ap_start_reg, "grp_nfa_accept_sample_multi_fu_268_ap_start_ap_start_reg");
    sc_trace(mVcdFile, grp_sample_iterator_next_fu_289_ap_start_ap_start_reg, "grp_sample_iterator_next_fu_289_ap_start_ap_start_reg");
    sc_trace(mVcdFile, grp_sample_iterator_get_offset_fu_297_ap_start_ap_start_reg, "grp_sample_iterator_get_offset_fu_297_ap_start_ap_start_reg");
    sc_trace(mVcdFile, tmp_1_fu_364_p1, "tmp_1_fu_364_p1");
    sc_trace(mVcdFile, tmp_2_fu_404_p1, "tmp_2_fu_404_p1");
    sc_trace(mVcdFile, c_fu_106, "c_fu_106");
    sc_trace(mVcdFile, p_c_1_fu_425_p3, "p_c_1_fu_425_p3");
    sc_trace(mVcdFile, i_index_fu_110, "i_index_fu_110");
    sc_trace(mVcdFile, i_sample_fu_114, "i_sample_fu_114");
    sc_trace(mVcdFile, tmp_i_fu_348_p2, "tmp_i_fu_348_p2");
    sc_trace(mVcdFile, tmp_i_16_fu_353_p2, "tmp_i_16_fu_353_p2");
    sc_trace(mVcdFile, tmp_3_cast_fu_409_p1, "tmp_3_cast_fu_409_p1");
    sc_trace(mVcdFile, c_1_fu_419_p2, "c_1_fu_419_p2");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
    sc_trace(mVcdFile, ap_sig_bdd_287, "ap_sig_bdd_287");
#endif

    }
    mHdltvinHandle.open("nfa_accept_samples_generic_hw.hdltvin.dat");
    mHdltvoutHandle.open("nfa_accept_samples_generic_hw.hdltvout.dat");
}

nfa_accept_samples_generic_hw::~nfa_accept_samples_generic_hw() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    mHdltvinHandle << "] " << endl;
    mHdltvoutHandle << "] " << endl;
    mHdltvinHandle.close();
    mHdltvoutHandle.close();
    delete result_U;
    delete start_indices_U;
    delete grp_nfa_accept_sample_multi_fu_268;
    delete grp_sample_iterator_next_fu_289;
    delete grp_sample_iterator_get_offset_fu_297;
}

void nfa_accept_samples_generic_hw::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_st1_fsm_0;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if (esl_seteq<1,4,4>(ap_ST_st9_fsm_8, ap_CS_fsm.read())) {
        c_fu_106 = p_c_1_fu_425_p3.read();
    } else if ((esl_seteq<1,4,4>(ap_ST_st1_fsm_0, ap_CS_fsm.read()) && 
                !esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0))) {
        c_fu_106 = ap_const_lv16_0;
    }
    if ((esl_seteq<1,4,4>(ap_ST_st6_fsm_5, ap_CS_fsm.read()) && 
         !esl_seteq<1,1,1>(ap_const_logic_0, grp_sample_iterator_next_fu_289_ap_done.read()))) {
        finished_1_reg_220 = ap_const_lv1_0;
    } else if (esl_seteq<1,4,4>(ap_ST_st2_fsm_1, ap_CS_fsm.read())) {
        finished_1_reg_220 = finished_reg_196.read();
    }
    if (esl_seteq<1,4,4>(ap_ST_st3_fsm_2, ap_CS_fsm.read())) {
        if (ap_sig_bdd_287.read()) {
            finished_2_reg_233 = finished_3_fu_358_p2.read();
        } else if (!esl_seteq<1,1,1>(tmp_3_fu_326_p3.read(), ap_const_lv1_0)) {
            finished_2_reg_233 = finished_1_reg_220.read();
        }
    }
    if ((esl_seteq<1,4,4>(ap_ST_st8_fsm_7, ap_CS_fsm.read()) && 
         !esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_392_p2.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, finished_2_reg_233.read()))) {
        finished_reg_196 = finished_2_reg_233.read();
    } else if ((esl_seteq<1,4,4>(ap_ST_st1_fsm_0, ap_CS_fsm.read()) && 
                !esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0))) {
        finished_reg_196 = ap_const_lv1_0;
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        grp_nfa_accept_sample_multi_fu_268_ap_start_ap_start_reg = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,4,4>(ap_ST_st3_fsm_2, ap_CS_fsm.read()) && 
             (!esl_seteq<1,1,1>(tmp_3_fu_326_p3.read(), ap_const_lv1_0) || 
              !esl_seteq<1,1,1>(ap_const_lv1_0, finished_3_fu_358_p2.read())))) {
            grp_nfa_accept_sample_multi_fu_268_ap_start_ap_start_reg = ap_const_logic_1;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, grp_nfa_accept_sample_multi_fu_268_ap_ready.read())) {
            grp_nfa_accept_sample_multi_fu_268_ap_start_ap_start_reg = ap_const_logic_0;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        grp_sample_iterator_get_offset_fu_297_ap_start_ap_start_reg = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,4,4>(ap_ST_st3_fsm_2, ap_CS_fsm.read()) && 
             esl_seteq<1,1,1>(tmp_3_fu_326_p3.read(), ap_const_lv1_0) && 
             esl_seteq<1,1,1>(ap_const_lv1_0, finished_3_fu_358_p2.read()))) {
            grp_sample_iterator_get_offset_fu_297_ap_start_ap_start_reg = ap_const_logic_1;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, grp_sample_iterator_get_offset_fu_297_ap_ready.read())) {
            grp_sample_iterator_get_offset_fu_297_ap_start_ap_start_reg = ap_const_logic_0;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        grp_sample_iterator_next_fu_289_ap_start_ap_start_reg = ap_const_logic_0;
    } else {
        if (esl_seteq<1,4,4>(ap_ST_st5_fsm_4, ap_CS_fsm.read())) {
            grp_sample_iterator_next_fu_289_ap_start_ap_start_reg = ap_const_logic_1;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, grp_sample_iterator_next_fu_289_ap_ready.read())) {
            grp_sample_iterator_next_fu_289_ap_start_ap_start_reg = ap_const_logic_0;
        }
    }
    if ((esl_seteq<1,4,4>(ap_ST_st6_fsm_5, ap_CS_fsm.read()) && 
         !esl_seteq<1,1,1>(ap_const_logic_0, grp_sample_iterator_next_fu_289_ap_done.read()))) {
        i_index_fu_110 = grp_sample_iterator_next_fu_289_ap_return_0.read();
    } else if ((esl_seteq<1,4,4>(ap_ST_st1_fsm_0, ap_CS_fsm.read()) && 
                !esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0))) {
        i_index_fu_110 = begin_index.read();
    }
    if ((esl_seteq<1,4,4>(ap_ST_st6_fsm_5, ap_CS_fsm.read()) && 
         !esl_seteq<1,1,1>(ap_const_logic_0, grp_sample_iterator_next_fu_289_ap_done.read()))) {
        i_sample_fu_114 = grp_sample_iterator_next_fu_289_ap_return_1.read();
    } else if ((esl_seteq<1,4,4>(ap_ST_st1_fsm_0, ap_CS_fsm.read()) && 
                !esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0))) {
        i_sample_fu_114 = begin_sample.read();
    }
    if ((esl_seteq<1,4,4>(ap_ST_st6_fsm_5, ap_CS_fsm.read()) && 
         !esl_seteq<1,1,1>(ap_const_logic_0, grp_sample_iterator_next_fu_289_ap_done.read()))) {
        indvars_iv_reg_208 = units_reg_499.read();
    } else if (esl_seteq<1,4,4>(ap_ST_st2_fsm_1, ap_CS_fsm.read())) {
        indvars_iv_reg_208 = ap_const_lv5_0;
    }
    if ((esl_seteq<1,4,4>(ap_ST_st7_fsm_6, ap_CS_fsm.read()) && 
         !esl_seteq<1,1,1>(ap_const_logic_0, grp_nfa_accept_sample_multi_fu_268_ap_done.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, brmerge_demorgan_fu_387_p2.read()))) {
        k_1_reg_245 = ap_const_lv5_0;
    } else if (esl_seteq<1,4,4>(ap_ST_st9_fsm_8, ap_CS_fsm.read())) {
        k_1_reg_245 = k_2_reg_532.read();
    }
    if ((esl_seteq<1,4,4>(ap_ST_st7_fsm_6, ap_CS_fsm.read()) && 
         !esl_seteq<1,1,1>(ap_const_logic_0, grp_nfa_accept_sample_multi_fu_268_ap_done.read()) && 
         !esl_seteq<1,1,1>(ap_const_lv1_0, brmerge_demorgan_fu_387_p2.read()))) {
        p_0_reg_256 = ap_const_lv16_1;
    } else if ((esl_seteq<1,4,4>(ap_ST_st8_fsm_7, ap_CS_fsm.read()) && 
                !esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_392_p2.read()) && 
                !esl_seteq<1,1,1>(ap_const_lv1_0, finished_2_reg_233.read()))) {
        p_0_reg_256 = tmp_5_fu_412_p3.read();
    }
    if ((esl_seteq<1,4,4>(ap_ST_st3_fsm_2, ap_CS_fsm.read()) && esl_seteq<1,1,1>(tmp_3_fu_326_p3.read(), ap_const_lv1_0))) {
        i_index_load_reg_504 = i_index_fu_110.read();
        i_sample_load_reg_510 = i_sample_fu_114.read();
    }
    if (esl_seteq<1,4,4>(ap_ST_st8_fsm_7, ap_CS_fsm.read())) {
        k_2_reg_532 = k_2_fu_398_p2.read();
    }
    if ((esl_seteq<1,4,4>(ap_ST_st7_fsm_6, ap_CS_fsm.read()) && !esl_seteq<1,1,1>(ap_const_logic_0, grp_nfa_accept_sample_multi_fu_268_ap_done.read()))) {
        stop_on_first_meet_reg_521 = grp_nfa_accept_sample_multi_fu_268_ap_return.read();
    }
    if (esl_seteq<1,4,4>(ap_ST_st3_fsm_2, ap_CS_fsm.read())) {
        units_reg_499 = units_fu_334_p2.read();
    }
}

void nfa_accept_samples_generic_hw::thread_ap_done() {
    if (esl_seteq<1,4,4>(ap_ST_st10_fsm_9, ap_CS_fsm.read())) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void nfa_accept_samples_generic_hw::thread_ap_idle() {
    if ((!esl_seteq<1,1,1>(ap_const_logic_1, ap_start.read()) && 
         esl_seteq<1,4,4>(ap_ST_st1_fsm_0, ap_CS_fsm.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void nfa_accept_samples_generic_hw::thread_ap_ready() {
    if (esl_seteq<1,4,4>(ap_ST_st10_fsm_9, ap_CS_fsm.read())) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void nfa_accept_samples_generic_hw::thread_ap_return() {
    ap_return = esl_zext<32,16>(p_0_reg_256.read());
}

void nfa_accept_samples_generic_hw::thread_ap_sig_bdd_287() {
    ap_sig_bdd_287 = (esl_seteq<1,1,1>(tmp_3_fu_326_p3.read(), ap_const_lv1_0) && !esl_seteq<1,1,1>(ap_const_lv1_0, finished_3_fu_358_p2.read()));
}

void nfa_accept_samples_generic_hw::thread_brmerge_demorgan_fu_387_p2() {
    brmerge_demorgan_fu_387_p2 = (grp_nfa_accept_sample_multi_fu_268_ap_return.read() & stop_on_first.read());
}

void nfa_accept_samples_generic_hw::thread_c_1_fu_419_p2() {
    c_1_fu_419_p2 = (!c_fu_106.read().is_01() || !ap_const_lv16_1.is_01())? sc_lv<16>(): (sc_bigint<16>(c_fu_106.read()) + sc_biguint<16>(ap_const_lv16_1));
}

void nfa_accept_samples_generic_hw::thread_exitcond_fu_392_p2() {
    exitcond_fu_392_p2 = (!k_1_reg_245.read().is_01() || !indvars_iv_reg_208.read().is_01())? sc_lv<1>(): sc_lv<1>(k_1_reg_245.read() == indvars_iv_reg_208.read());
}

void nfa_accept_samples_generic_hw::thread_finished_3_fu_358_p2() {
    finished_3_fu_358_p2 = (tmp_i_fu_348_p2.read() & tmp_i_16_fu_353_p2.read());
}

void nfa_accept_samples_generic_hw::thread_grp_nfa_accept_sample_multi_fu_268_accept() {
    grp_nfa_accept_sample_multi_fu_268_accept = accept.read();
}

void nfa_accept_samples_generic_hw::thread_grp_nfa_accept_sample_multi_fu_268_ap_start() {
    grp_nfa_accept_sample_multi_fu_268_ap_start = grp_nfa_accept_sample_multi_fu_268_ap_start_ap_start_reg.read();
}

void nfa_accept_samples_generic_hw::thread_grp_nfa_accept_sample_multi_fu_268_length_r() {
    grp_nfa_accept_sample_multi_fu_268_length_r = sample_length.read();
}

void nfa_accept_samples_generic_hw::thread_grp_nfa_accept_sample_multi_fu_268_nfa_finals_buckets_datain() {
    grp_nfa_accept_sample_multi_fu_268_nfa_finals_buckets_datain = nfa_finals_buckets_datain.read();
}

void nfa_accept_samples_generic_hw::thread_grp_nfa_accept_sample_multi_fu_268_nfa_finals_buckets_req_full_n() {
    grp_nfa_accept_sample_multi_fu_268_nfa_finals_buckets_req_full_n = nfa_finals_buckets_req_full_n.read();
}

void nfa_accept_samples_generic_hw::thread_grp_nfa_accept_sample_multi_fu_268_nfa_finals_buckets_rsp_empty_n() {
    grp_nfa_accept_sample_multi_fu_268_nfa_finals_buckets_rsp_empty_n = nfa_finals_buckets_rsp_empty_n.read();
}

void nfa_accept_samples_generic_hw::thread_grp_nfa_accept_sample_multi_fu_268_nfa_forward_buckets_datain() {
    grp_nfa_accept_sample_multi_fu_268_nfa_forward_buckets_datain = nfa_forward_buckets_datain.read();
}

void nfa_accept_samples_generic_hw::thread_grp_nfa_accept_sample_multi_fu_268_nfa_forward_buckets_req_full_n() {
    grp_nfa_accept_sample_multi_fu_268_nfa_forward_buckets_req_full_n = nfa_forward_buckets_req_full_n.read();
}

void nfa_accept_samples_generic_hw::thread_grp_nfa_accept_sample_multi_fu_268_nfa_forward_buckets_rsp_empty_n() {
    grp_nfa_accept_sample_multi_fu_268_nfa_forward_buckets_rsp_empty_n = nfa_forward_buckets_rsp_empty_n.read();
}

void nfa_accept_samples_generic_hw::thread_grp_nfa_accept_sample_multi_fu_268_nfa_initials_buckets_datain() {
    grp_nfa_accept_sample_multi_fu_268_nfa_initials_buckets_datain = nfa_initials_buckets_datain.read();
}

void nfa_accept_samples_generic_hw::thread_grp_nfa_accept_sample_multi_fu_268_nfa_initials_buckets_req_full_n() {
    grp_nfa_accept_sample_multi_fu_268_nfa_initials_buckets_req_full_n = nfa_initials_buckets_req_full_n.read();
}

void nfa_accept_samples_generic_hw::thread_grp_nfa_accept_sample_multi_fu_268_nfa_initials_buckets_rsp_empty_n() {
    grp_nfa_accept_sample_multi_fu_268_nfa_initials_buckets_rsp_empty_n = nfa_initials_buckets_rsp_empty_n.read();
}

void nfa_accept_samples_generic_hw::thread_grp_nfa_accept_sample_multi_fu_268_nfa_symbols() {
    grp_nfa_accept_sample_multi_fu_268_nfa_symbols = nfa_symbols.read();
}

void nfa_accept_samples_generic_hw::thread_grp_nfa_accept_sample_multi_fu_268_result_q0() {
    grp_nfa_accept_sample_multi_fu_268_result_q0 = result_q0.read();
}

void nfa_accept_samples_generic_hw::thread_grp_nfa_accept_sample_multi_fu_268_sample_datain() {
    grp_nfa_accept_sample_multi_fu_268_sample_datain = sample_buffer_datain.read();
}

void nfa_accept_samples_generic_hw::thread_grp_nfa_accept_sample_multi_fu_268_sample_req_full_n() {
    grp_nfa_accept_sample_multi_fu_268_sample_req_full_n = sample_buffer_req_full_n.read();
}

void nfa_accept_samples_generic_hw::thread_grp_nfa_accept_sample_multi_fu_268_sample_rsp_empty_n() {
    grp_nfa_accept_sample_multi_fu_268_sample_rsp_empty_n = sample_buffer_rsp_empty_n.read();
}

void nfa_accept_samples_generic_hw::thread_grp_nfa_accept_sample_multi_fu_268_start_indices_q0() {
    grp_nfa_accept_sample_multi_fu_268_start_indices_q0 = start_indices_q0.read();
}

void nfa_accept_samples_generic_hw::thread_grp_nfa_accept_sample_multi_fu_268_stop_on_first() {
    grp_nfa_accept_sample_multi_fu_268_stop_on_first = stop_on_first.read();
}

void nfa_accept_samples_generic_hw::thread_grp_nfa_accept_sample_multi_fu_268_units() {
    grp_nfa_accept_sample_multi_fu_268_units = indvars_iv_reg_208.read();
}

void nfa_accept_samples_generic_hw::thread_grp_sample_iterator_get_offset_fu_297_ap_start() {
    grp_sample_iterator_get_offset_fu_297_ap_start = grp_sample_iterator_get_offset_fu_297_ap_start_ap_start_reg.read();
}

void nfa_accept_samples_generic_hw::thread_grp_sample_iterator_get_offset_fu_297_i_index() {
    grp_sample_iterator_get_offset_fu_297_i_index = i_index_load_reg_504.read();
}

void nfa_accept_samples_generic_hw::thread_grp_sample_iterator_get_offset_fu_297_i_sample() {
    grp_sample_iterator_get_offset_fu_297_i_sample = i_sample_load_reg_510.read();
}

void nfa_accept_samples_generic_hw::thread_grp_sample_iterator_get_offset_fu_297_indices_datain() {
    grp_sample_iterator_get_offset_fu_297_indices_datain = indices_datain.read();
}

void nfa_accept_samples_generic_hw::thread_grp_sample_iterator_get_offset_fu_297_indices_req_full_n() {
    grp_sample_iterator_get_offset_fu_297_indices_req_full_n = indices_req_full_n.read();
}

void nfa_accept_samples_generic_hw::thread_grp_sample_iterator_get_offset_fu_297_indices_rsp_empty_n() {
    grp_sample_iterator_get_offset_fu_297_indices_rsp_empty_n = indices_rsp_empty_n.read();
}

void nfa_accept_samples_generic_hw::thread_grp_sample_iterator_get_offset_fu_297_sample_buffer_size() {
    grp_sample_iterator_get_offset_fu_297_sample_buffer_size = sample_buffer_length.read();
}

void nfa_accept_samples_generic_hw::thread_grp_sample_iterator_get_offset_fu_297_sample_length() {
    grp_sample_iterator_get_offset_fu_297_sample_length = sample_length.read();
}

void nfa_accept_samples_generic_hw::thread_grp_sample_iterator_next_fu_289_ap_start() {
    grp_sample_iterator_next_fu_289_ap_start = grp_sample_iterator_next_fu_289_ap_start_ap_start_reg.read();
}

void nfa_accept_samples_generic_hw::thread_grp_sample_iterator_next_fu_289_i_index() {
    grp_sample_iterator_next_fu_289_i_index = i_index_load_reg_504.read();
}

void nfa_accept_samples_generic_hw::thread_grp_sample_iterator_next_fu_289_i_sample() {
    grp_sample_iterator_next_fu_289_i_sample = i_sample_load_reg_510.read();
}

void nfa_accept_samples_generic_hw::thread_grp_sample_iterator_next_fu_289_indices_datain() {
    grp_sample_iterator_next_fu_289_indices_datain = indices_datain.read();
}

void nfa_accept_samples_generic_hw::thread_grp_sample_iterator_next_fu_289_indices_req_full_n() {
    grp_sample_iterator_next_fu_289_indices_req_full_n = indices_req_full_n.read();
}

void nfa_accept_samples_generic_hw::thread_grp_sample_iterator_next_fu_289_indices_rsp_empty_n() {
    grp_sample_iterator_next_fu_289_indices_rsp_empty_n = indices_rsp_empty_n.read();
}

void nfa_accept_samples_generic_hw::thread_indices_address() {
    if (((esl_seteq<1,4,4>(ap_ST_st3_fsm_2, ap_CS_fsm.read()) && 
          esl_seteq<1,1,1>(tmp_3_fu_326_p3.read(), ap_const_lv1_0) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, finished_3_fu_358_p2.read())) || 
         (esl_seteq<1,4,4>(ap_ST_st4_fsm_3, ap_CS_fsm.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_0, grp_sample_iterator_get_offset_fu_297_ap_idle.read())))) {
        indices_address = grp_sample_iterator_get_offset_fu_297_indices_address.read();
    } else if ((esl_seteq<1,4,4>(ap_ST_st5_fsm_4, ap_CS_fsm.read()) || 
                (esl_seteq<1,4,4>(ap_ST_st6_fsm_5, ap_CS_fsm.read()) && 
                 esl_seteq<1,1,1>(ap_const_logic_0, grp_sample_iterator_next_fu_289_ap_idle.read())))) {
        indices_address = grp_sample_iterator_next_fu_289_indices_address.read();
    } else {
        indices_address =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void nfa_accept_samples_generic_hw::thread_indices_dataout() {
    if (((esl_seteq<1,4,4>(ap_ST_st3_fsm_2, ap_CS_fsm.read()) && 
          esl_seteq<1,1,1>(tmp_3_fu_326_p3.read(), ap_const_lv1_0) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, finished_3_fu_358_p2.read())) || 
         (esl_seteq<1,4,4>(ap_ST_st4_fsm_3, ap_CS_fsm.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_0, grp_sample_iterator_get_offset_fu_297_ap_idle.read())))) {
        indices_dataout = grp_sample_iterator_get_offset_fu_297_indices_dataout.read();
    } else if ((esl_seteq<1,4,4>(ap_ST_st5_fsm_4, ap_CS_fsm.read()) || 
                (esl_seteq<1,4,4>(ap_ST_st6_fsm_5, ap_CS_fsm.read()) && 
                 esl_seteq<1,1,1>(ap_const_logic_0, grp_sample_iterator_next_fu_289_ap_idle.read())))) {
        indices_dataout = grp_sample_iterator_next_fu_289_indices_dataout.read();
    } else {
        indices_dataout =  (sc_lv<56>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void nfa_accept_samples_generic_hw::thread_indices_req_din() {
    if (((esl_seteq<1,4,4>(ap_ST_st3_fsm_2, ap_CS_fsm.read()) && 
          esl_seteq<1,1,1>(tmp_3_fu_326_p3.read(), ap_const_lv1_0) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, finished_3_fu_358_p2.read())) || 
         (esl_seteq<1,4,4>(ap_ST_st4_fsm_3, ap_CS_fsm.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_0, grp_sample_iterator_get_offset_fu_297_ap_idle.read())))) {
        indices_req_din = grp_sample_iterator_get_offset_fu_297_indices_req_din.read();
    } else if ((esl_seteq<1,4,4>(ap_ST_st5_fsm_4, ap_CS_fsm.read()) || 
                (esl_seteq<1,4,4>(ap_ST_st6_fsm_5, ap_CS_fsm.read()) && 
                 esl_seteq<1,1,1>(ap_const_logic_0, grp_sample_iterator_next_fu_289_ap_idle.read())))) {
        indices_req_din = grp_sample_iterator_next_fu_289_indices_req_din.read();
    } else {
        indices_req_din = sc_logic('X');
    }
}

void nfa_accept_samples_generic_hw::thread_indices_req_write() {
    if (((esl_seteq<1,4,4>(ap_ST_st3_fsm_2, ap_CS_fsm.read()) && 
          esl_seteq<1,1,1>(tmp_3_fu_326_p3.read(), ap_const_lv1_0) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, finished_3_fu_358_p2.read())) || 
         (esl_seteq<1,4,4>(ap_ST_st4_fsm_3, ap_CS_fsm.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_0, grp_sample_iterator_get_offset_fu_297_ap_idle.read())))) {
        indices_req_write = grp_sample_iterator_get_offset_fu_297_indices_req_write.read();
    } else if ((esl_seteq<1,4,4>(ap_ST_st5_fsm_4, ap_CS_fsm.read()) || 
                (esl_seteq<1,4,4>(ap_ST_st6_fsm_5, ap_CS_fsm.read()) && 
                 esl_seteq<1,1,1>(ap_const_logic_0, grp_sample_iterator_next_fu_289_ap_idle.read())))) {
        indices_req_write = grp_sample_iterator_next_fu_289_indices_req_write.read();
    } else {
        indices_req_write = sc_logic('X');
    }
}

void nfa_accept_samples_generic_hw::thread_indices_rsp_read() {
    if (((esl_seteq<1,4,4>(ap_ST_st3_fsm_2, ap_CS_fsm.read()) && 
          esl_seteq<1,1,1>(tmp_3_fu_326_p3.read(), ap_const_lv1_0) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, finished_3_fu_358_p2.read())) || 
         (esl_seteq<1,4,4>(ap_ST_st4_fsm_3, ap_CS_fsm.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_0, grp_sample_iterator_get_offset_fu_297_ap_idle.read())))) {
        indices_rsp_read = grp_sample_iterator_get_offset_fu_297_indices_rsp_read.read();
    } else if ((esl_seteq<1,4,4>(ap_ST_st5_fsm_4, ap_CS_fsm.read()) || 
                (esl_seteq<1,4,4>(ap_ST_st6_fsm_5, ap_CS_fsm.read()) && 
                 esl_seteq<1,1,1>(ap_const_logic_0, grp_sample_iterator_next_fu_289_ap_idle.read())))) {
        indices_rsp_read = grp_sample_iterator_next_fu_289_indices_rsp_read.read();
    } else {
        indices_rsp_read = sc_logic('X');
    }
}

void nfa_accept_samples_generic_hw::thread_indices_size() {
    if (((esl_seteq<1,4,4>(ap_ST_st3_fsm_2, ap_CS_fsm.read()) && 
          esl_seteq<1,1,1>(tmp_3_fu_326_p3.read(), ap_const_lv1_0) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, finished_3_fu_358_p2.read())) || 
         (esl_seteq<1,4,4>(ap_ST_st4_fsm_3, ap_CS_fsm.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_0, grp_sample_iterator_get_offset_fu_297_ap_idle.read())))) {
        indices_size = grp_sample_iterator_get_offset_fu_297_indices_size.read();
    } else if ((esl_seteq<1,4,4>(ap_ST_st5_fsm_4, ap_CS_fsm.read()) || 
                (esl_seteq<1,4,4>(ap_ST_st6_fsm_5, ap_CS_fsm.read()) && 
                 esl_seteq<1,1,1>(ap_const_logic_0, grp_sample_iterator_next_fu_289_ap_idle.read())))) {
        indices_size = grp_sample_iterator_next_fu_289_indices_size.read();
    } else {
        indices_size =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void nfa_accept_samples_generic_hw::thread_k_2_fu_398_p2() {
    k_2_fu_398_p2 = (!k_1_reg_245.read().is_01() || !ap_const_lv5_1.is_01())? sc_lv<5>(): (sc_bigint<5>(k_1_reg_245.read()) + sc_biguint<5>(ap_const_lv5_1));
}

void nfa_accept_samples_generic_hw::thread_nfa_finals_buckets_address() {
    nfa_finals_buckets_address = grp_nfa_accept_sample_multi_fu_268_nfa_finals_buckets_address.read();
}

void nfa_accept_samples_generic_hw::thread_nfa_finals_buckets_dataout() {
    nfa_finals_buckets_dataout = grp_nfa_accept_sample_multi_fu_268_nfa_finals_buckets_dataout.read();
}

void nfa_accept_samples_generic_hw::thread_nfa_finals_buckets_req_din() {
    nfa_finals_buckets_req_din = grp_nfa_accept_sample_multi_fu_268_nfa_finals_buckets_req_din.read();
}

void nfa_accept_samples_generic_hw::thread_nfa_finals_buckets_req_write() {
    nfa_finals_buckets_req_write = grp_nfa_accept_sample_multi_fu_268_nfa_finals_buckets_req_write.read();
}

void nfa_accept_samples_generic_hw::thread_nfa_finals_buckets_rsp_read() {
    nfa_finals_buckets_rsp_read = grp_nfa_accept_sample_multi_fu_268_nfa_finals_buckets_rsp_read.read();
}

void nfa_accept_samples_generic_hw::thread_nfa_finals_buckets_size() {
    nfa_finals_buckets_size = grp_nfa_accept_sample_multi_fu_268_nfa_finals_buckets_size.read();
}

void nfa_accept_samples_generic_hw::thread_nfa_forward_buckets_address() {
    nfa_forward_buckets_address = grp_nfa_accept_sample_multi_fu_268_nfa_forward_buckets_address.read();
}

void nfa_accept_samples_generic_hw::thread_nfa_forward_buckets_dataout() {
    nfa_forward_buckets_dataout = grp_nfa_accept_sample_multi_fu_268_nfa_forward_buckets_dataout.read();
}

void nfa_accept_samples_generic_hw::thread_nfa_forward_buckets_req_din() {
    nfa_forward_buckets_req_din = grp_nfa_accept_sample_multi_fu_268_nfa_forward_buckets_req_din.read();
}

void nfa_accept_samples_generic_hw::thread_nfa_forward_buckets_req_write() {
    nfa_forward_buckets_req_write = grp_nfa_accept_sample_multi_fu_268_nfa_forward_buckets_req_write.read();
}

void nfa_accept_samples_generic_hw::thread_nfa_forward_buckets_rsp_read() {
    nfa_forward_buckets_rsp_read = grp_nfa_accept_sample_multi_fu_268_nfa_forward_buckets_rsp_read.read();
}

void nfa_accept_samples_generic_hw::thread_nfa_forward_buckets_size() {
    nfa_forward_buckets_size = grp_nfa_accept_sample_multi_fu_268_nfa_forward_buckets_size.read();
}

void nfa_accept_samples_generic_hw::thread_nfa_initials_buckets_address() {
    nfa_initials_buckets_address = grp_nfa_accept_sample_multi_fu_268_nfa_initials_buckets_address.read();
}

void nfa_accept_samples_generic_hw::thread_nfa_initials_buckets_dataout() {
    nfa_initials_buckets_dataout = grp_nfa_accept_sample_multi_fu_268_nfa_initials_buckets_dataout.read();
}

void nfa_accept_samples_generic_hw::thread_nfa_initials_buckets_req_din() {
    nfa_initials_buckets_req_din = grp_nfa_accept_sample_multi_fu_268_nfa_initials_buckets_req_din.read();
}

void nfa_accept_samples_generic_hw::thread_nfa_initials_buckets_req_write() {
    nfa_initials_buckets_req_write = grp_nfa_accept_sample_multi_fu_268_nfa_initials_buckets_req_write.read();
}

void nfa_accept_samples_generic_hw::thread_nfa_initials_buckets_rsp_read() {
    nfa_initials_buckets_rsp_read = grp_nfa_accept_sample_multi_fu_268_nfa_initials_buckets_rsp_read.read();
}

void nfa_accept_samples_generic_hw::thread_nfa_initials_buckets_size() {
    nfa_initials_buckets_size = grp_nfa_accept_sample_multi_fu_268_nfa_initials_buckets_size.read();
}

void nfa_accept_samples_generic_hw::thread_p_c_1_fu_425_p3() {
    p_c_1_fu_425_p3 = (!result_q0.read()[0].is_01())? sc_lv<16>(): ((result_q0.read()[0].to_bool())? c_1_fu_419_p2.read(): c_fu_106.read());
}

void nfa_accept_samples_generic_hw::thread_result_address0() {
    if (esl_seteq<1,4,4>(ap_ST_st8_fsm_7, ap_CS_fsm.read())) {
        result_address0 =  (sc_lv<4>) (tmp_2_fu_404_p1.read());
    } else if (esl_seteq<1,4,4>(ap_ST_st7_fsm_6, ap_CS_fsm.read())) {
        result_address0 = grp_nfa_accept_sample_multi_fu_268_result_address0.read();
    } else {
        result_address0 = "XXXX";
    }
}

void nfa_accept_samples_generic_hw::thread_result_ce0() {
    if (esl_seteq<1,4,4>(ap_ST_st8_fsm_7, ap_CS_fsm.read())) {
        result_ce0 = ap_const_logic_1;
    } else if (esl_seteq<1,4,4>(ap_ST_st7_fsm_6, ap_CS_fsm.read())) {
        result_ce0 = grp_nfa_accept_sample_multi_fu_268_result_ce0.read();
    } else {
        result_ce0 = ap_const_logic_0;
    }
}

void nfa_accept_samples_generic_hw::thread_result_d0() {
    result_d0 = grp_nfa_accept_sample_multi_fu_268_result_d0.read();
}

void nfa_accept_samples_generic_hw::thread_result_we0() {
    if (esl_seteq<1,4,4>(ap_ST_st7_fsm_6, ap_CS_fsm.read())) {
        result_we0 = grp_nfa_accept_sample_multi_fu_268_result_we0.read();
    } else {
        result_we0 = ap_const_logic_0;
    }
}

void nfa_accept_samples_generic_hw::thread_sample_buffer_address() {
    sample_buffer_address = grp_nfa_accept_sample_multi_fu_268_sample_address.read();
}

void nfa_accept_samples_generic_hw::thread_sample_buffer_dataout() {
    sample_buffer_dataout = grp_nfa_accept_sample_multi_fu_268_sample_dataout.read();
}

void nfa_accept_samples_generic_hw::thread_sample_buffer_req_din() {
    sample_buffer_req_din = grp_nfa_accept_sample_multi_fu_268_sample_req_din.read();
}

void nfa_accept_samples_generic_hw::thread_sample_buffer_req_write() {
    sample_buffer_req_write = grp_nfa_accept_sample_multi_fu_268_sample_req_write.read();
}

void nfa_accept_samples_generic_hw::thread_sample_buffer_rsp_read() {
    sample_buffer_rsp_read = grp_nfa_accept_sample_multi_fu_268_sample_rsp_read.read();
}

void nfa_accept_samples_generic_hw::thread_sample_buffer_size() {
    sample_buffer_size = grp_nfa_accept_sample_multi_fu_268_sample_size.read();
}

void nfa_accept_samples_generic_hw::thread_start_indices_address0() {
    if (esl_seteq<1,4,4>(ap_ST_st4_fsm_3, ap_CS_fsm.read())) {
        start_indices_address0 =  (sc_lv<4>) (tmp_1_fu_364_p1.read());
    } else if (esl_seteq<1,4,4>(ap_ST_st7_fsm_6, ap_CS_fsm.read())) {
        start_indices_address0 = grp_nfa_accept_sample_multi_fu_268_start_indices_address0.read();
    } else {
        start_indices_address0 = "XXXX";
    }
}

void nfa_accept_samples_generic_hw::thread_start_indices_ce0() {
    if ((esl_seteq<1,4,4>(ap_ST_st4_fsm_3, ap_CS_fsm.read()) && 
         !esl_seteq<1,1,1>(ap_const_logic_0, grp_sample_iterator_get_offset_fu_297_ap_done.read()))) {
        start_indices_ce0 = ap_const_logic_1;
    } else if (esl_seteq<1,4,4>(ap_ST_st7_fsm_6, ap_CS_fsm.read())) {
        start_indices_ce0 = grp_nfa_accept_sample_multi_fu_268_start_indices_ce0.read();
    } else {
        start_indices_ce0 = ap_const_logic_0;
    }
}

void nfa_accept_samples_generic_hw::thread_start_indices_d0() {
    start_indices_d0 = grp_sample_iterator_get_offset_fu_297_ap_return.read();
}

void nfa_accept_samples_generic_hw::thread_start_indices_we0() {
    if (((esl_seteq<1,4,4>(ap_ST_st4_fsm_3, ap_CS_fsm.read()) && 
          !esl_seteq<1,1,1>(ap_const_logic_0, grp_sample_iterator_get_offset_fu_297_ap_done.read())))) {
        start_indices_we0 = ap_const_logic_1;
    } else {
        start_indices_we0 = ap_const_logic_0;
    }
}

void nfa_accept_samples_generic_hw::thread_tmp_1_fu_364_p1() {
    tmp_1_fu_364_p1 = esl_zext<64,5>(indvars_iv_reg_208.read());
}

void nfa_accept_samples_generic_hw::thread_tmp_2_fu_404_p1() {
    tmp_2_fu_404_p1 = esl_zext<64,5>(k_1_reg_245.read());
}

void nfa_accept_samples_generic_hw::thread_tmp_3_cast_fu_409_p1() {
    tmp_3_cast_fu_409_p1 = esl_zext<16,1>(stop_on_first_meet_reg_521.read());
}

void nfa_accept_samples_generic_hw::thread_tmp_3_fu_326_p3() {
    tmp_3_fu_326_p3 = indvars_iv_reg_208.read().range(4, 4);
}

void nfa_accept_samples_generic_hw::thread_tmp_5_fu_412_p3() {
    tmp_5_fu_412_p3 = (!stop_on_first.read()[0].is_01())? sc_lv<16>(): ((stop_on_first.read()[0].to_bool())? tmp_3_cast_fu_409_p1.read(): c_fu_106.read());
}

void nfa_accept_samples_generic_hw::thread_tmp_i_16_fu_353_p2() {
    tmp_i_16_fu_353_p2 = (!i_index_fu_110.read().is_01() || !end_index.read().is_01())? sc_lv<1>(): sc_lv<1>(i_index_fu_110.read() == end_index.read());
}

void nfa_accept_samples_generic_hw::thread_tmp_i_fu_348_p2() {
    tmp_i_fu_348_p2 = (!i_sample_fu_114.read().is_01() || !end_sample.read().is_01())? sc_lv<1>(): sc_lv<1>(i_sample_fu_114.read() == end_sample.read());
}

void nfa_accept_samples_generic_hw::thread_units_fu_334_p2() {
    units_fu_334_p2 = (!indvars_iv_reg_208.read().is_01() || !ap_const_lv5_1.is_01())? sc_lv<5>(): (sc_bigint<5>(indvars_iv_reg_208.read()) + sc_biguint<5>(ap_const_lv5_1));
}

void nfa_accept_samples_generic_hw::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint()) {
        case 0 : 
            if (!esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0)) {
                ap_NS_fsm = ap_ST_st2_fsm_1;
            } else {
                ap_NS_fsm = ap_ST_st1_fsm_0;
            }
            break;
        case 1 : 
            ap_NS_fsm = ap_ST_st3_fsm_2;
            break;
        case 2 : 
            if ((esl_seteq<1,1,1>(tmp_3_fu_326_p3.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_lv1_0, finished_3_fu_358_p2.read()))) {
                ap_NS_fsm = ap_ST_st4_fsm_3;
            } else {
                ap_NS_fsm = ap_ST_st7_fsm_6;
            }
            break;
        case 3 : 
            if (!esl_seteq<1,1,1>(ap_const_logic_0, grp_sample_iterator_get_offset_fu_297_ap_done.read())) {
                ap_NS_fsm = ap_ST_st5_fsm_4;
            } else {
                ap_NS_fsm = ap_ST_st4_fsm_3;
            }
            break;
        case 4 : 
            ap_NS_fsm = ap_ST_st6_fsm_5;
            break;
        case 5 : 
            if (!esl_seteq<1,1,1>(ap_const_logic_0, grp_sample_iterator_next_fu_289_ap_done.read())) {
                ap_NS_fsm = ap_ST_st3_fsm_2;
            } else {
                ap_NS_fsm = ap_ST_st6_fsm_5;
            }
            break;
        case 6 : 
            if ((!esl_seteq<1,1,1>(ap_const_logic_0, grp_nfa_accept_sample_multi_fu_268_ap_done.read()) && !esl_seteq<1,1,1>(ap_const_lv1_0, brmerge_demorgan_fu_387_p2.read()))) {
                ap_NS_fsm = ap_ST_st10_fsm_9;
            } else if ((!esl_seteq<1,1,1>(ap_const_logic_0, grp_nfa_accept_sample_multi_fu_268_ap_done.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, brmerge_demorgan_fu_387_p2.read()))) {
                ap_NS_fsm = ap_ST_st8_fsm_7;
            } else {
                ap_NS_fsm = ap_ST_st7_fsm_6;
            }
            break;
        case 7 : 
            if ((!esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_392_p2.read()) && !esl_seteq<1,1,1>(ap_const_lv1_0, finished_2_reg_233.read()))) {
                ap_NS_fsm = ap_ST_st10_fsm_9;
            } else if ((!esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_392_p2.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, finished_2_reg_233.read()))) {
                ap_NS_fsm = ap_ST_st2_fsm_1;
            } else {
                ap_NS_fsm = ap_ST_st9_fsm_8;
            }
            break;
        case 8 : 
            ap_NS_fsm = ap_ST_st8_fsm_7;
            break;
        case 9 : 
            ap_NS_fsm = ap_ST_st1_fsm_0;
            break;
        default : 
            ap_NS_fsm = "XXXX";
            break;
    }
}
void nfa_accept_samples_generic_hw::thread_hdltv_gen() {
    const char* dump_tv = std::getenv("AP_WRITE_TV");
    if (!(dump_tv && string(dump_tv) == "on")) return;

    wait();

    mHdltvinHandle << "[ " << endl;
    mHdltvoutHandle << "[ " << endl;
    int ap_cycleNo = 0;
    while (1) {
        wait();
        const char* mComma = ap_cycleNo == 0 ? " " : ", " ;
        mHdltvinHandle << mComma << "{"  <<  " \"ap_rst\" :  \"" << ap_rst.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"ap_start\" :  \"" << ap_start.read() << "\" ";
        mHdltvoutHandle << mComma << "{"  <<  " \"ap_done\" :  \"" << ap_done.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ap_idle\" :  \"" << ap_idle.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ap_ready\" :  \"" << ap_ready.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"nfa_initials_buckets_req_din\" :  \"" << nfa_initials_buckets_req_din.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"nfa_initials_buckets_req_full_n\" :  \"" << nfa_initials_buckets_req_full_n.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"nfa_initials_buckets_req_write\" :  \"" << nfa_initials_buckets_req_write.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"nfa_initials_buckets_rsp_empty_n\" :  \"" << nfa_initials_buckets_rsp_empty_n.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"nfa_initials_buckets_rsp_read\" :  \"" << nfa_initials_buckets_rsp_read.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"nfa_initials_buckets_address\" :  \"" << nfa_initials_buckets_address.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"nfa_initials_buckets_datain\" :  \"" << nfa_initials_buckets_datain.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"nfa_initials_buckets_dataout\" :  \"" << nfa_initials_buckets_dataout.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"nfa_initials_buckets_size\" :  \"" << nfa_initials_buckets_size.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"nfa_finals_buckets_req_din\" :  \"" << nfa_finals_buckets_req_din.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"nfa_finals_buckets_req_full_n\" :  \"" << nfa_finals_buckets_req_full_n.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"nfa_finals_buckets_req_write\" :  \"" << nfa_finals_buckets_req_write.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"nfa_finals_buckets_rsp_empty_n\" :  \"" << nfa_finals_buckets_rsp_empty_n.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"nfa_finals_buckets_rsp_read\" :  \"" << nfa_finals_buckets_rsp_read.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"nfa_finals_buckets_address\" :  \"" << nfa_finals_buckets_address.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"nfa_finals_buckets_datain\" :  \"" << nfa_finals_buckets_datain.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"nfa_finals_buckets_dataout\" :  \"" << nfa_finals_buckets_dataout.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"nfa_finals_buckets_size\" :  \"" << nfa_finals_buckets_size.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"nfa_forward_buckets_req_din\" :  \"" << nfa_forward_buckets_req_din.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"nfa_forward_buckets_req_full_n\" :  \"" << nfa_forward_buckets_req_full_n.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"nfa_forward_buckets_req_write\" :  \"" << nfa_forward_buckets_req_write.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"nfa_forward_buckets_rsp_empty_n\" :  \"" << nfa_forward_buckets_rsp_empty_n.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"nfa_forward_buckets_rsp_read\" :  \"" << nfa_forward_buckets_rsp_read.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"nfa_forward_buckets_address\" :  \"" << nfa_forward_buckets_address.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"nfa_forward_buckets_datain\" :  \"" << nfa_forward_buckets_datain.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"nfa_forward_buckets_dataout\" :  \"" << nfa_forward_buckets_dataout.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"nfa_forward_buckets_size\" :  \"" << nfa_forward_buckets_size.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"nfa_symbols\" :  \"" << nfa_symbols.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"sample_buffer_req_din\" :  \"" << sample_buffer_req_din.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"sample_buffer_req_full_n\" :  \"" << sample_buffer_req_full_n.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"sample_buffer_req_write\" :  \"" << sample_buffer_req_write.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"sample_buffer_rsp_empty_n\" :  \"" << sample_buffer_rsp_empty_n.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"sample_buffer_rsp_read\" :  \"" << sample_buffer_rsp_read.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"sample_buffer_address\" :  \"" << sample_buffer_address.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"sample_buffer_datain\" :  \"" << sample_buffer_datain.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"sample_buffer_dataout\" :  \"" << sample_buffer_dataout.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"sample_buffer_size\" :  \"" << sample_buffer_size.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"sample_buffer_length\" :  \"" << sample_buffer_length.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"sample_length\" :  \"" << sample_length.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"indices_req_din\" :  \"" << indices_req_din.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"indices_req_full_n\" :  \"" << indices_req_full_n.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"indices_req_write\" :  \"" << indices_req_write.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"indices_rsp_empty_n\" :  \"" << indices_rsp_empty_n.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"indices_rsp_read\" :  \"" << indices_rsp_read.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"indices_address\" :  \"" << indices_address.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"indices_datain\" :  \"" << indices_datain.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"indices_dataout\" :  \"" << indices_dataout.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"indices_size\" :  \"" << indices_size.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"i_size\" :  \"" << i_size.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"begin_index\" :  \"" << begin_index.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"begin_sample\" :  \"" << begin_sample.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"end_index\" :  \"" << end_index.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"end_sample\" :  \"" << end_sample.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"stop_on_first\" :  \"" << stop_on_first.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"accept\" :  \"" << accept.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ap_return\" :  \"" << ap_return.read() << "\" ";
        mHdltvinHandle << "}" << std::endl;
        mHdltvoutHandle << "}" << std::endl;
        ap_cycleNo++;
    }
}

}

