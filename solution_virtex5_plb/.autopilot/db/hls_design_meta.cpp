#include "hls_design_meta.h"
const Port_Property HLS_Design_Meta::port_props[]={
	Port_Property("ap_clk", 1, hls_in, -1, "", "", 1),
	Port_Property("ap_rst", 1, hls_in, -1, "", "", 1),
	Port_Property("ap_start", 1, hls_in, -1, "", "", 1),
	Port_Property("ap_done", 1, hls_out, -1, "", "", 1),
	Port_Property("ap_idle", 1, hls_out, -1, "", "", 1),
	Port_Property("ap_ready", 1, hls_out, -1, "", "", 1),
	Port_Property("nfa_initials_buckets_req_din", 1, hls_out, 0, "ap_bus", "fifo_data", 1),
	Port_Property("nfa_initials_buckets_req_full_n", 1, hls_in, 0, "ap_bus", "fifo_status", 1),
	Port_Property("nfa_initials_buckets_req_write", 1, hls_out, 0, "ap_bus", "fifo_update", 1),
	Port_Property("nfa_initials_buckets_rsp_empty_n", 1, hls_in, 0, "ap_bus", "fifo_status", 1),
	Port_Property("nfa_initials_buckets_rsp_read", 1, hls_out, 0, "ap_bus", "fifo_update", 1),
	Port_Property("nfa_initials_buckets_address", 32, hls_out, 0, "ap_bus", "unknown", 1),
	Port_Property("nfa_initials_buckets_datain", 32, hls_in, 0, "ap_bus", "unknown", 1),
	Port_Property("nfa_initials_buckets_dataout", 32, hls_out, 0, "ap_bus", "unknown", 1),
	Port_Property("nfa_initials_buckets_size", 32, hls_out, 0, "ap_bus", "unknown", 1),
	Port_Property("nfa_finals_buckets_req_din", 1, hls_out, 1, "ap_bus", "fifo_data", 1),
	Port_Property("nfa_finals_buckets_req_full_n", 1, hls_in, 1, "ap_bus", "fifo_status", 1),
	Port_Property("nfa_finals_buckets_req_write", 1, hls_out, 1, "ap_bus", "fifo_update", 1),
	Port_Property("nfa_finals_buckets_rsp_empty_n", 1, hls_in, 1, "ap_bus", "fifo_status", 1),
	Port_Property("nfa_finals_buckets_rsp_read", 1, hls_out, 1, "ap_bus", "fifo_update", 1),
	Port_Property("nfa_finals_buckets_address", 32, hls_out, 1, "ap_bus", "unknown", 1),
	Port_Property("nfa_finals_buckets_datain", 32, hls_in, 1, "ap_bus", "unknown", 1),
	Port_Property("nfa_finals_buckets_dataout", 32, hls_out, 1, "ap_bus", "unknown", 1),
	Port_Property("nfa_finals_buckets_size", 32, hls_out, 1, "ap_bus", "unknown", 1),
	Port_Property("nfa_forward_buckets_req_din", 1, hls_out, 2, "ap_bus", "fifo_data", 1),
	Port_Property("nfa_forward_buckets_req_full_n", 1, hls_in, 2, "ap_bus", "fifo_status", 1),
	Port_Property("nfa_forward_buckets_req_write", 1, hls_out, 2, "ap_bus", "fifo_update", 1),
	Port_Property("nfa_forward_buckets_rsp_empty_n", 1, hls_in, 2, "ap_bus", "fifo_status", 1),
	Port_Property("nfa_forward_buckets_rsp_read", 1, hls_out, 2, "ap_bus", "fifo_update", 1),
	Port_Property("nfa_forward_buckets_address", 32, hls_out, 2, "ap_bus", "unknown", 1),
	Port_Property("nfa_forward_buckets_datain", 32, hls_in, 2, "ap_bus", "unknown", 1),
	Port_Property("nfa_forward_buckets_dataout", 32, hls_out, 2, "ap_bus", "unknown", 1),
	Port_Property("nfa_forward_buckets_size", 32, hls_out, 2, "ap_bus", "unknown", 1),
	Port_Property("nfa_symbols", 8, hls_in, 4, "ap_none", "in_data", 1),
	Port_Property("sample_buffer_req_din", 1, hls_out, 5, "ap_bus", "fifo_data", 1),
	Port_Property("sample_buffer_req_full_n", 1, hls_in, 5, "ap_bus", "fifo_status", 1),
	Port_Property("sample_buffer_req_write", 1, hls_out, 5, "ap_bus", "fifo_update", 1),
	Port_Property("sample_buffer_rsp_empty_n", 1, hls_in, 5, "ap_bus", "fifo_status", 1),
	Port_Property("sample_buffer_rsp_read", 1, hls_out, 5, "ap_bus", "fifo_update", 1),
	Port_Property("sample_buffer_address", 32, hls_out, 5, "ap_bus", "unknown", 1),
	Port_Property("sample_buffer_datain", 8, hls_in, 5, "ap_bus", "unknown", 1),
	Port_Property("sample_buffer_dataout", 8, hls_out, 5, "ap_bus", "unknown", 1),
	Port_Property("sample_buffer_size", 32, hls_out, 5, "ap_bus", "unknown", 1),
	Port_Property("sample_buffer_length", 32, hls_in, 6, "ap_none", "in_data", 1),
	Port_Property("sample_length", 16, hls_in, 7, "ap_none", "in_data", 1),
	Port_Property("indices_req_din", 1, hls_out, 8, "ap_bus", "fifo_data", 1),
	Port_Property("indices_req_full_n", 1, hls_in, 8, "ap_bus", "fifo_status", 1),
	Port_Property("indices_req_write", 1, hls_out, 8, "ap_bus", "fifo_update", 1),
	Port_Property("indices_rsp_empty_n", 1, hls_in, 8, "ap_bus", "fifo_status", 1),
	Port_Property("indices_rsp_read", 1, hls_out, 8, "ap_bus", "fifo_update", 1),
	Port_Property("indices_address", 32, hls_out, 8, "ap_bus", "unknown", 1),
	Port_Property("indices_datain", 56, hls_in, 8, "ap_bus", "unknown", 1),
	Port_Property("indices_dataout", 56, hls_out, 8, "ap_bus", "unknown", 1),
	Port_Property("indices_size", 32, hls_out, 8, "ap_bus", "unknown", 1),
	Port_Property("i_size", 16, hls_in, 9, "ap_none", "in_data", 1),
	Port_Property("begin_index", 16, hls_in, 10, "ap_none", "in_data", 1),
	Port_Property("begin_sample", 16, hls_in, 11, "ap_none", "in_data", 1),
	Port_Property("end_index", 16, hls_in, 12, "ap_none", "in_data", 1),
	Port_Property("end_sample", 16, hls_in, 13, "ap_none", "in_data", 1),
	Port_Property("stop_on_first", 1, hls_in, 14, "ap_none", "in_data", 1),
	Port_Property("accept", 1, hls_in, 15, "ap_none", "in_data", 1),
	Port_Property("ap_return", 32, hls_out, -1, "", "", 1),
};
const char* HLS_Design_Meta::dut_name = "nfa_accept_samples_generic_hw";
