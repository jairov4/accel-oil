

================================================================
== Vivado HLS Report for 'nfa_accept_samples_generic_hw'
================================================================
* Date:           Sat Aug 09 17:29:25 2014

* Version:        2014.1 (build date: Fri Apr 04 13:20:25 PM 2014)
* Project:        oil_plainc_hls
* Solution:       solution_virtex5_plb
* Product family: virtex5 virtex5_fpv5 
* Target device:  xc5vlx50tff1136-3


================================================================
== Performance Estimates
================================================================
+ Timing (ns): 
    * Summary: 
    +---------+-------+----------+------------+
    |  Clock  | Target| Estimated| Uncertainty|
    +---------+-------+----------+------------+
    |default  |   7.00|      5.20|        3.00|
    +---------+-------+----------+------------+

+ Latency (clock cycles): 
    * Summary: 
    +-----+-------------+-----+-------------+---------+
    |      Latency      |      Interval     | Pipeline|
    | min |     max     | min |     max     |   Type  |
    +-----+-------------+-----+-------------+---------+
    |    2|  39125640183|    3|  39125640184|   none  |
    +-----+-------------+-----+-------------+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +-----------------+-----+-------------+-------------+-----------+-----------+-----------+----------+
        |                 |      Latency      |  Iteration  |  Initiation Interval  |    Trip   |          |
        |    Loop Name    | min |     max     |   Latency   |  achieved |   target  |   Count   | Pipelined|
        +-----------------+-----+-------------+-------------+-----------+-----------+-----------+----------+
        |- Loop 1         |    0|  39125640181| 14 ~ 597019 |          -|          -| 0 ~ 65535 |    no    |
        | + Loop 1.1      |    0|       596998|   6 ~ 583   |          -|          -|  0 ~ 1024 |    no    |
        |  ++ Loop 1.1.1  |    0|          576|            9|          -|          -|   0 ~ 64  |    no    |
        +-----------------+-----+-------------+-------------+-----------+-----------+-----------+----------+



================================================================
== Utilization Estimates
================================================================
* Summary: 
+-----------------+---------+-------+-------+-------+
|       Name      | BRAM_18K| DSP48E|   FF  |  LUT  |
+-----------------+---------+-------+-------+-------+
|Expression       |        -|      -|      -|      -|
|FIFO             |        -|      -|      -|      -|
|Instance         |        -|      -|      -|      -|
|Memory           |        -|      -|      -|      -|
|Multiplexer      |        -|      -|      -|      -|
|Register         |        -|      -|      -|      -|
+-----------------+---------+-------+-------+-------+
|Total            |        0|      0|      0|      0|
+-----------------+---------+-------+-------+-------+
|Available        |      120|     48|  28800|  28800|
+-----------------+---------+-------+-------+-------+
|Utilization (%)  |        0|      0|      0|      0|
+-----------------+---------+-------+-------+-------+

+ Detail: 
    * Instance: 
    N/A

    * Memory: 
    N/A

    * FIFO: 
    N/A

    * Expression: 
    N/A

    * Multiplexer: 
    N/A

    * Register: 
    N/A



================================================================
== Interface
================================================================
* Summary: 
N/A

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 1
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states: 37
* Pipeline: 0
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 
	2  / true
2 --> 
	3  / (!tmp_i_13)
	37  / (tmp_i_13)
3 --> 
	4  / true
4 --> 
	5  / true
5 --> 
	6  / true
6 --> 
	7  / true
7 --> 
	8  / true
8 --> 
	9  / true
9 --> 
	10  / true
10 --> 
	11  / (tmp_3)
	25  / (!tmp_3)
11 --> 
	12  / true
12 --> 
	13  / true
13 --> 
	14  / (!tmp_2_i) | (!tmp_2_1_i)
	15  / (tmp_2_i & tmp_2_1_i)
14 --> 
	15  / true
15 --> 
	16  / true
16 --> 
	17  / (!j_end)
	32  / (j_end & !any_0_i)
	10  / (j_end & any_0_i)
17 --> 
	18  / true
18 --> 
	19  / true
19 --> 
	20  / true
20 --> 
	21  / true
21 --> 
	22  / true
22 --> 
	23  / true
23 --> 
	24  / true
24 --> 
	16  / true
25 --> 
	26  / true
26 --> 
	27  / true
27 --> 
	28  / true
28 --> 
	29  / true
29 --> 
	30  / true
30 --> 
	31  / true
31 --> 
	32  / true
32 --> 
	33  / (or_cond) | (!stop_on_first_read)
	37  / (!or_cond & stop_on_first_read)
33 --> 
	34  / true
34 --> 
	35  / true
35 --> 
	36  / true
36 --> 
	2  / true
37 --> 
* FSM state operations: 

 <State 1>: 1.17ns
ST_1: c [1/1] 0.00ns
:0  %c = alloca i32, align 4

ST_1: stg_39 [1/1] 0.00ns
:1  call void (...)* @_ssdm_op_SpecBitsMap(i56* %indices), !map !0

ST_1: stg_40 [1/1] 0.00ns
:2  call void (...)* @_ssdm_op_SpecBitsMap(i32* %nfa_initials_buckets), !map !12

ST_1: stg_41 [1/1] 0.00ns
:3  call void (...)* @_ssdm_op_SpecBitsMap(i32* %nfa_finals_buckets), !map !18

ST_1: stg_42 [1/1] 0.00ns
:4  call void (...)* @_ssdm_op_SpecBitsMap(i32* %nfa_forward_buckets), !map !22

ST_1: stg_43 [1/1] 0.00ns
:5  call void (...)* @_ssdm_op_SpecBitsMap([32130 x i32]* %nfa_backward_buckets), !map !28

ST_1: stg_44 [1/1] 0.00ns
:6  call void (...)* @_ssdm_op_SpecBitsMap(i8* %nfa_symbols), !map !32

ST_1: stg_45 [1/1] 0.00ns
:7  call void (...)* @_ssdm_op_SpecBitsMap(i8* %sample_buffer), !map !38

ST_1: stg_46 [1/1] 0.00ns
:8  call void (...)* @_ssdm_op_SpecBitsMap(i32 %sample_buffer_length), !map !44

ST_1: stg_47 [1/1] 0.00ns
:9  call void (...)* @_ssdm_op_SpecBitsMap(i16 %sample_length), !map !50

ST_1: stg_48 [1/1] 0.00ns
:10  call void (...)* @_ssdm_op_SpecBitsMap(i16 %i_size), !map !54

ST_1: stg_49 [1/1] 0.00ns
:11  call void (...)* @_ssdm_op_SpecBitsMap(i16 %begin_index), !map !58

ST_1: stg_50 [1/1] 0.00ns
:12  call void (...)* @_ssdm_op_SpecBitsMap(i16 %begin_sample), !map !62

ST_1: stg_51 [1/1] 0.00ns
:13  call void (...)* @_ssdm_op_SpecBitsMap(i16 %end_index), !map !66

ST_1: stg_52 [1/1] 0.00ns
:14  call void (...)* @_ssdm_op_SpecBitsMap(i16 %end_sample), !map !70

ST_1: stg_53 [1/1] 0.00ns
:15  call void (...)* @_ssdm_op_SpecBitsMap(i1 %stop_on_first), !map !74

ST_1: stg_54 [1/1] 0.00ns
:16  call void (...)* @_ssdm_op_SpecBitsMap(i1 %accept), !map !78

ST_1: stg_55 [1/1] 0.00ns
:17  call void (...)* @_ssdm_op_SpecBitsMap(i32 0) nounwind, !map !82

ST_1: stg_56 [1/1] 0.00ns
:18  call void (...)* @_ssdm_op_SpecTopModule([30 x i8]* @str) nounwind

ST_1: accept_read [1/1] 0.00ns
:19  %accept_read = call i1 @_ssdm_op_Read.ap_none.i1(i1 %accept)

ST_1: stop_on_first_read [1/1] 0.00ns
:20  %stop_on_first_read = call i1 @_ssdm_op_Read.ap_none.i1(i1 %stop_on_first)

ST_1: end_sample_read [1/1] 0.00ns
:21  %end_sample_read = call i16 @_ssdm_op_Read.ap_none.i16(i16 %end_sample)

ST_1: end_index_read [1/1] 0.00ns
:22  %end_index_read = call i16 @_ssdm_op_Read.ap_none.i16(i16 %end_index)

ST_1: begin_sample_read [1/1] 0.00ns
:23  %begin_sample_read = call i16 @_ssdm_op_Read.ap_none.i16(i16 %begin_sample)

ST_1: begin_index_read [1/1] 0.00ns
:24  %begin_index_read = call i16 @_ssdm_op_Read.ap_none.i16(i16 %begin_index)

ST_1: sample_length_read [1/1] 0.00ns
:25  %sample_length_read = call i16 @_ssdm_op_Read.ap_none.i16(i16 %sample_length)

ST_1: sample_buffer_length_read [1/1] 0.00ns
:26  %sample_buffer_length_read = call i32 @_ssdm_op_Read.ap_none.i32(i32 %sample_buffer_length)

ST_1: stg_65 [1/1] 0.00ns
:27  call void (...)* @_ssdm_op_SpecPipeline(i32 1, i32 1, i32 1, i32 0, [1 x i8]* @p_str212) nounwind

ST_1: stg_66 [1/1] 0.00ns
:28  call void (...)* @_ssdm_op_SpecBus(i32* %nfa_initials_buckets, [7 x i8]* @p_str28, i32 0, i32 0, i32 0, i32 10, [1 x i8]* @p_str212, [1 x i8]* @p_str212, [1 x i8]* @p_str212)

ST_1: stg_67 [1/1] 0.00ns
:29  call void (...)* @_ssdm_op_SpecBus(i32* %nfa_finals_buckets, [7 x i8]* @p_str28, i32 0, i32 0, i32 0, i32 10, [1 x i8]* @p_str212, [1 x i8]* @p_str212, [1 x i8]* @p_str212)

ST_1: stg_68 [1/1] 0.00ns
:30  call void (...)* @_ssdm_op_SpecBus(i32* %nfa_forward_buckets, [7 x i8]* @p_str28, i32 0, i32 0, i32 0, i32 10, [1 x i8]* @p_str212, [1 x i8]* @p_str212, [1 x i8]* @p_str212)

ST_1: stg_69 [1/1] 0.00ns
:31  call void (...)* @_ssdm_op_SpecWire(i8* %nfa_symbols, [8 x i8]* @p_str29, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str212, [1 x i8]* @p_str212, [1 x i8]* @p_str212) nounwind

ST_1: stg_70 [1/1] 0.00ns
:32  call void (...)* @_ssdm_op_SpecBus(i8* %sample_buffer, [7 x i8]* @p_str28, i32 0, i32 0, i32 0, i32 10, [1 x i8]* @p_str212, [1 x i8]* @p_str212, [1 x i8]* @p_str212)

ST_1: stg_71 [1/1] 0.00ns
:33  call void (...)* @_ssdm_op_SpecWire(i32 %sample_buffer_length, [8 x i8]* @p_str29, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str212, [1 x i8]* @p_str212, [1 x i8]* @p_str212) nounwind

ST_1: stg_72 [1/1] 0.00ns
:34  call void (...)* @_ssdm_op_SpecWire(i16 %sample_length, [8 x i8]* @p_str29, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str212, [1 x i8]* @p_str212, [1 x i8]* @p_str212) nounwind

ST_1: stg_73 [1/1] 0.00ns
:35  call void (...)* @_ssdm_op_SpecBus(i56* %indices, [7 x i8]* @p_str28, i32 0, i32 0, i32 0, i32 10, [1 x i8]* @p_str212, [1 x i8]* @p_str212, [1 x i8]* @p_str212)

ST_1: stg_74 [1/1] 0.00ns
:36  call void (...)* @_ssdm_op_SpecWire(i16 %i_size, [8 x i8]* @p_str29, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str212, [1 x i8]* @p_str212, [1 x i8]* @p_str212) nounwind

ST_1: stg_75 [1/1] 0.00ns
:37  call void (...)* @_ssdm_op_SpecWire(i16 %begin_index, i16 %begin_sample, [8 x i8]* @p_str29, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str212, [1 x i8]* @p_str212, [1 x i8]* @p_str212) nounwind

ST_1: stg_76 [1/1] 0.00ns
:38  call void (...)* @_ssdm_op_SpecWire(i16 %end_index, i16 %end_sample, [8 x i8]* @p_str29, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str212, [1 x i8]* @p_str212, [1 x i8]* @p_str212) nounwind

ST_1: stg_77 [1/1] 0.00ns
:39  call void (...)* @_ssdm_op_SpecWire(i1 %stop_on_first, [8 x i8]* @p_str29, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str212, [1 x i8]* @p_str212, [1 x i8]* @p_str212) nounwind

ST_1: stg_78 [1/1] 0.00ns
:40  call void (...)* @_ssdm_op_SpecWire(i1 %accept, [8 x i8]* @p_str29, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str212, [1 x i8]* @p_str212, [1 x i8]* @p_str212) nounwind

ST_1: stg_79 [1/1] 0.00ns
:41  call void (...)* @_ssdm_op_SpecWire(i32 0, [11 x i8]* @p_str30, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str212, [1 x i8]* @p_str212, [1 x i8]* @p_str212) nounwind

ST_1: stg_80 [1/1] 0.00ns
:42  call void (...)* @_ssdm_op_SpecIFCore(i32* %nfa_initials_buckets, [1 x i8]* @p_str212, [7 x i8]* @p_str31, [1 x i8]* @p_str212, [1 x i8]* @p_str212, [1 x i8]* @p_str212, [1 x i8]* @p_str212)

ST_1: stg_81 [1/1] 0.00ns
:43  call void (...)* @_ssdm_op_SpecIFCore(i32* %nfa_finals_buckets, [1 x i8]* @p_str212, [7 x i8]* @p_str31, [1 x i8]* @p_str212, [1 x i8]* @p_str212, [1 x i8]* @p_str212, [1 x i8]* @p_str212)

ST_1: stg_82 [1/1] 0.00ns
:44  call void (...)* @_ssdm_op_SpecIFCore(i32* %nfa_forward_buckets, [1 x i8]* @p_str212, [7 x i8]* @p_str31, [1 x i8]* @p_str212, [1 x i8]* @p_str212, [1 x i8]* @p_str212, [1 x i8]* @p_str212)

ST_1: stg_83 [1/1] 0.00ns
:45  call void (...)* @_ssdm_op_SpecIFCore(i8* %nfa_symbols, [1 x i8]* @p_str212, [7 x i8]* @p_str32, [1 x i8]* @p_str212, [1 x i8]* @p_str212, [1 x i8]* @p_str212, [17 x i8]* @p_str33)

ST_1: stg_84 [1/1] 0.00ns
:46  call void (...)* @_ssdm_op_SpecIFCore(i8* %sample_buffer, [1 x i8]* @p_str212, [7 x i8]* @p_str31, [1 x i8]* @p_str212, [1 x i8]* @p_str212, [1 x i8]* @p_str212, [1 x i8]* @p_str212)

ST_1: stg_85 [1/1] 0.00ns
:47  call void (...)* @_ssdm_op_SpecIFCore(i32 %sample_buffer_length, [1 x i8]* @p_str212, [7 x i8]* @p_str32, [1 x i8]* @p_str212, [1 x i8]* @p_str212, [1 x i8]* @p_str212, [17 x i8]* @p_str33)

ST_1: stg_86 [1/1] 0.00ns
:48  call void (...)* @_ssdm_op_SpecIFCore(i16 %sample_length, [1 x i8]* @p_str212, [7 x i8]* @p_str32, [1 x i8]* @p_str212, [1 x i8]* @p_str212, [1 x i8]* @p_str212, [17 x i8]* @p_str33)

ST_1: stg_87 [1/1] 0.00ns
:49  call void (...)* @_ssdm_op_SpecIFCore(i56* %indices, [1 x i8]* @p_str212, [7 x i8]* @p_str31, [1 x i8]* @p_str212, [1 x i8]* @p_str212, [1 x i8]* @p_str212, [1 x i8]* @p_str212)

ST_1: stg_88 [1/1] 0.00ns
:50  call void (...)* @_ssdm_op_SpecIFCore(i16 %i_size, [1 x i8]* @p_str212, [7 x i8]* @p_str32, [1 x i8]* @p_str212, [1 x i8]* @p_str212, [1 x i8]* @p_str212, [17 x i8]* @p_str33)

ST_1: stg_89 [1/1] 0.00ns
:51  call void (...)* @_ssdm_op_SpecIFCore(i16 %begin_index, i16 %begin_sample, [1 x i8]* @p_str212, [7 x i8]* @p_str32, [1 x i8]* @p_str212, [1 x i8]* @p_str212, [1 x i8]* @p_str212, [17 x i8]* @p_str33)

ST_1: stg_90 [1/1] 0.00ns
:52  call void (...)* @_ssdm_op_SpecIFCore(i16 %end_index, i16 %end_sample, [1 x i8]* @p_str212, [7 x i8]* @p_str32, [1 x i8]* @p_str212, [1 x i8]* @p_str212, [1 x i8]* @p_str212, [17 x i8]* @p_str33)

ST_1: stg_91 [1/1] 0.00ns
:53  call void (...)* @_ssdm_op_SpecIFCore(i1 %stop_on_first, [1 x i8]* @p_str212, [7 x i8]* @p_str32, [1 x i8]* @p_str212, [1 x i8]* @p_str212, [1 x i8]* @p_str212, [17 x i8]* @p_str33)

ST_1: stg_92 [1/1] 0.00ns
:54  call void (...)* @_ssdm_op_SpecIFCore(i1 %accept, [1 x i8]* @p_str212, [7 x i8]* @p_str32, [1 x i8]* @p_str212, [1 x i8]* @p_str212, [1 x i8]* @p_str212, [17 x i8]* @p_str33)

ST_1: stg_93 [1/1] 0.00ns
:55  call void (...)* @_ssdm_op_SpecIFCore(i32 0, [1 x i8]* @p_str212, [7 x i8]* @p_str32, [1 x i8]* @p_str212, [1 x i8]* @p_str212, [1 x i8]* @p_str212, [17 x i8]* @p_str33)

ST_1: stg_94 [1/1] 1.17ns
:56  store i32 0, i32* %c, align 4

ST_1: stg_95 [1/1] 1.10ns
:57  br label %1


 <State 2>: 3.41ns
ST_2: i_index [1/1] 0.00ns
:0  %i_index = phi i16 [ %begin_index_read, %0 ], [ %i_index_1, %._crit_edge3 ]

ST_2: i_sample [1/1] 0.00ns
:1  %i_sample = phi i16 [ %begin_sample_read, %0 ], [ %i_sample_1, %._crit_edge3 ]

ST_2: c_load [1/1] 0.00ns
:2  %c_load = load i32* %c, align 4

ST_2: stg_99 [1/1] 0.00ns
:3  call void (...)* @_ssdm_op_SpecIFCore(i16 %end_index, i16 %end_sample, [1 x i8]* @p_str212, [7 x i8]* @p_str32, [1 x i8]* @p_str212, [1 x i8]* @p_str212, [1 x i8]* @p_str212, [17 x i8]* @p_str33)

ST_2: tmp_i [1/1] 1.46ns
:4  %tmp_i = icmp eq i16 %i_sample, %end_sample_read

ST_2: tmp_i_12 [1/1] 1.46ns
:5  %tmp_i_12 = icmp eq i16 %i_index, %end_index_read

ST_2: tmp_i_13 [1/1] 0.77ns
:6  %tmp_i_13 = and i1 %tmp_i, %tmp_i_12

ST_2: stg_103 [1/1] 1.17ns
:7  br i1 %tmp_i_13, label %._crit_edge, label %2


 <State 3>: 0.00ns
ST_3: call_ret1 [6/6] 0.00ns
:4  %call_ret1 = call fastcc { i32, i32 } @nfa_get_initials(i32* %nfa_initials_buckets)


 <State 4>: 4.00ns
ST_4: call_ret1 [5/6] 4.00ns
:4  %call_ret1 = call fastcc { i32, i32 } @nfa_get_initials(i32* %nfa_initials_buckets)


 <State 5>: 4.00ns
ST_5: offset [5/5] 0.00ns
:2  %offset = call fastcc i32 @sample_iterator_get_offset(i16 %i_index, i16 %i_sample, i56* %indices, i32 %sample_buffer_length_read, i16 %sample_length_read)

ST_5: call_ret1 [4/6] 4.00ns
:4  %call_ret1 = call fastcc { i32, i32 } @nfa_get_initials(i32* %nfa_initials_buckets)


 <State 6>: 4.00ns
ST_6: offset [4/5] 4.00ns
:2  %offset = call fastcc i32 @sample_iterator_get_offset(i16 %i_index, i16 %i_sample, i56* %indices, i32 %sample_buffer_length_read, i16 %sample_length_read)

ST_6: call_ret1 [3/6] 4.00ns
:4  %call_ret1 = call fastcc { i32, i32 } @nfa_get_initials(i32* %nfa_initials_buckets)


 <State 7>: 4.00ns
ST_7: offset [3/5] 4.00ns
:2  %offset = call fastcc i32 @sample_iterator_get_offset(i16 %i_index, i16 %i_sample, i56* %indices, i32 %sample_buffer_length_read, i16 %sample_length_read)

ST_7: call_ret1 [2/6] 4.00ns
:4  %call_ret1 = call fastcc { i32, i32 } @nfa_get_initials(i32* %nfa_initials_buckets)


 <State 8>: 4.00ns
ST_8: offset [2/5] 4.00ns
:2  %offset = call fastcc i32 @sample_iterator_get_offset(i16 %i_index, i16 %i_sample, i56* %indices, i32 %sample_buffer_length_read, i16 %sample_length_read)

ST_8: call_ret1 [1/6] 4.00ns
:4  %call_ret1 = call fastcc { i32, i32 } @nfa_get_initials(i32* %nfa_initials_buckets)

ST_8: current_buckets_0 [1/1] 0.00ns
:5  %current_buckets_0 = extractvalue { i32, i32 } %call_ret1, 0

ST_8: current_buckets_1 [1/1] 0.00ns
:6  %current_buckets_1 = extractvalue { i32, i32 } %call_ret1, 1


 <State 9>: 5.20ns
ST_9: tmp [1/1] 0.00ns
:0  %tmp = call i32 (...)* @_ssdm_op_SpecRegionBegin([12 x i8]* @p_str34)

ST_9: stg_117 [1/1] 0.00ns
:1  call void (...)* @_ssdm_op_SpecLoopTripCount(i32 0, i32 65535, i32 2000, [1 x i8]* @p_str212) nounwind

ST_9: offset [1/5] 5.20ns
:2  %offset = call fastcc i32 @sample_iterator_get_offset(i16 %i_index, i16 %i_sample, i56* %indices, i32 %sample_buffer_length_read, i16 %sample_length_read)

ST_9: tmp_2 [1/1] 0.00ns
:3  %tmp_2 = zext i32 %offset to i64

ST_9: stg_120 [1/1] 1.32ns
:7  br label %3


 <State 10>: 2.77ns
ST_10: next_buckets_1 [1/1] 0.00ns
:0  %next_buckets_1 = phi i32 [ %current_buckets_1, %2 ], [ %tmp_buckets_1_3, %8 ]

ST_10: next_buckets_0 [1/1] 0.00ns
:1  %next_buckets_0 = phi i32 [ %current_buckets_0, %2 ], [ %tmp_buckets_0_3, %8 ]

ST_10: i_0_i [1/1] 0.00ns
:2  %i_0_i = phi i16 [ 0, %2 ], [ %i, %8 ]

ST_10: p_01_rec_i [1/1] 0.00ns
:3  %p_01_rec_i = phi i64 [ 0, %2 ], [ %p_rec_i, %8 ]

ST_10: sum [1/1] 2.77ns
:4  %sum = add i64 %p_01_rec_i, %tmp_2

ST_10: sample_buffer_addr [1/1] 0.00ns
:5  %sample_buffer_addr = getelementptr i8* %sample_buffer, i64 %sum

ST_10: tmp_3 [1/1] 1.46ns
:6  %tmp_3 = icmp ult i16 %i_0_i, %sample_length_read

ST_10: i [1/1] 1.69ns
:7  %i = add i16 %i_0_i, 1

ST_10: stg_129 [1/1] 0.00ns
:8  br i1 %tmp_3, label %4, label %bitset_any.exit

ST_10: p_rec_i [1/1] 2.77ns
:2  %p_rec_i = add i64 %p_01_rec_i, 1


 <State 11>: 4.00ns
ST_11: sym_req [2/2] 4.00ns
:3  %sym_req = call i1 @_ssdm_op_ReadReq.ap_bus.i8P(i8* %sample_buffer_addr, i32 1)


 <State 12>: 4.00ns
ST_12: sym_req [1/2] 4.00ns
:3  %sym_req = call i1 @_ssdm_op_ReadReq.ap_bus.i8P(i8* %sample_buffer_addr, i32 1)


 <State 13>: 4.00ns
ST_13: tmp_4 [1/1] 0.00ns
:0  %tmp_4 = call i32 (...)* @_ssdm_op_SpecRegionBegin([12 x i8]* @p_str12)

ST_13: stg_134 [1/1] 0.00ns
:1  call void (...)* @_ssdm_op_SpecLoopTripCount(i32 0, i32 1024, i32 512, [1 x i8]* @p_str212) nounwind

ST_13: sym [1/1] 4.00ns
:4  %sym = call i8 @_ssdm_op_Read.ap_bus.i8P(i8* %sample_buffer_addr)

ST_13: tmp_2_i [1/1] 1.60ns
:5  %tmp_2_i = icmp eq i32 %next_buckets_0, 0

ST_13: stg_137 [1/1] 1.17ns
:6  br i1 %tmp_2_i, label %6, label %5

ST_13: tmp_2_1_i [1/1] 1.60ns
:0  %tmp_2_1_i = icmp eq i32 %next_buckets_1, 0

ST_13: stg_139 [1/1] 1.17ns
:1  br i1 %tmp_2_1_i, label %bitset_first.exit.preheader, label %5


 <State 14>: 3.36ns
ST_14: bus_assign [1/1] 0.00ns
:0  %bus_assign = phi i32 [ %next_buckets_0, %4 ], [ %next_buckets_1, %6 ]

ST_14: r_bit [1/1] 3.36ns
:3  %r_bit = call fastcc zeroext i5 @_bsf32_hw(i32 %bus_assign) nounwind


 <State 15>: 2.34ns
ST_15: agg_result_bucket_index_0_lcssa4_i [1/1] 0.00ns
:1  %agg_result_bucket_index_0_lcssa4_i = phi i1 [ false, %4 ], [ true, %6 ]

ST_15: agg_result_bucket_index_0_lcssa4_i_cast_cast [1/1] 0.00ns
:2  %agg_result_bucket_index_0_lcssa4_i_cast_cast = zext i1 %agg_result_bucket_index_0_lcssa4_i to i2

ST_15: stg_144 [1/1] 1.17ns
:4  br label %bitset_first.exit.preheader

ST_15: j_bucket1_ph [1/1] 0.00ns
bitset_first.exit.preheader:0  %j_bucket1_ph = phi i32 [ 0, %6 ], [ %bus_assign, %5 ]

ST_15: j_bucket_index1_ph [1/1] 0.00ns
bitset_first.exit.preheader:1  %j_bucket_index1_ph = phi i2 [ -2, %6 ], [ %agg_result_bucket_index_0_lcssa4_i_cast_cast, %5 ]

ST_15: j_bit1_ph [1/1] 0.00ns
bitset_first.exit.preheader:2  %j_bit1_ph = phi i5 [ undef, %6 ], [ %r_bit, %5 ]

ST_15: j_end_ph [1/1] 0.00ns
bitset_first.exit.preheader:3  %j_end_ph = phi i1 [ true, %6 ], [ false, %5 ]

ST_15: j_bucket_index1_ph_cast [1/1] 0.00ns
bitset_first.exit.preheader:4  %j_bucket_index1_ph_cast = zext i2 %j_bucket_index1_ph to i8

ST_15: j_bit1_ph_cast [1/1] 0.00ns
bitset_first.exit.preheader:5  %j_bit1_ph_cast = zext i5 %j_bit1_ph to i8

ST_15: tmp_10_i_cast [1/1] 0.00ns
bitset_first.exit.preheader:6  %tmp_10_i_cast = zext i8 %sym to i14

ST_15: stg_152 [1/1] 1.17ns
bitset_first.exit.preheader:7  br label %bitset_first.exit


 <State 16>: 3.61ns
ST_16: tmp_buckets_1_3 [1/1] 0.00ns
bitset_first.exit:0  %tmp_buckets_1_3 = phi i32 [ %next_buckets_1_1, %bitset_element.exit ], [ 0, %bitset_first.exit.preheader ]

ST_16: tmp_buckets_0_3 [1/1] 0.00ns
bitset_first.exit:1  %tmp_buckets_0_3 = phi i32 [ %next_buckets_0_1, %bitset_element.exit ], [ 0, %bitset_first.exit.preheader ]

ST_16: j_bucket1 [1/1] 0.00ns
bitset_first.exit:2  %j_bucket1 = phi i32 [ %j_bucket, %bitset_element.exit ], [ %j_bucket1_ph, %bitset_first.exit.preheader ]

ST_16: j_bucket_index1 [1/1] 0.00ns
bitset_first.exit:3  %j_bucket_index1 = phi i8 [ %j_bucket_index, %bitset_element.exit ], [ %j_bucket_index1_ph_cast, %bitset_first.exit.preheader ]

ST_16: j_bit1 [1/1] 0.00ns
bitset_first.exit:4  %j_bit1 = phi i8 [ %j_bit, %bitset_element.exit ], [ %j_bit1_ph_cast, %bitset_first.exit.preheader ]

ST_16: j_end [1/1] 0.00ns
bitset_first.exit:5  %j_end = phi i1 [ %p_s, %bitset_element.exit ], [ %j_end_ph, %bitset_first.exit.preheader ]

ST_16: any_0_i [1/1] 0.00ns
bitset_first.exit:6  %any_0_i = phi i1 [ true, %bitset_element.exit ], [ false, %bitset_first.exit.preheader ]

ST_16: stg_160 [1/1] 0.00ns
bitset_first.exit:7  br i1 %j_end, label %7, label %bitset_element.exit

ST_16: tmp_6 [1/1] 0.00ns
bitset_element.exit:2  %tmp_6 = trunc i8 %j_bucket_index1 to i1

ST_16: tmp_i1 [1/1] 0.00ns
bitset_element.exit:3  %tmp_i1 = call i6 @_ssdm_op_BitConcatenate.i6.i1.i5(i1 %tmp_6, i5 0)

ST_16: tmp_8 [1/1] 0.00ns
bitset_element.exit:4  %tmp_8 = trunc i8 %j_bit1 to i6

ST_16: state [1/1] 1.51ns
bitset_element.exit:5  %state = add i6 %tmp_i1, %tmp_8

ST_16: nfa_symbols_read [1/1] 0.00ns
bitset_element.exit:7  %nfa_symbols_read = call i8 @_ssdm_op_Read.ap_none.i8P(i8* %nfa_symbols)

ST_16: tmp_7_i_cast [1/1] 0.00ns
bitset_element.exit:8  %tmp_7_i_cast = zext i6 %state to i14

ST_16: tmp_8_i_cast [1/1] 0.00ns
bitset_element.exit:9  %tmp_8_i_cast = zext i8 %nfa_symbols_read to i14

ST_16: tmp_9_i [2/2] 2.10ns
bitset_element.exit:10  %tmp_9_i = mul i14 %tmp_8_i_cast, %tmp_7_i_cast

ST_16: stg_169 [1/1] 0.77ns
:0  br i1 %any_0_i, label %8, label %nfa_accept_sample.exit

ST_16: empty_14 [1/1] 0.00ns
:0  %empty_14 = call i32 (...)* @_ssdm_op_SpecRegionEnd([12 x i8]* @p_str12, i32 %tmp_4)

ST_16: stg_171 [1/1] 0.00ns
:1  br label %3


 <State 17>: 3.10ns
ST_17: tmp_9_i [1/2] 0.00ns
bitset_element.exit:10  %tmp_9_i = mul i14 %tmp_8_i_cast, %tmp_7_i_cast

ST_17: tmp_11_i [1/1] 3.10ns
bitset_element.exit:11  %tmp_11_i = add i14 %tmp_9_i, %tmp_10_i_cast

ST_17: call_ret6 [3/3] 2.82ns
bitset_element.exit:25  %call_ret6 = call fastcc { i8, i8, i32, i1 } @bitset_next(i32 %next_buckets_1, i8 %j_bit1, i8 %j_bucket_index1, i32 %j_bucket1)


 <State 18>: 4.00ns
ST_18: tmp_12_i [1/1] 0.00ns
bitset_element.exit:12  %tmp_12_i = call i15 @_ssdm_op_BitConcatenate.i15.i14.i1(i14 %tmp_11_i, i1 false)

ST_18: tmp_12_i_cast [1/1] 0.00ns
bitset_element.exit:13  %tmp_12_i_cast = zext i15 %tmp_12_i to i64

ST_18: nfa_forward_buckets_addr [1/1] 0.00ns
bitset_element.exit:14  %nfa_forward_buckets_addr = getelementptr i32* %nfa_forward_buckets, i64 %tmp_12_i_cast

ST_18: tmp_buckets_0_2_req [2/2] 4.00ns
bitset_element.exit:15  %tmp_buckets_0_2_req = call i1 @_ssdm_op_ReadReq.ap_bus.i32P(i32* %nfa_forward_buckets_addr, i32 1)

ST_18: call_ret6 [2/3] 3.36ns
bitset_element.exit:25  %call_ret6 = call fastcc { i8, i8, i32, i1 } @bitset_next(i32 %next_buckets_1, i8 %j_bit1, i8 %j_bucket_index1, i32 %j_bucket1)


 <State 19>: 4.00ns
ST_19: tmp_buckets_0_2_req [1/2] 4.00ns
bitset_element.exit:15  %tmp_buckets_0_2_req = call i1 @_ssdm_op_ReadReq.ap_bus.i32P(i32* %nfa_forward_buckets_addr, i32 1)

ST_19: call_ret6 [1/3] 1.33ns
bitset_element.exit:25  %call_ret6 = call fastcc { i8, i8, i32, i1 } @bitset_next(i32 %next_buckets_1, i8 %j_bit1, i8 %j_bucket_index1, i32 %j_bucket1)

ST_19: j_bit [1/1] 0.00ns
bitset_element.exit:26  %j_bit = extractvalue { i8, i8, i32, i1 } %call_ret6, 0

ST_19: j_bucket_index [1/1] 0.00ns
bitset_element.exit:27  %j_bucket_index = extractvalue { i8, i8, i32, i1 } %call_ret6, 1

ST_19: j_bucket [1/1] 0.00ns
bitset_element.exit:28  %j_bucket = extractvalue { i8, i8, i32, i1 } %call_ret6, 2

ST_19: p_s [1/1] 0.00ns
bitset_element.exit:29  %p_s = extractvalue { i8, i8, i32, i1 } %call_ret6, 3


 <State 20>: 4.00ns
ST_20: tmp_buckets_0_1 [1/1] 4.00ns
bitset_element.exit:16  %tmp_buckets_0_1 = call i32 @_ssdm_op_Read.ap_bus.i32P(i32* %nfa_forward_buckets_addr)


 <State 21>: 4.00ns
ST_21: tmp_13_i [1/1] 0.00ns
bitset_element.exit:17  %tmp_13_i = call i15 @_ssdm_op_BitConcatenate.i15.i14.i1(i14 %tmp_11_i, i1 true)

ST_21: tmp_13_i_cast [1/1] 0.00ns
bitset_element.exit:18  %tmp_13_i_cast = zext i15 %tmp_13_i to i64

ST_21: nfa_forward_buckets_addr_1 [1/1] 0.00ns
bitset_element.exit:19  %nfa_forward_buckets_addr_1 = getelementptr i32* %nfa_forward_buckets, i64 %tmp_13_i_cast

ST_21: tmp_buckets_1_2_req [2/2] 4.00ns
bitset_element.exit:20  %tmp_buckets_1_2_req = call i1 @_ssdm_op_ReadReq.ap_bus.i32P(i32* %nfa_forward_buckets_addr_1, i32 1)

ST_21: next_buckets_0_1 [1/1] 0.77ns
bitset_element.exit:22  %next_buckets_0_1 = or i32 %tmp_buckets_0_1, %tmp_buckets_0_3


 <State 22>: 4.00ns
ST_22: tmp_buckets_1_2_req [1/2] 4.00ns
bitset_element.exit:20  %tmp_buckets_1_2_req = call i1 @_ssdm_op_ReadReq.ap_bus.i32P(i32* %nfa_forward_buckets_addr_1, i32 1)


 <State 23>: 4.00ns
ST_23: tmp_buckets_1_1 [1/1] 4.00ns
bitset_element.exit:21  %tmp_buckets_1_1 = call i32 @_ssdm_op_Read.ap_bus.i32P(i32* %nfa_forward_buckets_addr_1)


 <State 24>: 0.77ns
ST_24: tmp_7 [1/1] 0.00ns
bitset_element.exit:0  %tmp_7 = call i32 (...)* @_ssdm_op_SpecRegionBegin([12 x i8]* @p_str13)

ST_24: stg_195 [1/1] 0.00ns
bitset_element.exit:1  call void (...)* @_ssdm_op_SpecLoopTripCount(i32 0, i32 64, i32 5, [1 x i8]* @p_str212) nounwind

ST_24: stg_196 [1/1] 0.00ns
bitset_element.exit:6  call void (...)* @_ssdm_op_SpecIFCore(i8* %nfa_symbols, [1 x i8]* @p_str212, [7 x i8]* @p_str32, [1 x i8]* @p_str212, [1 x i8]* @p_str212, [1 x i8]* @p_str212, [17 x i8]* @p_str33)

ST_24: next_buckets_1_1 [1/1] 0.77ns
bitset_element.exit:23  %next_buckets_1_1 = or i32 %tmp_buckets_1_1, %tmp_buckets_1_3

ST_24: empty [1/1] 0.00ns
bitset_element.exit:24  %empty = call i32 (...)* @_ssdm_op_SpecRegionEnd([12 x i8]* @p_str13, i32 %tmp_7)

ST_24: stg_199 [1/1] 0.00ns
bitset_element.exit:30  br label %bitset_first.exit


 <State 25>: 0.00ns
ST_25: call_ret2 [6/6] 0.00ns
bitset_any.exit:0  %call_ret2 = call fastcc { i32, i32 } @nfa_get_finals(i32* %nfa_finals_buckets)


 <State 26>: 4.00ns
ST_26: call_ret2 [5/6] 4.00ns
bitset_any.exit:0  %call_ret2 = call fastcc { i32, i32 } @nfa_get_finals(i32* %nfa_finals_buckets)


 <State 27>: 4.00ns
ST_27: call_ret2 [4/6] 4.00ns
bitset_any.exit:0  %call_ret2 = call fastcc { i32, i32 } @nfa_get_finals(i32* %nfa_finals_buckets)


 <State 28>: 4.00ns
ST_28: call_ret2 [3/6] 4.00ns
bitset_any.exit:0  %call_ret2 = call fastcc { i32, i32 } @nfa_get_finals(i32* %nfa_finals_buckets)


 <State 29>: 4.00ns
ST_29: call_ret2 [2/6] 4.00ns
bitset_any.exit:0  %call_ret2 = call fastcc { i32, i32 } @nfa_get_finals(i32* %nfa_finals_buckets)


 <State 30>: 4.00ns
ST_30: call_ret2 [1/6] 4.00ns
bitset_any.exit:0  %call_ret2 = call fastcc { i32, i32 } @nfa_get_finals(i32* %nfa_finals_buckets)

ST_30: tmp_buckets_0 [1/1] 0.00ns
bitset_any.exit:1  %tmp_buckets_0 = extractvalue { i32, i32 } %call_ret2, 0

ST_30: tmp_buckets_1 [1/1] 0.00ns
bitset_any.exit:2  %tmp_buckets_1 = extractvalue { i32, i32 } %call_ret2, 1


 <State 31>: 3.92ns
ST_31: current_buckets_0_1 [1/1] 0.77ns
bitset_any.exit:3  %current_buckets_0_1 = and i32 %next_buckets_0, %tmp_buckets_0

ST_31: current_buckets_1_1 [1/1] 0.77ns
bitset_any.exit:4  %current_buckets_1_1 = and i32 %next_buckets_1, %tmp_buckets_1

ST_31: tmp_1 [1/1] 0.77ns
bitset_any.exit:5  %tmp_1 = or i32 %current_buckets_1_1, %current_buckets_0_1

ST_31: tmp_5 [1/1] 1.60ns
bitset_any.exit:6  %tmp_5 = icmp ne i32 %tmp_1, 0

ST_31: stg_212 [1/1] 0.77ns
bitset_any.exit:7  br label %nfa_accept_sample.exit


 <State 32>: 3.22ns
ST_32: r [1/1] 0.00ns
nfa_accept_sample.exit:0  %r = phi i1 [ %tmp_5, %bitset_any.exit ], [ false, %7 ]

ST_32: or_cond [1/1] 0.77ns
nfa_accept_sample.exit:1  %or_cond = xor i1 %r, %accept_read

ST_32: stg_215 [1/1] 0.00ns
nfa_accept_sample.exit:2  br i1 %or_cond, label %._crit_edge3, label %9

ST_32: stg_216 [1/1] 1.17ns
:0  br i1 %stop_on_first_read, label %._crit_edge, label %10

ST_32: c_1 [1/1] 2.05ns
:0  %c_1 = add nsw i32 %c_load, 1

ST_32: stg_218 [1/1] 1.17ns
:1  store i32 %c_1, i32* %c, align 4

ST_32: stg_219 [1/1] 0.00ns
:2  br label %._crit_edge3


 <State 33>: 0.00ns
ST_33: call_ret7 [4/4] 0.00ns
._crit_edge3:1  %call_ret7 = call fastcc { i16, i16 } @sample_iterator_next(i56* %indices, i16 %i_index, i16 %i_sample)


 <State 34>: 4.00ns
ST_34: call_ret7 [3/4] 4.00ns
._crit_edge3:1  %call_ret7 = call fastcc { i16, i16 } @sample_iterator_next(i56* %indices, i16 %i_index, i16 %i_sample)


 <State 35>: 4.00ns
ST_35: call_ret7 [2/4] 4.00ns
._crit_edge3:1  %call_ret7 = call fastcc { i16, i16 } @sample_iterator_next(i56* %indices, i16 %i_index, i16 %i_sample)


 <State 36>: 3.93ns
ST_36: empty_15 [1/1] 0.00ns
._crit_edge3:0  %empty_15 = call i32 (...)* @_ssdm_op_SpecRegionEnd([12 x i8]* @p_str34, i32 %tmp)

ST_36: call_ret7 [1/4] 3.93ns
._crit_edge3:1  %call_ret7 = call fastcc { i16, i16 } @sample_iterator_next(i56* %indices, i16 %i_index, i16 %i_sample)

ST_36: i_index_1 [1/1] 0.00ns
._crit_edge3:2  %i_index_1 = extractvalue { i16, i16 } %call_ret7, 0

ST_36: i_sample_1 [1/1] 0.00ns
._crit_edge3:3  %i_sample_1 = extractvalue { i16, i16 } %call_ret7, 1

ST_36: stg_227 [1/1] 0.00ns
._crit_edge3:4  br label %1


 <State 37>: 0.00ns
ST_37: p_0 [1/1] 0.00ns
._crit_edge:0  %p_0 = phi i32 [ %c_load, %1 ], [ 1, %9 ]

ST_37: stg_229 [1/1] 0.00ns
._crit_edge:1  ret i32 %p_0



============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7
	State 8
	State 9
	State 10
	State 11
	State 12
	State 13
	State 14
	State 15
	State 16
	State 17
	State 18
	State 19
	State 20
	State 21
	State 22
	State 23
	State 24
	State 25
	State 26
	State 27
	State 28
	State 29
	State 30
	State 31
	State 32
	State 33
	State 34
	State 35
	State 36
	State 37


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
