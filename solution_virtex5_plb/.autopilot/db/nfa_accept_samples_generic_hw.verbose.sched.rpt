

================================================================
== Vivado HLS Report for 'nfa_accept_samples_generic_hw'
================================================================
* Date:           Sat Nov 08 10:20:47 2014

* Version:        2014.1 (build date: Fri Apr 04 13:20:25 PM 2014)
* Project:        oil_plainc_hls
* Solution:       solution_virtex5_plb
* Product family: virtex5 virtex5_fpv5 
* Target device:  xc5vlx50tff1136-3


================================================================
== Performance Estimates
================================================================
+ Timing (ns): 
    * Summary: 
    +---------+-------+----------+------------+
    |  Clock  | Target| Estimated| Uncertainty|
    +---------+-------+----------+------------+
    |default  |  10.00|      7.00|        3.00|
    +---------+-------+----------+------------+

+ Latency (clock cycles): 
    * Summary: 
    +-----+-----+-----+-----+---------+
    |  Latency  |  Interval | Pipeline|
    | min | max | min | max |   Type  |
    +-----+-----+-----+-----+---------+
    |    ?|    ?|    ?|    ?|   none  |
    +-----+-----+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +-------------+-----+-----+----------+-----------+-----------+----------+----------+
        |             |  Latency  | Iteration|  Initiation Interval  |   Trip   |          |
        |  Loop Name  | min | max |  Latency |  achieved |   target  |   Count  | Pipelined|
        +-------------+-----+-----+----------+-----------+-----------+----------+----------+
        |- Loop 1     |    ?|    ?|         ?|          -|          -| 0 ~ 1000 |    no    |
        | + Loop 1.1  |    ?|    ?|        10|          -|          -|         ?|    no    |
        | + Loop 1.2  |    0|   32|         2|          -|          -|  0 ~ 16  |    no    |
        +-------------+-----+-----+----------+-----------+-----------+----------+----------+



================================================================
== Utilization Estimates
================================================================
* Summary: 
+-----------------+---------+-------+-------+-------+
|       Name      | BRAM_18K| DSP48E|   FF  |  LUT  |
+-----------------+---------+-------+-------+-------+
|Expression       |        -|      -|      -|      -|
|FIFO             |        -|      -|      -|      -|
|Instance         |        -|      -|      -|      -|
|Memory           |        -|      -|      -|      -|
|Multiplexer      |        -|      -|      -|      -|
|Register         |        -|      -|      -|      -|
+-----------------+---------+-------+-------+-------+
|Total            |        0|      0|      0|      0|
+-----------------+---------+-------+-------+-------+
|Available        |      120|     48|  28800|  28800|
+-----------------+---------+-------+-------+-------+
|Utilization (%)  |        0|      0|      0|      0|
+-----------------+---------+-------+-------+-------+

+ Detail: 
    * Instance: 
    N/A

    * Memory: 
    N/A

    * FIFO: 
    N/A

    * Expression: 
    N/A

    * Multiplexer: 
    N/A

    * Register: 
    N/A



================================================================
== Interface
================================================================
* Summary: 
N/A

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 1
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states: 10
* Pipeline: 0
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 
	2  / true
2 --> 
	3  / true
3 --> 
	7  / (tmp_3) | (finished_3)
	4  / (!tmp_3 & !finished_3)
4 --> 
	5  / true
5 --> 
	6  / true
6 --> 
	3  / true
7 --> 
	8  / (!brmerge_demorgan)
	10  / (brmerge_demorgan)
8 --> 
	9  / (!exitcond)
	2  / (exitcond & !finished_2)
	10  / (exitcond & finished_2)
9 --> 
	8  / true
10 --> 
* FSM state operations: 

 <State 1>: 1.10ns
ST_1: c [1/1] 0.00ns
:0  %c = alloca i16, align 2

ST_1: i_index [1/1] 0.00ns
:1  %i_index = alloca i16, align 2

ST_1: i_sample [1/1] 0.00ns
:2  %i_sample = alloca i16, align 2

ST_1: stg_14 [1/1] 0.00ns
:3  call void (...)* @_ssdm_op_SpecBitsMap(i56* %indices), !map !0

ST_1: stg_15 [1/1] 0.00ns
:4  call void (...)* @_ssdm_op_SpecBitsMap(i64* %nfa_finals_buckets), !map !12

ST_1: stg_16 [1/1] 0.00ns
:5  call void (...)* @_ssdm_op_SpecBitsMap(i64* %nfa_initials_buckets), !map !23

ST_1: stg_17 [1/1] 0.00ns
:6  call void (...)* @_ssdm_op_SpecBitsMap(i32* %nfa_forward_buckets), !map !30

ST_1: stg_18 [1/1] 0.00ns
:7  call void (...)* @_ssdm_op_SpecBitsMap([32130 x i32]* %nfa_backward_buckets), !map !37

ST_1: stg_19 [1/1] 0.00ns
:8  call void (...)* @_ssdm_op_SpecBitsMap(i8* %nfa_symbols), !map !41

ST_1: stg_20 [1/1] 0.00ns
:9  call void (...)* @_ssdm_op_SpecBitsMap(i8* %sample_buffer), !map !47

ST_1: stg_21 [1/1] 0.00ns
:10  call void (...)* @_ssdm_op_SpecBitsMap(i32 %sample_buffer_length), !map !53

ST_1: stg_22 [1/1] 0.00ns
:11  call void (...)* @_ssdm_op_SpecBitsMap(i16 %sample_length), !map !59

ST_1: stg_23 [1/1] 0.00ns
:12  call void (...)* @_ssdm_op_SpecBitsMap(i16 %i_size), !map !63

ST_1: stg_24 [1/1] 0.00ns
:13  call void (...)* @_ssdm_op_SpecBitsMap(i16 %begin_index), !map !67

ST_1: stg_25 [1/1] 0.00ns
:14  call void (...)* @_ssdm_op_SpecBitsMap(i16 %begin_sample), !map !71

ST_1: stg_26 [1/1] 0.00ns
:15  call void (...)* @_ssdm_op_SpecBitsMap(i16 %end_index), !map !75

ST_1: stg_27 [1/1] 0.00ns
:16  call void (...)* @_ssdm_op_SpecBitsMap(i16 %end_sample), !map !79

ST_1: stg_28 [1/1] 0.00ns
:17  call void (...)* @_ssdm_op_SpecBitsMap(i1 %stop_on_first), !map !83

ST_1: stg_29 [1/1] 0.00ns
:18  call void (...)* @_ssdm_op_SpecBitsMap(i1 %accept), !map !87

ST_1: stg_30 [1/1] 0.00ns
:19  call void (...)* @_ssdm_op_SpecBitsMap(i32 0) nounwind, !map !91

ST_1: stg_31 [1/1] 0.00ns
:20  call void (...)* @_ssdm_op_SpecTopModule([30 x i8]* @str) nounwind

ST_1: accept_read [1/1] 0.00ns
:21  %accept_read = call i1 @_ssdm_op_Read.ap_none.i1(i1 %accept)

ST_1: stop_on_first_read [1/1] 0.00ns
:22  %stop_on_first_read = call i1 @_ssdm_op_Read.ap_none.i1(i1 %stop_on_first)

ST_1: end_sample_read [1/1] 0.00ns
:23  %end_sample_read = call i16 @_ssdm_op_Read.ap_none.i16(i16 %end_sample)

ST_1: end_index_read [1/1] 0.00ns
:24  %end_index_read = call i16 @_ssdm_op_Read.ap_none.i16(i16 %end_index)

ST_1: i_sample_1 [1/1] 0.00ns
:25  %i_sample_1 = call i16 @_ssdm_op_Read.ap_none.i16(i16 %begin_sample)

ST_1: i_index_1 [1/1] 0.00ns
:26  %i_index_1 = call i16 @_ssdm_op_Read.ap_none.i16(i16 %begin_index)

ST_1: sample_length_read [1/1] 0.00ns
:27  %sample_length_read = call i16 @_ssdm_op_Read.ap_none.i16(i16 %sample_length)

ST_1: sample_buffer_length_read [1/1] 0.00ns
:28  %sample_buffer_length_read = call i32 @_ssdm_op_Read.ap_none.i32(i32 %sample_buffer_length)

ST_1: result [1/1] 0.00ns
:29  %result = alloca [16 x i1], align 16

ST_1: start_indices [1/1] 0.00ns
:30  %start_indices = alloca [16 x i32], align 16

ST_1: stg_42 [1/1] 0.00ns
:31  call void (...)* @_ssdm_op_SpecBus(i64* %nfa_initials_buckets, [7 x i8]* @p_str35, i32 0, i32 0, i32 0, i32 10, [1 x i8]* @p_str1129, [1 x i8]* @p_str1129, [1 x i8]* @p_str1129) nounwind

ST_1: stg_43 [1/1] 0.00ns
:32  call void (...)* @_ssdm_op_SpecBus(i64* %nfa_finals_buckets, [7 x i8]* @p_str35, i32 0, i32 0, i32 0, i32 10, [1 x i8]* @p_str1129, [1 x i8]* @p_str1129, [1 x i8]* @p_str1129) nounwind

ST_1: stg_44 [1/1] 0.00ns
:33  call void (...)* @_ssdm_op_SpecBus(i32* %nfa_forward_buckets, [7 x i8]* @p_str35, i32 0, i32 0, i32 0, i32 10, [1 x i8]* @p_str1129, [1 x i8]* @p_str1129, [1 x i8]* @p_str1129)

ST_1: stg_45 [1/1] 0.00ns
:34  call void (...)* @_ssdm_op_SpecWire(i8* %nfa_symbols, [8 x i8]* @p_str36, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1129, [1 x i8]* @p_str1129, [1 x i8]* @p_str1129) nounwind

ST_1: stg_46 [1/1] 0.00ns
:35  call void (...)* @_ssdm_op_SpecBus(i8* %sample_buffer, [7 x i8]* @p_str35, i32 0, i32 0, i32 0, i32 10, [1 x i8]* @p_str1129, [1 x i8]* @p_str1129, [1 x i8]* @p_str1129)

ST_1: stg_47 [1/1] 0.00ns
:36  call void (...)* @_ssdm_op_SpecWire(i32 %sample_buffer_length, [8 x i8]* @p_str36, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1129, [1 x i8]* @p_str1129, [1 x i8]* @p_str1129) nounwind

ST_1: stg_48 [1/1] 0.00ns
:37  call void (...)* @_ssdm_op_SpecWire(i16 %sample_length, [8 x i8]* @p_str36, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1129, [1 x i8]* @p_str1129, [1 x i8]* @p_str1129) nounwind

ST_1: stg_49 [1/1] 0.00ns
:38  call void (...)* @_ssdm_op_SpecBus(i56* %indices, [7 x i8]* @p_str35, i32 0, i32 0, i32 0, i32 10, [1 x i8]* @p_str1129, [1 x i8]* @p_str1129, [1 x i8]* @p_str1129)

ST_1: stg_50 [1/1] 0.00ns
:39  call void (...)* @_ssdm_op_SpecWire(i16 %i_size, [8 x i8]* @p_str36, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1129, [1 x i8]* @p_str1129, [1 x i8]* @p_str1129) nounwind

ST_1: stg_51 [1/1] 0.00ns
:40  call void (...)* @_ssdm_op_SpecWire(i16 %begin_index, i16 %begin_sample, [8 x i8]* @p_str36, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1129, [1 x i8]* @p_str1129, [1 x i8]* @p_str1129) nounwind

ST_1: stg_52 [1/1] 0.00ns
:41  call void (...)* @_ssdm_op_SpecWire(i16 %end_index, i16 %end_sample, [8 x i8]* @p_str36, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1129, [1 x i8]* @p_str1129, [1 x i8]* @p_str1129) nounwind

ST_1: stg_53 [1/1] 0.00ns
:42  call void (...)* @_ssdm_op_SpecWire(i1 %stop_on_first, [8 x i8]* @p_str36, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1129, [1 x i8]* @p_str1129, [1 x i8]* @p_str1129) nounwind

ST_1: stg_54 [1/1] 0.00ns
:43  call void (...)* @_ssdm_op_SpecWire(i1 %accept, [8 x i8]* @p_str36, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1129, [1 x i8]* @p_str1129, [1 x i8]* @p_str1129) nounwind

ST_1: stg_55 [1/1] 0.00ns
:44  call void (...)* @_ssdm_op_SpecWire(i32 0, [11 x i8]* @p_str37, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1129, [1 x i8]* @p_str1129, [1 x i8]* @p_str1129) nounwind

ST_1: stg_56 [1/1] 0.00ns
:45  call void (...)* @_ssdm_op_SpecIFCore(i64* %nfa_initials_buckets, [1 x i8]* @p_str1129, [7 x i8]* @p_str38, [1 x i8]* @p_str1129, [1 x i8]* @p_str1129, [1 x i8]* @p_str1129, [1 x i8]* @p_str1129)

ST_1: stg_57 [1/1] 0.00ns
:46  call void (...)* @_ssdm_op_SpecIFCore(i64* %nfa_finals_buckets, [1 x i8]* @p_str1129, [7 x i8]* @p_str38, [1 x i8]* @p_str1129, [1 x i8]* @p_str1129, [1 x i8]* @p_str1129, [1 x i8]* @p_str1129)

ST_1: stg_58 [1/1] 0.00ns
:47  call void (...)* @_ssdm_op_SpecIFCore(i32* %nfa_forward_buckets, [1 x i8]* @p_str1129, [7 x i8]* @p_str38, [1 x i8]* @p_str1129, [1 x i8]* @p_str1129, [1 x i8]* @p_str1129, [1 x i8]* @p_str1129)

ST_1: stg_59 [1/1] 0.00ns
:48  call void (...)* @_ssdm_op_SpecIFCore(i8* %nfa_symbols, [1 x i8]* @p_str1129, [7 x i8]* @p_str39, [1 x i8]* @p_str1129, [1 x i8]* @p_str1129, [1 x i8]* @p_str1129, [17 x i8]* @p_str40)

ST_1: stg_60 [1/1] 0.00ns
:49  call void (...)* @_ssdm_op_SpecIFCore(i8* %sample_buffer, [1 x i8]* @p_str1129, [7 x i8]* @p_str38, [1 x i8]* @p_str1129, [1 x i8]* @p_str1129, [1 x i8]* @p_str1129, [1 x i8]* @p_str1129)

ST_1: stg_61 [1/1] 0.00ns
:50  call void (...)* @_ssdm_op_SpecIFCore(i32 %sample_buffer_length, [1 x i8]* @p_str1129, [7 x i8]* @p_str39, [1 x i8]* @p_str1129, [1 x i8]* @p_str1129, [1 x i8]* @p_str1129, [17 x i8]* @p_str40)

ST_1: stg_62 [1/1] 0.00ns
:51  call void (...)* @_ssdm_op_SpecIFCore(i16 %sample_length, [1 x i8]* @p_str1129, [7 x i8]* @p_str39, [1 x i8]* @p_str1129, [1 x i8]* @p_str1129, [1 x i8]* @p_str1129, [17 x i8]* @p_str40)

ST_1: stg_63 [1/1] 0.00ns
:52  call void (...)* @_ssdm_op_SpecIFCore(i56* %indices, [1 x i8]* @p_str1129, [7 x i8]* @p_str38, [1 x i8]* @p_str1129, [1 x i8]* @p_str1129, [1 x i8]* @p_str1129, [1 x i8]* @p_str1129)

ST_1: stg_64 [1/1] 0.00ns
:53  call void (...)* @_ssdm_op_SpecIFCore(i16 %i_size, [1 x i8]* @p_str1129, [7 x i8]* @p_str39, [1 x i8]* @p_str1129, [1 x i8]* @p_str1129, [1 x i8]* @p_str1129, [17 x i8]* @p_str40)

ST_1: stg_65 [1/1] 0.00ns
:54  call void (...)* @_ssdm_op_SpecIFCore(i16 %begin_index, i16 %begin_sample, [1 x i8]* @p_str1129, [7 x i8]* @p_str39, [1 x i8]* @p_str1129, [1 x i8]* @p_str1129, [1 x i8]* @p_str1129, [17 x i8]* @p_str40)

ST_1: stg_66 [1/1] 0.00ns
:55  call void (...)* @_ssdm_op_SpecIFCore(i16 %end_index, i16 %end_sample, [1 x i8]* @p_str1129, [7 x i8]* @p_str39, [1 x i8]* @p_str1129, [1 x i8]* @p_str1129, [1 x i8]* @p_str1129, [17 x i8]* @p_str40)

ST_1: stg_67 [1/1] 0.00ns
:56  call void (...)* @_ssdm_op_SpecIFCore(i1 %stop_on_first, [1 x i8]* @p_str1129, [7 x i8]* @p_str39, [1 x i8]* @p_str1129, [1 x i8]* @p_str1129, [1 x i8]* @p_str1129, [17 x i8]* @p_str40)

ST_1: stg_68 [1/1] 0.00ns
:57  call void (...)* @_ssdm_op_SpecIFCore(i1 %accept, [1 x i8]* @p_str1129, [7 x i8]* @p_str39, [1 x i8]* @p_str1129, [1 x i8]* @p_str1129, [1 x i8]* @p_str1129, [17 x i8]* @p_str40)

ST_1: stg_69 [1/1] 0.00ns
:58  call void (...)* @_ssdm_op_SpecIFCore(i32 0, [1 x i8]* @p_str1129, [7 x i8]* @p_str39, [1 x i8]* @p_str1129, [1 x i8]* @p_str1129, [1 x i8]* @p_str1129, [17 x i8]* @p_str40)

ST_1: stg_70 [1/1] 1.10ns
:59  store i16 %i_sample_1, i16* %i_sample, align 2

ST_1: stg_71 [1/1] 1.10ns
:60  store i16 %i_index_1, i16* %i_index, align 2

ST_1: stg_72 [1/1] 1.10ns
:61  store i16 0, i16* %c, align 2

ST_1: stg_73 [1/1] 0.77ns
:62  br label %._crit_edge


 <State 2>: 0.89ns
ST_2: finished [1/1] 0.00ns
._crit_edge:0  %finished = phi i1 [ false, %0 ], [ %finished_2, %5 ]

ST_2: tmp [1/1] 0.00ns
._crit_edge:1  %tmp = call i32 (...)* @_ssdm_op_SpecRegionBegin([12 x i8]* @p_str41)

ST_2: stg_76 [1/1] 0.00ns
._crit_edge:2  call void (...)* @_ssdm_op_SpecLoopTripCount(i32 0, i32 1000, i32 500, [1 x i8]* @p_str1129) nounwind

ST_2: stg_77 [1/1] 0.89ns
._crit_edge:3  br label %1


 <State 3>: 4.38ns
ST_3: indvars_iv [1/1] 0.00ns
:0  %indvars_iv = phi i5 [ 0, %._crit_edge ], [ %units, %3 ]

ST_3: finished_1 [1/1] 0.00ns
:1  %finished_1 = phi i1 [ %finished, %._crit_edge ], [ false, %3 ]

ST_3: tmp_3 [1/1] 0.00ns
:2  %tmp_3 = call i1 @_ssdm_op_BitSelect.i1.i5.i32(i5 %indvars_iv, i32 4)

ST_3: units [1/1] 1.51ns
:3  %units = add i5 %indvars_iv, 1

ST_3: stg_82 [1/1] 0.77ns
:4  br i1 %tmp_3, label %.loopexit, label %2

ST_3: i_index_load [1/1] 0.00ns
:0  %i_index_load = load i16* %i_index, align 2

ST_3: i_sample_load [1/1] 0.00ns
:1  %i_sample_load = load i16* %i_sample, align 2

ST_3: stg_85 [1/1] 0.00ns
:2  call void (...)* @_ssdm_op_SpecIFCore(i16 %end_index, i16 %end_sample, [1 x i8]* @p_str1129, [7 x i8]* @p_str39, [1 x i8]* @p_str1129, [1 x i8]* @p_str1129, [1 x i8]* @p_str1129, [17 x i8]* @p_str40)

ST_3: tmp_i [1/1] 1.46ns
:3  %tmp_i = icmp eq i16 %i_sample_load, %end_sample_read

ST_3: tmp_i_16 [1/1] 1.46ns
:4  %tmp_i_16 = icmp eq i16 %i_index_load, %end_index_read

ST_3: finished_3 [1/1] 0.77ns
:5  %finished_3 = and i1 %tmp_i, %tmp_i_16

ST_3: stg_89 [1/1] 0.77ns
:6  br i1 %finished_3, label %.loopexit, label %3

ST_3: offset [2/2] 4.38ns
:0  %offset = call fastcc i32 @sample_iterator_get_offset(i16 %i_index_load, i16 %i_sample_load, i56* %indices, i32 %sample_buffer_length_read, i16 %sample_length_read)

ST_3: stop_on_first_meet [2/2] 4.38ns
.loopexit:1  %stop_on_first_meet = call fastcc i1 @nfa_accept_sample_multi(i64* %nfa_initials_buckets, i64* %nfa_finals_buckets, i32* %nfa_forward_buckets, i8* %nfa_symbols, i8* %sample_buffer, i16 %sample_length_read, [16 x i32]* %start_indices, i1 %stop_on_first_read, i1 %accept_read, i5 %indvars_iv, [16 x i1]* %result)


 <State 4>: 6.77ns
ST_4: offset [1/2] 4.38ns
:0  %offset = call fastcc i32 @sample_iterator_get_offset(i16 %i_index_load, i16 %i_sample_load, i56* %indices, i32 %sample_buffer_length_read, i16 %sample_length_read)

ST_4: tmp_1 [1/1] 0.00ns
:1  %tmp_1 = zext i5 %indvars_iv to i64

ST_4: start_indices_addr [1/1] 0.00ns
:2  %start_indices_addr = getelementptr inbounds [16 x i32]* %start_indices, i64 0, i64 %tmp_1

ST_4: stg_95 [1/1] 2.39ns
:3  store i32 %offset, i32* %start_indices_addr, align 4


 <State 5>: 2.46ns
ST_5: call_ret [2/2] 2.46ns
:4  %call_ret = call fastcc { i16, i16 } @sample_iterator_next(i56* %indices, i16 %i_index_load, i16 %i_sample_load)


 <State 6>: 5.03ns
ST_6: call_ret [1/2] 3.93ns
:4  %call_ret = call fastcc { i16, i16 } @sample_iterator_next(i56* %indices, i16 %i_index_load, i16 %i_sample_load)

ST_6: i_index_2 [1/1] 0.00ns
:5  %i_index_2 = extractvalue { i16, i16 } %call_ret, 0

ST_6: i_sample_2 [1/1] 0.00ns
:6  %i_sample_2 = extractvalue { i16, i16 } %call_ret, 1

ST_6: stg_100 [1/1] 1.10ns
:7  store i16 %i_sample_2, i16* %i_sample, align 2

ST_6: stg_101 [1/1] 1.10ns
:8  store i16 %i_index_2, i16* %i_index, align 2

ST_6: stg_102 [1/1] 0.00ns
:9  br label %1


 <State 7>: 1.87ns
ST_7: finished_2 [1/1] 0.00ns
.loopexit:0  %finished_2 = phi i1 [ %finished_1, %1 ], [ %finished_3, %2 ]

ST_7: stop_on_first_meet [1/2] 0.00ns
.loopexit:1  %stop_on_first_meet = call fastcc i1 @nfa_accept_sample_multi(i64* %nfa_initials_buckets, i64* %nfa_finals_buckets, i32* %nfa_forward_buckets, i8* %nfa_symbols, i8* %sample_buffer, i16 %sample_length_read, [16 x i32]* %start_indices, i1 %stop_on_first_read, i1 %accept_read, i5 %indvars_iv, [16 x i1]* %result)

ST_7: brmerge_demorgan [1/1] 0.77ns
.loopexit:2  %brmerge_demorgan = and i1 %stop_on_first_meet, %stop_on_first_read

ST_7: stg_106 [1/1] 1.10ns
.loopexit:3  br i1 %brmerge_demorgan, label %.loopexit8, label %.preheader


 <State 8>: 2.39ns
ST_8: k_1 [1/1] 0.00ns
.preheader:0  %k_1 = phi i5 [ %k_2, %4 ], [ 0, %.loopexit ]

ST_8: exitcond [1/1] 1.44ns
.preheader:1  %exitcond = icmp eq i5 %k_1, %indvars_iv

ST_8: stg_109 [1/1] 0.00ns
.preheader:2  call void (...)* @_ssdm_op_SpecLoopTripCount(i64 0, i64 16, i64 0)

ST_8: k_2 [1/1] 1.51ns
.preheader:3  %k_2 = add i5 %k_1, 1

ST_8: stg_111 [1/1] 0.00ns
.preheader:4  br i1 %exitcond, label %5, label %4

ST_8: tmp_2 [1/1] 0.00ns
:1  %tmp_2 = zext i5 %k_1 to i64

ST_8: result_addr [1/1] 0.00ns
:2  %result_addr = getelementptr inbounds [16 x i1]* %result, i64 0, i64 %tmp_2

ST_8: result_load [2/2] 2.39ns
:3  %result_load = load i1* %result_addr, align 1

ST_8: empty [1/1] 0.00ns
:0  %empty = call i32 (...)* @_ssdm_op_SpecRegionEnd([12 x i8]* @p_str41, i32 %tmp)

ST_8: stg_116 [1/1] 0.00ns
:1  br i1 %finished_2, label %6, label %._crit_edge

ST_8: c_load_1 [1/1] 0.00ns
:0  %c_load_1 = load i16* %c, align 2

ST_8: tmp_3_cast [1/1] 0.00ns
:1  %tmp_3_cast = zext i1 %stop_on_first_meet to i16

ST_8: tmp_5 [1/1] 0.77ns
:2  %tmp_5 = select i1 %stop_on_first_read, i16 %tmp_3_cast, i16 %c_load_1

ST_8: stg_120 [1/1] 1.10ns
:3  br label %.loopexit8


 <State 9>: 4.26ns
ST_9: c_load [1/1] 0.00ns
:0  %c_load = load i16* %c, align 2

ST_9: result_load [1/2] 2.39ns
:3  %result_load = load i1* %result_addr, align 1

ST_9: c_1 [1/1] 1.69ns
:4  %c_1 = add i16 %c_load, 1

ST_9: p_c_1 [1/1] 0.77ns
:5  %p_c_1 = select i1 %result_load, i16 %c_1, i16 %c_load

ST_9: stg_125 [1/1] 1.10ns
:6  store i16 %p_c_1, i16* %c, align 2

ST_9: stg_126 [1/1] 0.00ns
:7  br label %.preheader


 <State 10>: 0.00ns
ST_10: p_0 [1/1] 0.00ns
.loopexit8:0  %p_0 = phi i16 [ %tmp_5, %6 ], [ 1, %.loopexit ]

ST_10: p_0_cast [1/1] 0.00ns
.loopexit8:1  %p_0_cast = zext i16 %p_0 to i32

ST_10: stg_129 [1/1] 0.00ns
.loopexit8:2  ret i32 %p_0_cast



============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7
	State 8
	State 9
	State 10


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
