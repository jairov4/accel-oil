# ==============================================================
# File generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
# Version: 2013.4
# Copyright (C) 2013 Xilinx Inc. All rights reserved.
# 
# ==============================================================

set ::env(PATH) "$::env(PATH);C:/Programas/Xilinx/Vivado_HLS/2013.4/win64/tools/fpo_v7_0"
set ::env(PATH) "$::env(PATH);C:/Programas/Xilinx/Vivado_HLS/2013.4/win64/tools/opencv"
set ::env(PATH) "$::env(PATH);C:/Programas/Xilinx/Vivado_HLS/2013.4/win64/tools/fft_v9_0"
set ::env(PATH) "$::env(PATH);C:/Programas/Xilinx/Vivado_HLS/2013.4/win64/tools/fir_v7_0"
source check_sim.tcl
### test vector generation ###
puts "@I \[SIM-302\] Generating test vectors ... "
cd ../wrapc
file delete -force  "err.log"
if {![file exists cosim.tv.exe]} {
    puts "@E \[SIM-320\] Generating test vectors failed. Please re-run cosim."
    return -code error -errorcode $::errorCode
}
set ret [catch {eval exec ./cosim.tv.exe | tee temp0.log >&@ stdout} err]
if {$ret == 1} {
    puts "@E \[SIM-320\] Generating test vectors failed. Please re-run cosim."
    return -code error -errorcode $::errorCode
}
if {[file isfile nfa_accept_samples_generic_hw.autotvin.dat]} {
    file delete -force nfa_accept_samples_generic_hw.autotvin.dat
}
if {[file isfile nfa_accept_samples_generic_hw.autotvout.dat]} {
    file delete -force nfa_accept_samples_generic_hw.autotvout.dat
}
sc_sim_check $ret $err "temp0.log"
cd ../tv/cdatafile
set ret [check_tvin_file]
if {$ret == 1} {
    puts "@E \[SIM-344\] Rtl simulation failed."
    return -code error -errorcode $::errorCode
}
cd ../
### vhdl simulation ###
puts "@I \[SIM-322\] Starting VHDL simulation..."
puts "@I \[SIM-15\] Starting Modelsim ..."
cd ../vhdl
file delete -force ".exit.err"
file delete -force ".aesl_error"
file delete -force "err.log"
if {[file isfile compile_modelsim.sh]} {
   catch {eval exec sh ./compile_modelsim.sh >&@ stdout} err
   if {$err != ""} {
       puts "@E \[SIM-306\] Failed in preprocessing test bench: $err"
       return -code error -errorcode $::errorCode
   }
}
set ret [catch {eval exec "vsim -c -do cosim.modelsim.scr | tee temp2.log" >@ stdout} err]
cd ../tv/rtldatafile
set ret [check_tvout_file]
if {$ret == 1} {
    puts "@E \[SIM-344\] Rtl simulation failed."
    return -code error -errorcode $::errorCode
}
cd ../../wrapc_pc
puts "@I \[SIM-316\] Starting C post checking ..."
if {! [file exists cosim.pc.exe] } {
    puts "@E \[SIM-320\] Generating test vectors failed. Please re-run cosim."
    return -code error -errorcode $::errorCode
}
set ret [catch {eval exec ./cosim.pc.exe | tee temp0.log >&@ stdout} err]
sc_sim_check $ret $err "temp3.log"

