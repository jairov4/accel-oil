// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2013.4
// Copyright (C) 2013 Xilinx Inc. All rights reserved.
// 
// ===========================================================

#include "nfa_accept_sample.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic nfa_accept_sample::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic nfa_accept_sample::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<6> nfa_accept_sample::ap_ST_st1_fsm_0 = "000000";
const sc_lv<6> nfa_accept_sample::ap_ST_st2_fsm_1 = "1";
const sc_lv<6> nfa_accept_sample::ap_ST_st3_fsm_2 = "10";
const sc_lv<6> nfa_accept_sample::ap_ST_st4_fsm_3 = "11";
const sc_lv<6> nfa_accept_sample::ap_ST_st5_fsm_4 = "100";
const sc_lv<6> nfa_accept_sample::ap_ST_st6_fsm_5 = "101";
const sc_lv<6> nfa_accept_sample::ap_ST_st7_fsm_6 = "110";
const sc_lv<6> nfa_accept_sample::ap_ST_st8_fsm_7 = "111";
const sc_lv<6> nfa_accept_sample::ap_ST_st9_fsm_8 = "1000";
const sc_lv<6> nfa_accept_sample::ap_ST_st10_fsm_9 = "1001";
const sc_lv<6> nfa_accept_sample::ap_ST_st11_fsm_10 = "1010";
const sc_lv<6> nfa_accept_sample::ap_ST_st12_fsm_11 = "1011";
const sc_lv<6> nfa_accept_sample::ap_ST_st13_fsm_12 = "1100";
const sc_lv<6> nfa_accept_sample::ap_ST_st14_fsm_13 = "1101";
const sc_lv<6> nfa_accept_sample::ap_ST_st15_fsm_14 = "1110";
const sc_lv<6> nfa_accept_sample::ap_ST_st16_fsm_15 = "1111";
const sc_lv<6> nfa_accept_sample::ap_ST_st17_fsm_16 = "10000";
const sc_lv<6> nfa_accept_sample::ap_ST_st18_fsm_17 = "10001";
const sc_lv<6> nfa_accept_sample::ap_ST_st19_fsm_18 = "10010";
const sc_lv<6> nfa_accept_sample::ap_ST_st20_fsm_19 = "10011";
const sc_lv<6> nfa_accept_sample::ap_ST_st21_fsm_20 = "10100";
const sc_lv<6> nfa_accept_sample::ap_ST_st22_fsm_21 = "10101";
const sc_lv<6> nfa_accept_sample::ap_ST_st23_fsm_22 = "10110";
const sc_lv<6> nfa_accept_sample::ap_ST_st24_fsm_23 = "10111";
const sc_lv<6> nfa_accept_sample::ap_ST_st25_fsm_24 = "11000";
const sc_lv<6> nfa_accept_sample::ap_ST_st26_fsm_25 = "11001";
const sc_lv<6> nfa_accept_sample::ap_ST_st27_fsm_26 = "11010";
const sc_lv<6> nfa_accept_sample::ap_ST_st28_fsm_27 = "11011";
const sc_lv<6> nfa_accept_sample::ap_ST_st29_fsm_28 = "11100";
const sc_lv<6> nfa_accept_sample::ap_ST_st30_fsm_29 = "11101";
const sc_lv<6> nfa_accept_sample::ap_ST_st31_fsm_30 = "11110";
const sc_lv<6> nfa_accept_sample::ap_ST_st32_fsm_31 = "11111";
const sc_lv<6> nfa_accept_sample::ap_ST_st33_fsm_32 = "100000";
const sc_lv<6> nfa_accept_sample::ap_ST_st34_fsm_33 = "100001";
const sc_lv<6> nfa_accept_sample::ap_ST_st35_fsm_34 = "100010";
const sc_lv<6> nfa_accept_sample::ap_ST_st36_fsm_35 = "100011";
const sc_lv<6> nfa_accept_sample::ap_ST_st37_fsm_36 = "100100";
const sc_lv<6> nfa_accept_sample::ap_ST_st38_fsm_37 = "100101";
const sc_lv<6> nfa_accept_sample::ap_ST_st39_fsm_38 = "100110";
const sc_lv<6> nfa_accept_sample::ap_ST_st40_fsm_39 = "100111";
const sc_lv<6> nfa_accept_sample::ap_ST_st41_fsm_40 = "101000";
const sc_lv<6> nfa_accept_sample::ap_ST_st42_fsm_41 = "101001";
const sc_lv<6> nfa_accept_sample::ap_ST_st43_fsm_42 = "101010";
const sc_lv<1> nfa_accept_sample::ap_const_lv1_0 = "0";
const sc_lv<16> nfa_accept_sample::ap_const_lv16_0 = "0000000000000000";
const sc_lv<64> nfa_accept_sample::ap_const_lv64_0 = "0000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<1> nfa_accept_sample::ap_const_lv1_1 = "1";
const sc_lv<32> nfa_accept_sample::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<2> nfa_accept_sample::ap_const_lv2_2 = "10";
const sc_lv<32> nfa_accept_sample::ap_const_lv32_1 = "1";
const sc_lv<16> nfa_accept_sample::ap_const_lv16_1 = "1";
const sc_lv<64> nfa_accept_sample::ap_const_lv64_1 = "1";
const sc_lv<5> nfa_accept_sample::ap_const_lv5_0 = "00000";
const sc_lv<8> nfa_accept_sample::ap_const_lv8_0 = "00000000";

nfa_accept_sample::nfa_accept_sample(sc_module_name name) : sc_module(name), mVcdFile(0) {
    grp_bitset_next_fu_347 = new bitset_next("grp_bitset_next_fu_347");
    grp_bitset_next_fu_347->ap_clk(ap_clk);
    grp_bitset_next_fu_347->ap_rst(ap_rst);
    grp_bitset_next_fu_347->p_read(grp_bitset_next_fu_347_p_read);
    grp_bitset_next_fu_347->r_bit(grp_bitset_next_fu_347_r_bit);
    grp_bitset_next_fu_347->r_bucket_index(grp_bitset_next_fu_347_r_bucket_index);
    grp_bitset_next_fu_347->r_bucket(grp_bitset_next_fu_347_r_bucket);
    grp_bitset_next_fu_347->ap_return_0(grp_bitset_next_fu_347_ap_return_0);
    grp_bitset_next_fu_347->ap_return_1(grp_bitset_next_fu_347_ap_return_1);
    grp_bitset_next_fu_347->ap_return_2(grp_bitset_next_fu_347_ap_return_2);
    grp_bitset_next_fu_347->ap_return_3(grp_bitset_next_fu_347_ap_return_3);
    grp_bitset_next_fu_347->ap_ce(grp_bitset_next_fu_347_ap_ce);
    grp_nfa_get_initials_fu_359 = new nfa_get_initials("grp_nfa_get_initials_fu_359");
    grp_nfa_get_initials_fu_359->ap_clk(ap_clk);
    grp_nfa_get_initials_fu_359->ap_rst(ap_rst);
    grp_nfa_get_initials_fu_359->ap_start(grp_nfa_get_initials_fu_359_ap_start);
    grp_nfa_get_initials_fu_359->ap_done(grp_nfa_get_initials_fu_359_ap_done);
    grp_nfa_get_initials_fu_359->ap_idle(grp_nfa_get_initials_fu_359_ap_idle);
    grp_nfa_get_initials_fu_359->ap_ready(grp_nfa_get_initials_fu_359_ap_ready);
    grp_nfa_get_initials_fu_359->nfa_initials_buckets_req_din(grp_nfa_get_initials_fu_359_nfa_initials_buckets_req_din);
    grp_nfa_get_initials_fu_359->nfa_initials_buckets_req_full_n(grp_nfa_get_initials_fu_359_nfa_initials_buckets_req_full_n);
    grp_nfa_get_initials_fu_359->nfa_initials_buckets_req_write(grp_nfa_get_initials_fu_359_nfa_initials_buckets_req_write);
    grp_nfa_get_initials_fu_359->nfa_initials_buckets_rsp_empty_n(grp_nfa_get_initials_fu_359_nfa_initials_buckets_rsp_empty_n);
    grp_nfa_get_initials_fu_359->nfa_initials_buckets_rsp_read(grp_nfa_get_initials_fu_359_nfa_initials_buckets_rsp_read);
    grp_nfa_get_initials_fu_359->nfa_initials_buckets_address(grp_nfa_get_initials_fu_359_nfa_initials_buckets_address);
    grp_nfa_get_initials_fu_359->nfa_initials_buckets_datain(grp_nfa_get_initials_fu_359_nfa_initials_buckets_datain);
    grp_nfa_get_initials_fu_359->nfa_initials_buckets_dataout(grp_nfa_get_initials_fu_359_nfa_initials_buckets_dataout);
    grp_nfa_get_initials_fu_359->nfa_initials_buckets_size(grp_nfa_get_initials_fu_359_nfa_initials_buckets_size);
    grp_nfa_get_initials_fu_359->ap_ce(grp_nfa_get_initials_fu_359_ap_ce);
    grp_nfa_get_initials_fu_359->ap_return_0(grp_nfa_get_initials_fu_359_ap_return_0);
    grp_nfa_get_initials_fu_359->ap_return_1(grp_nfa_get_initials_fu_359_ap_return_1);
    grp_nfa_get_finals_fu_365 = new nfa_get_finals("grp_nfa_get_finals_fu_365");
    grp_nfa_get_finals_fu_365->ap_clk(ap_clk);
    grp_nfa_get_finals_fu_365->ap_rst(ap_rst);
    grp_nfa_get_finals_fu_365->ap_start(grp_nfa_get_finals_fu_365_ap_start);
    grp_nfa_get_finals_fu_365->ap_done(grp_nfa_get_finals_fu_365_ap_done);
    grp_nfa_get_finals_fu_365->ap_idle(grp_nfa_get_finals_fu_365_ap_idle);
    grp_nfa_get_finals_fu_365->ap_ready(grp_nfa_get_finals_fu_365_ap_ready);
    grp_nfa_get_finals_fu_365->nfa_finals_buckets_req_din(grp_nfa_get_finals_fu_365_nfa_finals_buckets_req_din);
    grp_nfa_get_finals_fu_365->nfa_finals_buckets_req_full_n(grp_nfa_get_finals_fu_365_nfa_finals_buckets_req_full_n);
    grp_nfa_get_finals_fu_365->nfa_finals_buckets_req_write(grp_nfa_get_finals_fu_365_nfa_finals_buckets_req_write);
    grp_nfa_get_finals_fu_365->nfa_finals_buckets_rsp_empty_n(grp_nfa_get_finals_fu_365_nfa_finals_buckets_rsp_empty_n);
    grp_nfa_get_finals_fu_365->nfa_finals_buckets_rsp_read(grp_nfa_get_finals_fu_365_nfa_finals_buckets_rsp_read);
    grp_nfa_get_finals_fu_365->nfa_finals_buckets_address(grp_nfa_get_finals_fu_365_nfa_finals_buckets_address);
    grp_nfa_get_finals_fu_365->nfa_finals_buckets_datain(grp_nfa_get_finals_fu_365_nfa_finals_buckets_datain);
    grp_nfa_get_finals_fu_365->nfa_finals_buckets_dataout(grp_nfa_get_finals_fu_365_nfa_finals_buckets_dataout);
    grp_nfa_get_finals_fu_365->nfa_finals_buckets_size(grp_nfa_get_finals_fu_365_nfa_finals_buckets_size);
    grp_nfa_get_finals_fu_365->ap_ce(grp_nfa_get_finals_fu_365_ap_ce);
    grp_nfa_get_finals_fu_365->ap_return_0(grp_nfa_get_finals_fu_365_ap_return_0);
    grp_nfa_get_finals_fu_365->ap_return_1(grp_nfa_get_finals_fu_365_ap_return_1);
    grp_p_bsf32_hw_fu_371 = new p_bsf32_hw("grp_p_bsf32_hw_fu_371");
    grp_p_bsf32_hw_fu_371->ap_clk(ap_clk);
    grp_p_bsf32_hw_fu_371->ap_rst(ap_rst);
    grp_p_bsf32_hw_fu_371->bus_r(grp_p_bsf32_hw_fu_371_bus_r);
    grp_p_bsf32_hw_fu_371->ap_return(grp_p_bsf32_hw_fu_371_ap_return);
    grp_p_bsf32_hw_fu_371->ap_ce(grp_p_bsf32_hw_fu_371_ap_ce);
    nfa_accept_samples_generic_hw_add_64ns_64ns_64_2_U15 = new nfa_accept_samples_generic_hw_add_64ns_64ns_64_2<15,2,64,64,64>("nfa_accept_samples_generic_hw_add_64ns_64ns_64_2_U15");
    nfa_accept_samples_generic_hw_add_64ns_64ns_64_2_U15->clk(ap_clk);
    nfa_accept_samples_generic_hw_add_64ns_64ns_64_2_U15->reset(ap_rst);
    nfa_accept_samples_generic_hw_add_64ns_64ns_64_2_U15->din0(grp_fu_399_p0);
    nfa_accept_samples_generic_hw_add_64ns_64ns_64_2_U15->din1(grp_fu_399_p1);
    nfa_accept_samples_generic_hw_add_64ns_64ns_64_2_U15->ce(grp_fu_399_ce);
    nfa_accept_samples_generic_hw_add_64ns_64ns_64_2_U15->dout(grp_fu_399_p2);
    nfa_accept_samples_generic_hw_add_64ns_64ns_64_2_U16 = new nfa_accept_samples_generic_hw_add_64ns_64ns_64_2<16,2,64,64,64>("nfa_accept_samples_generic_hw_add_64ns_64ns_64_2_U16");
    nfa_accept_samples_generic_hw_add_64ns_64ns_64_2_U16->clk(ap_clk);
    nfa_accept_samples_generic_hw_add_64ns_64ns_64_2_U16->reset(ap_rst);
    nfa_accept_samples_generic_hw_add_64ns_64ns_64_2_U16->din0(grp_fu_421_p0);
    nfa_accept_samples_generic_hw_add_64ns_64ns_64_2_U16->din1(grp_fu_421_p1);
    nfa_accept_samples_generic_hw_add_64ns_64ns_64_2_U16->ce(grp_fu_421_ce);
    nfa_accept_samples_generic_hw_add_64ns_64ns_64_2_U16->dout(grp_fu_421_p2);
    nfa_accept_samples_generic_hw_mul_8ns_6ns_14_4_U17 = new nfa_accept_samples_generic_hw_mul_8ns_6ns_14_4<17,4,8,6,14>("nfa_accept_samples_generic_hw_mul_8ns_6ns_14_4_U17");
    nfa_accept_samples_generic_hw_mul_8ns_6ns_14_4_U17->clk(ap_clk);
    nfa_accept_samples_generic_hw_mul_8ns_6ns_14_4_U17->reset(ap_rst);
    nfa_accept_samples_generic_hw_mul_8ns_6ns_14_4_U17->din0(grp_fu_483_p0);
    nfa_accept_samples_generic_hw_mul_8ns_6ns_14_4_U17->din1(grp_fu_483_p1);
    nfa_accept_samples_generic_hw_mul_8ns_6ns_14_4_U17->ce(grp_fu_483_ce);
    nfa_accept_samples_generic_hw_mul_8ns_6ns_14_4_U17->dout(grp_fu_483_p2);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_agg_result_bucket_index_0_lcssa4_i_cast_cast_fu_439_p1);
    sensitive << ( agg_result_bucket_index_0_lcssa4_i_reg_193 );

    SC_METHOD(thread_any_phi_fu_327_p4);
    sensitive << ( any_reg_322 );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_return);
    sensitive << ( ap_CS_fsm );
    sensitive << ( p_0_reg_335 );
    sensitive << ( ap_return_preg );

    SC_METHOD(thread_current_buckets_0_1_fu_566_p2);
    sensitive << ( tmp_buckets_0_reg_728 );
    sensitive << ( next_buckets_0_reg_171 );

    SC_METHOD(thread_current_buckets_1_1_fu_571_p2);
    sensitive << ( tmp_buckets_1_reg_733 );
    sensitive << ( next_buckets_1_reg_161 );

    SC_METHOD(thread_grp_bitset_next_fu_347_ap_ce);
    sensitive << ( ap_CS_fsm );
    sensitive << ( j_end_phi_fu_315_p4 );

    SC_METHOD(thread_grp_bitset_next_fu_347_p_read);
    sensitive << ( ap_CS_fsm );
    sensitive << ( j_end_phi_fu_315_p4 );
    sensitive << ( next_buckets_1_reg_161 );

    SC_METHOD(thread_grp_bitset_next_fu_347_r_bit);
    sensitive << ( ap_CS_fsm );
    sensitive << ( j_end_phi_fu_315_p4 );
    sensitive << ( j_bit1_reg_302 );

    SC_METHOD(thread_grp_bitset_next_fu_347_r_bucket);
    sensitive << ( ap_CS_fsm );
    sensitive << ( j_end_phi_fu_315_p4 );
    sensitive << ( j_bucket1_reg_281 );

    SC_METHOD(thread_grp_bitset_next_fu_347_r_bucket_index);
    sensitive << ( ap_CS_fsm );
    sensitive << ( j_end_phi_fu_315_p4 );
    sensitive << ( j_bucket_index1_reg_292 );

    SC_METHOD(thread_grp_fu_399_ce);

    SC_METHOD(thread_grp_fu_399_p0);
    sensitive << ( ap_CS_fsm );
    sensitive << ( p_01_rec_reg_149 );

    SC_METHOD(thread_grp_fu_399_p1);
    sensitive << ( ap_CS_fsm );
    sensitive << ( tmp_14_cast_reg_602 );

    SC_METHOD(thread_grp_fu_421_ce);

    SC_METHOD(thread_grp_fu_421_p0);
    sensitive << ( ap_CS_fsm );
    sensitive << ( p_01_rec_reg_149 );

    SC_METHOD(thread_grp_fu_421_p1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_grp_fu_483_ce);

    SC_METHOD(thread_grp_fu_483_p0);
    sensitive << ( ap_CS_fsm );
    sensitive << ( grp_fu_483_p00 );

    SC_METHOD(thread_grp_fu_483_p00);
    sensitive << ( nfa_symbols );

    SC_METHOD(thread_grp_fu_483_p1);
    sensitive << ( ap_CS_fsm );
    sensitive << ( grp_fu_483_p10 );

    SC_METHOD(thread_grp_fu_483_p10);
    sensitive << ( state_reg_665 );

    SC_METHOD(thread_grp_nfa_get_finals_fu_365_ap_ce);

    SC_METHOD(thread_grp_nfa_get_finals_fu_365_ap_start);
    sensitive << ( grp_nfa_get_finals_fu_365_ap_start_ap_start_reg );

    SC_METHOD(thread_grp_nfa_get_finals_fu_365_nfa_finals_buckets_datain);
    sensitive << ( ap_CS_fsm );
    sensitive << ( nfa_finals_buckets_datain );
    sensitive << ( tmp_s_reg_607 );

    SC_METHOD(thread_grp_nfa_get_finals_fu_365_nfa_finals_buckets_req_full_n);
    sensitive << ( ap_CS_fsm );
    sensitive << ( nfa_finals_buckets_req_full_n );
    sensitive << ( tmp_s_reg_607 );

    SC_METHOD(thread_grp_nfa_get_finals_fu_365_nfa_finals_buckets_rsp_empty_n);
    sensitive << ( ap_CS_fsm );
    sensitive << ( nfa_finals_buckets_rsp_empty_n );
    sensitive << ( tmp_s_reg_607 );

    SC_METHOD(thread_grp_nfa_get_initials_fu_359_ap_ce);

    SC_METHOD(thread_grp_nfa_get_initials_fu_359_ap_start);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_grp_nfa_get_initials_fu_359_nfa_initials_buckets_datain);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( nfa_initials_buckets_datain );

    SC_METHOD(thread_grp_nfa_get_initials_fu_359_nfa_initials_buckets_req_full_n);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( nfa_initials_buckets_req_full_n );

    SC_METHOD(thread_grp_nfa_get_initials_fu_359_nfa_initials_buckets_rsp_empty_n);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( nfa_initials_buckets_rsp_empty_n );

    SC_METHOD(thread_grp_p_bsf32_hw_fu_371_ap_ce);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_grp_p_bsf32_hw_fu_371_bus_r);
    sensitive << ( ap_CS_fsm );
    sensitive << ( bus_assign_reg_181 );

    SC_METHOD(thread_i_1_fu_409_p2);
    sensitive << ( i_reg_138 );

    SC_METHOD(thread_j_bit1_ph_cast_fu_447_p1);
    sensitive << ( j_bit1_ph_reg_230 );

    SC_METHOD(thread_j_bucket_index1_ph_cast_fu_443_p1);
    sensitive << ( j_bucket_index1_ph_reg_219 );

    SC_METHOD(thread_j_end_phi_fu_315_p4);
    sensitive << ( j_end_reg_312 );

    SC_METHOD(thread_next_buckets_0_1_fu_546_p2);
    sensitive << ( reg_377 );
    sensitive << ( tmp_buckets_0_3_reg_268 );

    SC_METHOD(thread_next_buckets_1_1_fu_552_p2);
    sensitive << ( reg_377 );
    sensitive << ( tmp_buckets_1_3_reg_255 );

    SC_METHOD(thread_nfa_finals_buckets_address);
    sensitive << ( ap_CS_fsm );
    sensitive << ( tmp_s_reg_607 );
    sensitive << ( grp_nfa_get_finals_fu_365_nfa_finals_buckets_address );

    SC_METHOD(thread_nfa_finals_buckets_dataout);
    sensitive << ( ap_CS_fsm );
    sensitive << ( tmp_s_reg_607 );
    sensitive << ( grp_nfa_get_finals_fu_365_nfa_finals_buckets_dataout );

    SC_METHOD(thread_nfa_finals_buckets_req_din);
    sensitive << ( ap_CS_fsm );
    sensitive << ( tmp_s_reg_607 );
    sensitive << ( grp_nfa_get_finals_fu_365_nfa_finals_buckets_req_din );

    SC_METHOD(thread_nfa_finals_buckets_req_write);
    sensitive << ( ap_CS_fsm );
    sensitive << ( tmp_s_reg_607 );
    sensitive << ( grp_nfa_get_finals_fu_365_nfa_finals_buckets_req_write );

    SC_METHOD(thread_nfa_finals_buckets_rsp_read);
    sensitive << ( ap_CS_fsm );
    sensitive << ( tmp_s_reg_607 );
    sensitive << ( grp_nfa_get_finals_fu_365_nfa_finals_buckets_rsp_read );

    SC_METHOD(thread_nfa_finals_buckets_size);
    sensitive << ( ap_CS_fsm );
    sensitive << ( tmp_s_reg_607 );
    sensitive << ( grp_nfa_get_finals_fu_365_nfa_finals_buckets_size );

    SC_METHOD(thread_nfa_forward_buckets_address);
    sensitive << ( ap_CS_fsm );
    sensitive << ( tmp_4_i_cast_fu_517_p1 );
    sensitive << ( tmp_9_i_cast_fu_535_p1 );

    SC_METHOD(thread_nfa_forward_buckets_dataout);

    SC_METHOD(thread_nfa_forward_buckets_req_din);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_nfa_forward_buckets_req_write);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_nfa_forward_buckets_rsp_read);
    sensitive << ( ap_CS_fsm );
    sensitive << ( nfa_forward_buckets_rsp_empty_n );

    SC_METHOD(thread_nfa_forward_buckets_size);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_nfa_initials_buckets_address);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( grp_nfa_get_initials_fu_359_nfa_initials_buckets_address );

    SC_METHOD(thread_nfa_initials_buckets_dataout);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( grp_nfa_get_initials_fu_359_nfa_initials_buckets_dataout );

    SC_METHOD(thread_nfa_initials_buckets_req_din);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( grp_nfa_get_initials_fu_359_nfa_initials_buckets_req_din );

    SC_METHOD(thread_nfa_initials_buckets_req_write);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( grp_nfa_get_initials_fu_359_nfa_initials_buckets_req_write );

    SC_METHOD(thread_nfa_initials_buckets_rsp_read);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( grp_nfa_get_initials_fu_359_nfa_initials_buckets_rsp_read );

    SC_METHOD(thread_nfa_initials_buckets_size);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( grp_nfa_get_initials_fu_359_nfa_initials_buckets_size );

    SC_METHOD(thread_sample_address);
    sensitive << ( ap_CS_fsm );
    sensitive << ( sample_addr_1_reg_616 );

    SC_METHOD(thread_sample_dataout);

    SC_METHOD(thread_sample_req_din);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_sample_req_write);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_sample_rsp_read);
    sensitive << ( ap_CS_fsm );
    sensitive << ( sample_rsp_empty_n );

    SC_METHOD(thread_sample_size);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_state_fu_470_p2);
    sensitive << ( tmp_i_fu_458_p3 );
    sensitive << ( tmp_32_fu_466_p1 );

    SC_METHOD(thread_tmp_14_cast_fu_389_p1);
    sensitive << ( tmp_14 );

    SC_METHOD(thread_tmp_19_1_i_fu_433_p2);
    sensitive << ( ap_CS_fsm );
    sensitive << ( sample_rsp_empty_n );
    sensitive << ( tmp_19_i_reg_627 );
    sensitive << ( next_buckets_1_reg_161 );

    SC_METHOD(thread_tmp_19_i_fu_427_p2);
    sensitive << ( ap_CS_fsm );
    sensitive << ( next_buckets_0_reg_171 );

    SC_METHOD(thread_tmp_1_fu_576_p2);
    sensitive << ( current_buckets_1_1_fu_571_p2 );
    sensitive << ( current_buckets_0_1_fu_566_p2 );

    SC_METHOD(thread_tmp_2_fu_582_p2);
    sensitive << ( ap_CS_fsm );
    sensitive << ( tmp_1_reg_738 );

    SC_METHOD(thread_tmp_31_fu_454_p1);
    sensitive << ( j_bucket_index1_reg_292 );

    SC_METHOD(thread_tmp_32_fu_466_p1);
    sensitive << ( j_bit1_reg_302 );

    SC_METHOD(thread_tmp_4_i_cast_fu_517_p1);
    sensitive << ( tmp_4_i_fu_510_p3 );

    SC_METHOD(thread_tmp_4_i_fu_510_p3);
    sensitive << ( tmp_8_i_reg_700 );

    SC_METHOD(thread_tmp_7_i_cast_fu_451_p1);
    sensitive << ( sym_reg_631 );

    SC_METHOD(thread_tmp_8_i_fu_505_p2);
    sensitive << ( tmp_7_i_cast_reg_660 );
    sensitive << ( grp_fu_483_p2 );

    SC_METHOD(thread_tmp_9_i_cast_fu_535_p1);
    sensitive << ( tmp_9_i_fu_528_p3 );

    SC_METHOD(thread_tmp_9_i_fu_528_p3);
    sensitive << ( tmp_8_i_reg_700 );

    SC_METHOD(thread_tmp_i_fu_458_p3);
    sensitive << ( tmp_31_fu_454_p1 );

    SC_METHOD(thread_tmp_s_fu_404_p2);
    sensitive << ( ap_CS_fsm );
    sensitive << ( length_r );
    sensitive << ( i_reg_138 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( nfa_forward_buckets_rsp_empty_n );
    sensitive << ( sample_rsp_empty_n );
    sensitive << ( tmp_s_reg_607 );
    sensitive << ( tmp_19_i_reg_627 );
    sensitive << ( tmp_19_1_i_reg_636 );
    sensitive << ( j_end_phi_fu_315_p4 );
    sensitive << ( any_phi_fu_327_p4 );

    ap_CS_fsm = "000000";
    grp_nfa_get_finals_fu_365_ap_start_ap_start_reg = SC_LOGIC_0;
    ap_return_preg = "0";
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "nfa_accept_sample_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, nfa_initials_buckets_req_din, "(port)nfa_initials_buckets_req_din");
    sc_trace(mVcdFile, nfa_initials_buckets_req_full_n, "(port)nfa_initials_buckets_req_full_n");
    sc_trace(mVcdFile, nfa_initials_buckets_req_write, "(port)nfa_initials_buckets_req_write");
    sc_trace(mVcdFile, nfa_initials_buckets_rsp_empty_n, "(port)nfa_initials_buckets_rsp_empty_n");
    sc_trace(mVcdFile, nfa_initials_buckets_rsp_read, "(port)nfa_initials_buckets_rsp_read");
    sc_trace(mVcdFile, nfa_initials_buckets_address, "(port)nfa_initials_buckets_address");
    sc_trace(mVcdFile, nfa_initials_buckets_datain, "(port)nfa_initials_buckets_datain");
    sc_trace(mVcdFile, nfa_initials_buckets_dataout, "(port)nfa_initials_buckets_dataout");
    sc_trace(mVcdFile, nfa_initials_buckets_size, "(port)nfa_initials_buckets_size");
    sc_trace(mVcdFile, nfa_finals_buckets_req_din, "(port)nfa_finals_buckets_req_din");
    sc_trace(mVcdFile, nfa_finals_buckets_req_full_n, "(port)nfa_finals_buckets_req_full_n");
    sc_trace(mVcdFile, nfa_finals_buckets_req_write, "(port)nfa_finals_buckets_req_write");
    sc_trace(mVcdFile, nfa_finals_buckets_rsp_empty_n, "(port)nfa_finals_buckets_rsp_empty_n");
    sc_trace(mVcdFile, nfa_finals_buckets_rsp_read, "(port)nfa_finals_buckets_rsp_read");
    sc_trace(mVcdFile, nfa_finals_buckets_address, "(port)nfa_finals_buckets_address");
    sc_trace(mVcdFile, nfa_finals_buckets_datain, "(port)nfa_finals_buckets_datain");
    sc_trace(mVcdFile, nfa_finals_buckets_dataout, "(port)nfa_finals_buckets_dataout");
    sc_trace(mVcdFile, nfa_finals_buckets_size, "(port)nfa_finals_buckets_size");
    sc_trace(mVcdFile, nfa_forward_buckets_req_din, "(port)nfa_forward_buckets_req_din");
    sc_trace(mVcdFile, nfa_forward_buckets_req_full_n, "(port)nfa_forward_buckets_req_full_n");
    sc_trace(mVcdFile, nfa_forward_buckets_req_write, "(port)nfa_forward_buckets_req_write");
    sc_trace(mVcdFile, nfa_forward_buckets_rsp_empty_n, "(port)nfa_forward_buckets_rsp_empty_n");
    sc_trace(mVcdFile, nfa_forward_buckets_rsp_read, "(port)nfa_forward_buckets_rsp_read");
    sc_trace(mVcdFile, nfa_forward_buckets_address, "(port)nfa_forward_buckets_address");
    sc_trace(mVcdFile, nfa_forward_buckets_datain, "(port)nfa_forward_buckets_datain");
    sc_trace(mVcdFile, nfa_forward_buckets_dataout, "(port)nfa_forward_buckets_dataout");
    sc_trace(mVcdFile, nfa_forward_buckets_size, "(port)nfa_forward_buckets_size");
    sc_trace(mVcdFile, nfa_symbols, "(port)nfa_symbols");
    sc_trace(mVcdFile, sample_req_din, "(port)sample_req_din");
    sc_trace(mVcdFile, sample_req_full_n, "(port)sample_req_full_n");
    sc_trace(mVcdFile, sample_req_write, "(port)sample_req_write");
    sc_trace(mVcdFile, sample_rsp_empty_n, "(port)sample_rsp_empty_n");
    sc_trace(mVcdFile, sample_rsp_read, "(port)sample_rsp_read");
    sc_trace(mVcdFile, sample_address, "(port)sample_address");
    sc_trace(mVcdFile, sample_datain, "(port)sample_datain");
    sc_trace(mVcdFile, sample_dataout, "(port)sample_dataout");
    sc_trace(mVcdFile, sample_size, "(port)sample_size");
    sc_trace(mVcdFile, tmp_14, "(port)tmp_14");
    sc_trace(mVcdFile, length_r, "(port)length_r");
    sc_trace(mVcdFile, ap_return, "(port)ap_return");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, reg_377, "reg_377");
    sc_trace(mVcdFile, current_buckets_0_reg_587, "current_buckets_0_reg_587");
    sc_trace(mVcdFile, current_buckets_1_reg_592, "current_buckets_1_reg_592");
    sc_trace(mVcdFile, tmp_14_cast_fu_389_p1, "tmp_14_cast_fu_389_p1");
    sc_trace(mVcdFile, tmp_14_cast_reg_602, "tmp_14_cast_reg_602");
    sc_trace(mVcdFile, tmp_s_fu_404_p2, "tmp_s_fu_404_p2");
    sc_trace(mVcdFile, tmp_s_reg_607, "tmp_s_reg_607");
    sc_trace(mVcdFile, i_1_fu_409_p2, "i_1_fu_409_p2");
    sc_trace(mVcdFile, i_1_reg_611, "i_1_reg_611");
    sc_trace(mVcdFile, sample_addr_1_reg_616, "sample_addr_1_reg_616");
    sc_trace(mVcdFile, grp_fu_421_p2, "grp_fu_421_p2");
    sc_trace(mVcdFile, p_rec_reg_622, "p_rec_reg_622");
    sc_trace(mVcdFile, tmp_19_i_fu_427_p2, "tmp_19_i_fu_427_p2");
    sc_trace(mVcdFile, tmp_19_i_reg_627, "tmp_19_i_reg_627");
    sc_trace(mVcdFile, sym_reg_631, "sym_reg_631");
    sc_trace(mVcdFile, tmp_19_1_i_fu_433_p2, "tmp_19_1_i_fu_433_p2");
    sc_trace(mVcdFile, tmp_19_1_i_reg_636, "tmp_19_1_i_reg_636");
    sc_trace(mVcdFile, agg_result_bucket_index_0_lcssa4_i_cast_cast_fu_439_p1, "agg_result_bucket_index_0_lcssa4_i_cast_cast_fu_439_p1");
    sc_trace(mVcdFile, grp_p_bsf32_hw_fu_371_ap_return, "grp_p_bsf32_hw_fu_371_ap_return");
    sc_trace(mVcdFile, j_bucket_index1_ph_cast_fu_443_p1, "j_bucket_index1_ph_cast_fu_443_p1");
    sc_trace(mVcdFile, j_bit1_ph_cast_fu_447_p1, "j_bit1_ph_cast_fu_447_p1");
    sc_trace(mVcdFile, tmp_7_i_cast_fu_451_p1, "tmp_7_i_cast_fu_451_p1");
    sc_trace(mVcdFile, tmp_7_i_cast_reg_660, "tmp_7_i_cast_reg_660");
    sc_trace(mVcdFile, state_fu_470_p2, "state_fu_470_p2");
    sc_trace(mVcdFile, state_reg_665, "state_reg_665");
    sc_trace(mVcdFile, j_end_phi_fu_315_p4, "j_end_phi_fu_315_p4");
    sc_trace(mVcdFile, j_bit_reg_680, "j_bit_reg_680");
    sc_trace(mVcdFile, j_bucket_index_reg_685, "j_bucket_index_reg_685");
    sc_trace(mVcdFile, j_bucket_reg_690, "j_bucket_reg_690");
    sc_trace(mVcdFile, p_s_reg_695, "p_s_reg_695");
    sc_trace(mVcdFile, tmp_8_i_fu_505_p2, "tmp_8_i_fu_505_p2");
    sc_trace(mVcdFile, tmp_8_i_reg_700, "tmp_8_i_reg_700");
    sc_trace(mVcdFile, next_buckets_0_1_fu_546_p2, "next_buckets_0_1_fu_546_p2");
    sc_trace(mVcdFile, next_buckets_0_1_reg_718, "next_buckets_0_1_reg_718");
    sc_trace(mVcdFile, next_buckets_1_1_fu_552_p2, "next_buckets_1_1_fu_552_p2");
    sc_trace(mVcdFile, tmp_buckets_0_reg_728, "tmp_buckets_0_reg_728");
    sc_trace(mVcdFile, tmp_buckets_1_reg_733, "tmp_buckets_1_reg_733");
    sc_trace(mVcdFile, tmp_1_fu_576_p2, "tmp_1_fu_576_p2");
    sc_trace(mVcdFile, tmp_1_reg_738, "tmp_1_reg_738");
    sc_trace(mVcdFile, tmp_2_fu_582_p2, "tmp_2_fu_582_p2");
    sc_trace(mVcdFile, tmp_2_reg_743, "tmp_2_reg_743");
    sc_trace(mVcdFile, grp_bitset_next_fu_347_p_read, "grp_bitset_next_fu_347_p_read");
    sc_trace(mVcdFile, grp_bitset_next_fu_347_r_bit, "grp_bitset_next_fu_347_r_bit");
    sc_trace(mVcdFile, grp_bitset_next_fu_347_r_bucket_index, "grp_bitset_next_fu_347_r_bucket_index");
    sc_trace(mVcdFile, grp_bitset_next_fu_347_r_bucket, "grp_bitset_next_fu_347_r_bucket");
    sc_trace(mVcdFile, grp_bitset_next_fu_347_ap_return_0, "grp_bitset_next_fu_347_ap_return_0");
    sc_trace(mVcdFile, grp_bitset_next_fu_347_ap_return_1, "grp_bitset_next_fu_347_ap_return_1");
    sc_trace(mVcdFile, grp_bitset_next_fu_347_ap_return_2, "grp_bitset_next_fu_347_ap_return_2");
    sc_trace(mVcdFile, grp_bitset_next_fu_347_ap_return_3, "grp_bitset_next_fu_347_ap_return_3");
    sc_trace(mVcdFile, grp_bitset_next_fu_347_ap_ce, "grp_bitset_next_fu_347_ap_ce");
    sc_trace(mVcdFile, grp_nfa_get_initials_fu_359_ap_start, "grp_nfa_get_initials_fu_359_ap_start");
    sc_trace(mVcdFile, grp_nfa_get_initials_fu_359_ap_done, "grp_nfa_get_initials_fu_359_ap_done");
    sc_trace(mVcdFile, grp_nfa_get_initials_fu_359_ap_idle, "grp_nfa_get_initials_fu_359_ap_idle");
    sc_trace(mVcdFile, grp_nfa_get_initials_fu_359_ap_ready, "grp_nfa_get_initials_fu_359_ap_ready");
    sc_trace(mVcdFile, grp_nfa_get_initials_fu_359_nfa_initials_buckets_req_din, "grp_nfa_get_initials_fu_359_nfa_initials_buckets_req_din");
    sc_trace(mVcdFile, grp_nfa_get_initials_fu_359_nfa_initials_buckets_req_full_n, "grp_nfa_get_initials_fu_359_nfa_initials_buckets_req_full_n");
    sc_trace(mVcdFile, grp_nfa_get_initials_fu_359_nfa_initials_buckets_req_write, "grp_nfa_get_initials_fu_359_nfa_initials_buckets_req_write");
    sc_trace(mVcdFile, grp_nfa_get_initials_fu_359_nfa_initials_buckets_rsp_empty_n, "grp_nfa_get_initials_fu_359_nfa_initials_buckets_rsp_empty_n");
    sc_trace(mVcdFile, grp_nfa_get_initials_fu_359_nfa_initials_buckets_rsp_read, "grp_nfa_get_initials_fu_359_nfa_initials_buckets_rsp_read");
    sc_trace(mVcdFile, grp_nfa_get_initials_fu_359_nfa_initials_buckets_address, "grp_nfa_get_initials_fu_359_nfa_initials_buckets_address");
    sc_trace(mVcdFile, grp_nfa_get_initials_fu_359_nfa_initials_buckets_datain, "grp_nfa_get_initials_fu_359_nfa_initials_buckets_datain");
    sc_trace(mVcdFile, grp_nfa_get_initials_fu_359_nfa_initials_buckets_dataout, "grp_nfa_get_initials_fu_359_nfa_initials_buckets_dataout");
    sc_trace(mVcdFile, grp_nfa_get_initials_fu_359_nfa_initials_buckets_size, "grp_nfa_get_initials_fu_359_nfa_initials_buckets_size");
    sc_trace(mVcdFile, grp_nfa_get_initials_fu_359_ap_ce, "grp_nfa_get_initials_fu_359_ap_ce");
    sc_trace(mVcdFile, grp_nfa_get_initials_fu_359_ap_return_0, "grp_nfa_get_initials_fu_359_ap_return_0");
    sc_trace(mVcdFile, grp_nfa_get_initials_fu_359_ap_return_1, "grp_nfa_get_initials_fu_359_ap_return_1");
    sc_trace(mVcdFile, grp_nfa_get_finals_fu_365_ap_start, "grp_nfa_get_finals_fu_365_ap_start");
    sc_trace(mVcdFile, grp_nfa_get_finals_fu_365_ap_done, "grp_nfa_get_finals_fu_365_ap_done");
    sc_trace(mVcdFile, grp_nfa_get_finals_fu_365_ap_idle, "grp_nfa_get_finals_fu_365_ap_idle");
    sc_trace(mVcdFile, grp_nfa_get_finals_fu_365_ap_ready, "grp_nfa_get_finals_fu_365_ap_ready");
    sc_trace(mVcdFile, grp_nfa_get_finals_fu_365_nfa_finals_buckets_req_din, "grp_nfa_get_finals_fu_365_nfa_finals_buckets_req_din");
    sc_trace(mVcdFile, grp_nfa_get_finals_fu_365_nfa_finals_buckets_req_full_n, "grp_nfa_get_finals_fu_365_nfa_finals_buckets_req_full_n");
    sc_trace(mVcdFile, grp_nfa_get_finals_fu_365_nfa_finals_buckets_req_write, "grp_nfa_get_finals_fu_365_nfa_finals_buckets_req_write");
    sc_trace(mVcdFile, grp_nfa_get_finals_fu_365_nfa_finals_buckets_rsp_empty_n, "grp_nfa_get_finals_fu_365_nfa_finals_buckets_rsp_empty_n");
    sc_trace(mVcdFile, grp_nfa_get_finals_fu_365_nfa_finals_buckets_rsp_read, "grp_nfa_get_finals_fu_365_nfa_finals_buckets_rsp_read");
    sc_trace(mVcdFile, grp_nfa_get_finals_fu_365_nfa_finals_buckets_address, "grp_nfa_get_finals_fu_365_nfa_finals_buckets_address");
    sc_trace(mVcdFile, grp_nfa_get_finals_fu_365_nfa_finals_buckets_datain, "grp_nfa_get_finals_fu_365_nfa_finals_buckets_datain");
    sc_trace(mVcdFile, grp_nfa_get_finals_fu_365_nfa_finals_buckets_dataout, "grp_nfa_get_finals_fu_365_nfa_finals_buckets_dataout");
    sc_trace(mVcdFile, grp_nfa_get_finals_fu_365_nfa_finals_buckets_size, "grp_nfa_get_finals_fu_365_nfa_finals_buckets_size");
    sc_trace(mVcdFile, grp_nfa_get_finals_fu_365_ap_ce, "grp_nfa_get_finals_fu_365_ap_ce");
    sc_trace(mVcdFile, grp_nfa_get_finals_fu_365_ap_return_0, "grp_nfa_get_finals_fu_365_ap_return_0");
    sc_trace(mVcdFile, grp_nfa_get_finals_fu_365_ap_return_1, "grp_nfa_get_finals_fu_365_ap_return_1");
    sc_trace(mVcdFile, grp_p_bsf32_hw_fu_371_bus_r, "grp_p_bsf32_hw_fu_371_bus_r");
    sc_trace(mVcdFile, grp_p_bsf32_hw_fu_371_ap_ce, "grp_p_bsf32_hw_fu_371_ap_ce");
    sc_trace(mVcdFile, i_reg_138, "i_reg_138");
    sc_trace(mVcdFile, any_phi_fu_327_p4, "any_phi_fu_327_p4");
    sc_trace(mVcdFile, p_01_rec_reg_149, "p_01_rec_reg_149");
    sc_trace(mVcdFile, next_buckets_1_reg_161, "next_buckets_1_reg_161");
    sc_trace(mVcdFile, next_buckets_0_reg_171, "next_buckets_0_reg_171");
    sc_trace(mVcdFile, bus_assign_reg_181, "bus_assign_reg_181");
    sc_trace(mVcdFile, agg_result_bucket_index_0_lcssa4_i_reg_193, "agg_result_bucket_index_0_lcssa4_i_reg_193");
    sc_trace(mVcdFile, j_bucket1_ph_reg_206, "j_bucket1_ph_reg_206");
    sc_trace(mVcdFile, j_bucket_index1_ph_reg_219, "j_bucket_index1_ph_reg_219");
    sc_trace(mVcdFile, j_bit1_ph_reg_230, "j_bit1_ph_reg_230");
    sc_trace(mVcdFile, j_end_ph_reg_241, "j_end_ph_reg_241");
    sc_trace(mVcdFile, tmp_buckets_1_3_reg_255, "tmp_buckets_1_3_reg_255");
    sc_trace(mVcdFile, tmp_buckets_0_3_reg_268, "tmp_buckets_0_3_reg_268");
    sc_trace(mVcdFile, j_bucket1_reg_281, "j_bucket1_reg_281");
    sc_trace(mVcdFile, j_bucket_index1_reg_292, "j_bucket_index1_reg_292");
    sc_trace(mVcdFile, j_bit1_reg_302, "j_bit1_reg_302");
    sc_trace(mVcdFile, j_end_reg_312, "j_end_reg_312");
    sc_trace(mVcdFile, any_reg_322, "any_reg_322");
    sc_trace(mVcdFile, p_0_reg_335, "p_0_reg_335");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
    sc_trace(mVcdFile, grp_nfa_get_finals_fu_365_ap_start_ap_start_reg, "grp_nfa_get_finals_fu_365_ap_start_ap_start_reg");
    sc_trace(mVcdFile, grp_fu_399_p2, "grp_fu_399_p2");
    sc_trace(mVcdFile, tmp_4_i_cast_fu_517_p1, "tmp_4_i_cast_fu_517_p1");
    sc_trace(mVcdFile, tmp_9_i_cast_fu_535_p1, "tmp_9_i_cast_fu_535_p1");
    sc_trace(mVcdFile, grp_fu_399_p0, "grp_fu_399_p0");
    sc_trace(mVcdFile, grp_fu_399_p1, "grp_fu_399_p1");
    sc_trace(mVcdFile, grp_fu_421_p0, "grp_fu_421_p0");
    sc_trace(mVcdFile, grp_fu_421_p1, "grp_fu_421_p1");
    sc_trace(mVcdFile, tmp_31_fu_454_p1, "tmp_31_fu_454_p1");
    sc_trace(mVcdFile, tmp_i_fu_458_p3, "tmp_i_fu_458_p3");
    sc_trace(mVcdFile, tmp_32_fu_466_p1, "tmp_32_fu_466_p1");
    sc_trace(mVcdFile, grp_fu_483_p0, "grp_fu_483_p0");
    sc_trace(mVcdFile, grp_fu_483_p1, "grp_fu_483_p1");
    sc_trace(mVcdFile, grp_fu_483_p2, "grp_fu_483_p2");
    sc_trace(mVcdFile, tmp_4_i_fu_510_p3, "tmp_4_i_fu_510_p3");
    sc_trace(mVcdFile, tmp_9_i_fu_528_p3, "tmp_9_i_fu_528_p3");
    sc_trace(mVcdFile, current_buckets_1_1_fu_571_p2, "current_buckets_1_1_fu_571_p2");
    sc_trace(mVcdFile, current_buckets_0_1_fu_566_p2, "current_buckets_0_1_fu_566_p2");
    sc_trace(mVcdFile, grp_fu_399_ce, "grp_fu_399_ce");
    sc_trace(mVcdFile, grp_fu_421_ce, "grp_fu_421_ce");
    sc_trace(mVcdFile, grp_fu_483_ce, "grp_fu_483_ce");
    sc_trace(mVcdFile, ap_return_preg, "ap_return_preg");
    sc_trace(mVcdFile, grp_fu_483_p00, "grp_fu_483_p00");
    sc_trace(mVcdFile, grp_fu_483_p10, "grp_fu_483_p10");
#endif

    }
}

nfa_accept_sample::~nfa_accept_sample() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    delete grp_bitset_next_fu_347;
    delete grp_nfa_get_initials_fu_359;
    delete grp_nfa_get_finals_fu_365;
    delete grp_p_bsf32_hw_fu_371;
    delete nfa_accept_samples_generic_hw_add_64ns_64ns_64_2_U15;
    delete nfa_accept_samples_generic_hw_add_64ns_64ns_64_2_U16;
    delete nfa_accept_samples_generic_hw_mul_8ns_6ns_14_4_U17;
}

void nfa_accept_sample::thread_ap_clk_no_reset_() {
    if ((esl_seteq<1,6,6>(ap_ST_st17_fsm_16, ap_CS_fsm.read()) && 
         esl_seteq<1,1,1>(tmp_19_1_i_reg_636.read(), ap_const_lv1_0))) {
        agg_result_bucket_index_0_lcssa4_i_reg_193 = ap_const_lv1_1;
    } else if ((esl_seteq<1,6,6>(ap_ST_st16_fsm_15, ap_CS_fsm.read()) && 
                !esl_seteq<1,1,1>(sample_rsp_empty_n.read(), ap_const_logic_0) && 
                esl_seteq<1,1,1>(tmp_19_i_reg_627.read(), ap_const_lv1_0))) {
        agg_result_bucket_index_0_lcssa4_i_reg_193 = ap_const_lv1_0;
    }
    if (esl_seteq<1,6,6>(ap_ST_st20_fsm_19, ap_CS_fsm.read())) {
        any_reg_322 = ap_const_lv1_0;
    } else if (esl_seteq<1,6,6>(ap_ST_st33_fsm_32, ap_CS_fsm.read())) {
        any_reg_322 = ap_const_lv1_1;
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_st1_fsm_0;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_return_preg = ap_const_lv1_0;
    } else {
        if (esl_seteq<1,6,6>(ap_ST_st43_fsm_42, ap_CS_fsm.read())) {
            ap_return_preg = p_0_reg_335.read();
        }
    }
    if ((esl_seteq<1,6,6>(ap_ST_st17_fsm_16, ap_CS_fsm.read()) && 
         esl_seteq<1,1,1>(tmp_19_1_i_reg_636.read(), ap_const_lv1_0))) {
        bus_assign_reg_181 = next_buckets_1_reg_161.read();
    } else if ((esl_seteq<1,6,6>(ap_ST_st16_fsm_15, ap_CS_fsm.read()) && 
                !esl_seteq<1,1,1>(sample_rsp_empty_n.read(), ap_const_logic_0) && 
                esl_seteq<1,1,1>(tmp_19_i_reg_627.read(), ap_const_lv1_0))) {
        bus_assign_reg_181 = next_buckets_0_reg_171.read();
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        grp_nfa_get_finals_fu_365_ap_start_ap_start_reg = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,6,6>(ap_ST_st9_fsm_8, ap_CS_fsm.read()) && 
             esl_seteq<1,6,6>(ap_ST_st10_fsm_9, ap_NS_fsm.read()) && 
             esl_seteq<1,1,1>(tmp_s_fu_404_p2.read(), ap_const_lv1_0))) {
            grp_nfa_get_finals_fu_365_ap_start_ap_start_reg = ap_const_logic_1;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, grp_nfa_get_finals_fu_365_ap_ready.read())) {
            grp_nfa_get_finals_fu_365_ap_start_ap_start_reg = ap_const_logic_0;
        }
    }
    if ((esl_seteq<1,6,6>(ap_ST_st21_fsm_20, ap_CS_fsm.read()) && 
         !esl_seteq<1,1,1>(ap_const_lv1_0, j_end_phi_fu_315_p4.read()) && 
         !esl_seteq<1,1,1>(ap_const_lv1_0, any_phi_fu_327_p4.read()))) {
        i_reg_138 = i_1_reg_611.read();
    } else if (esl_seteq<1,6,6>(ap_ST_st8_fsm_7, ap_CS_fsm.read())) {
        i_reg_138 = ap_const_lv16_0;
    }
    if (esl_seteq<1,6,6>(ap_ST_st20_fsm_19, ap_CS_fsm.read())) {
        j_bit1_reg_302 = j_bit1_ph_cast_fu_447_p1.read();
    } else if (esl_seteq<1,6,6>(ap_ST_st33_fsm_32, ap_CS_fsm.read())) {
        j_bit1_reg_302 = j_bit_reg_680.read();
    }
    if (esl_seteq<1,6,6>(ap_ST_st19_fsm_18, ap_CS_fsm.read())) {
        j_bucket1_ph_reg_206 = bus_assign_reg_181.read();
    } else if ((esl_seteq<1,6,6>(ap_ST_st17_fsm_16, ap_CS_fsm.read()) && 
                !esl_seteq<1,1,1>(tmp_19_1_i_reg_636.read(), ap_const_lv1_0))) {
        j_bucket1_ph_reg_206 = ap_const_lv32_0;
    }
    if (esl_seteq<1,6,6>(ap_ST_st20_fsm_19, ap_CS_fsm.read())) {
        j_bucket1_reg_281 = j_bucket1_ph_reg_206.read();
    } else if (esl_seteq<1,6,6>(ap_ST_st33_fsm_32, ap_CS_fsm.read())) {
        j_bucket1_reg_281 = j_bucket_reg_690.read();
    }
    if (esl_seteq<1,6,6>(ap_ST_st19_fsm_18, ap_CS_fsm.read())) {
        j_bucket_index1_ph_reg_219 = agg_result_bucket_index_0_lcssa4_i_cast_cast_fu_439_p1.read();
    } else if ((esl_seteq<1,6,6>(ap_ST_st17_fsm_16, ap_CS_fsm.read()) && 
                !esl_seteq<1,1,1>(tmp_19_1_i_reg_636.read(), ap_const_lv1_0))) {
        j_bucket_index1_ph_reg_219 = ap_const_lv2_2;
    }
    if (esl_seteq<1,6,6>(ap_ST_st20_fsm_19, ap_CS_fsm.read())) {
        j_bucket_index1_reg_292 = j_bucket_index1_ph_cast_fu_443_p1.read();
    } else if (esl_seteq<1,6,6>(ap_ST_st33_fsm_32, ap_CS_fsm.read())) {
        j_bucket_index1_reg_292 = j_bucket_index_reg_685.read();
    }
    if (esl_seteq<1,6,6>(ap_ST_st19_fsm_18, ap_CS_fsm.read())) {
        j_end_ph_reg_241 = ap_const_lv1_0;
    } else if ((esl_seteq<1,6,6>(ap_ST_st17_fsm_16, ap_CS_fsm.read()) && 
                !esl_seteq<1,1,1>(tmp_19_1_i_reg_636.read(), ap_const_lv1_0))) {
        j_end_ph_reg_241 = ap_const_lv1_1;
    }
    if (esl_seteq<1,6,6>(ap_ST_st20_fsm_19, ap_CS_fsm.read())) {
        j_end_reg_312 = j_end_ph_reg_241.read();
    } else if (esl_seteq<1,6,6>(ap_ST_st33_fsm_32, ap_CS_fsm.read())) {
        j_end_reg_312 = p_s_reg_695.read();
    }
    if ((esl_seteq<1,6,6>(ap_ST_st21_fsm_20, ap_CS_fsm.read()) && 
         !esl_seteq<1,1,1>(ap_const_lv1_0, j_end_phi_fu_315_p4.read()) && 
         !esl_seteq<1,1,1>(ap_const_lv1_0, any_phi_fu_327_p4.read()))) {
        next_buckets_0_reg_171 = tmp_buckets_0_3_reg_268.read();
    } else if (esl_seteq<1,6,6>(ap_ST_st8_fsm_7, ap_CS_fsm.read())) {
        next_buckets_0_reg_171 = current_buckets_0_reg_587.read();
    }
    if ((esl_seteq<1,6,6>(ap_ST_st21_fsm_20, ap_CS_fsm.read()) && 
         !esl_seteq<1,1,1>(ap_const_lv1_0, j_end_phi_fu_315_p4.read()) && 
         !esl_seteq<1,1,1>(ap_const_lv1_0, any_phi_fu_327_p4.read()))) {
        next_buckets_1_reg_161 = tmp_buckets_1_3_reg_255.read();
    } else if (esl_seteq<1,6,6>(ap_ST_st8_fsm_7, ap_CS_fsm.read())) {
        next_buckets_1_reg_161 = current_buckets_1_reg_592.read();
    }
    if ((esl_seteq<1,6,6>(ap_ST_st21_fsm_20, ap_CS_fsm.read()) && 
         !esl_seteq<1,1,1>(ap_const_lv1_0, j_end_phi_fu_315_p4.read()) && 
         !esl_seteq<1,1,1>(ap_const_lv1_0, any_phi_fu_327_p4.read()))) {
        p_01_rec_reg_149 = p_rec_reg_622.read();
    } else if (esl_seteq<1,6,6>(ap_ST_st8_fsm_7, ap_CS_fsm.read())) {
        p_01_rec_reg_149 = ap_const_lv64_0;
    }
    if ((esl_seteq<1,6,6>(ap_ST_st21_fsm_20, ap_CS_fsm.read()) && 
         !esl_seteq<1,1,1>(ap_const_lv1_0, j_end_phi_fu_315_p4.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, any_phi_fu_327_p4.read()))) {
        p_0_reg_335 = ap_const_lv1_0;
    } else if (esl_seteq<1,6,6>(ap_ST_st42_fsm_41, ap_CS_fsm.read())) {
        p_0_reg_335 = tmp_2_reg_743.read();
    }
    if (esl_seteq<1,6,6>(ap_ST_st20_fsm_19, ap_CS_fsm.read())) {
        tmp_buckets_0_3_reg_268 = ap_const_lv32_0;
    } else if (esl_seteq<1,6,6>(ap_ST_st33_fsm_32, ap_CS_fsm.read())) {
        tmp_buckets_0_3_reg_268 = next_buckets_0_1_reg_718.read();
    }
    if (esl_seteq<1,6,6>(ap_ST_st20_fsm_19, ap_CS_fsm.read())) {
        tmp_buckets_1_3_reg_255 = ap_const_lv32_0;
    } else if (esl_seteq<1,6,6>(ap_ST_st33_fsm_32, ap_CS_fsm.read())) {
        tmp_buckets_1_3_reg_255 = next_buckets_1_1_fu_552_p2.read();
    }
    if (esl_seteq<1,6,6>(ap_ST_st7_fsm_6, ap_CS_fsm.read())) {
        current_buckets_0_reg_587 = grp_nfa_get_initials_fu_359_ap_return_0.read();
        current_buckets_1_reg_592 = grp_nfa_get_initials_fu_359_ap_return_1.read();
    }
    if (esl_seteq<1,6,6>(ap_ST_st9_fsm_8, ap_CS_fsm.read())) {
        i_1_reg_611 = i_1_fu_409_p2.read();
        tmp_s_reg_607 = tmp_s_fu_404_p2.read();
    }
    if (esl_seteq<1,6,6>(ap_ST_st19_fsm_18, ap_CS_fsm.read())) {
        j_bit1_ph_reg_230 = grp_p_bsf32_hw_fu_371_ap_return.read();
    }
    if (esl_seteq<1,6,6>(ap_ST_st24_fsm_23, ap_CS_fsm.read())) {
        j_bit_reg_680 = grp_bitset_next_fu_347_ap_return_0.read();
        j_bucket_index_reg_685 = grp_bitset_next_fu_347_ap_return_1.read();
        j_bucket_reg_690 = grp_bitset_next_fu_347_ap_return_2.read();
        p_s_reg_695 = grp_bitset_next_fu_347_ap_return_3.read();
    }
    if ((!esl_seteq<1,1,1>(nfa_forward_buckets_rsp_empty_n.read(), ap_const_logic_0) && esl_seteq<1,6,6>(ap_ST_st32_fsm_31, ap_CS_fsm.read()))) {
        next_buckets_0_1_reg_718 = next_buckets_0_1_fu_546_p2.read();
    }
    if (esl_seteq<1,6,6>(ap_ST_st11_fsm_10, ap_CS_fsm.read())) {
        p_rec_reg_622 = grp_fu_421_p2.read();
    }
    if (((esl_seteq<1,6,6>(ap_ST_st31_fsm_30, ap_CS_fsm.read()) && 
  !esl_seteq<1,1,1>(nfa_forward_buckets_rsp_empty_n.read(), ap_const_logic_0)) || (!esl_seteq<1,1,1>(nfa_forward_buckets_rsp_empty_n.read(), ap_const_logic_0) && 
  esl_seteq<1,6,6>(ap_ST_st32_fsm_31, ap_CS_fsm.read())))) {
        reg_377 = nfa_forward_buckets_datain.read();
    }
    if (esl_seteq<1,6,6>(ap_ST_st10_fsm_9, ap_CS_fsm.read())) {
        sample_addr_1_reg_616 =  (sc_lv<32>) (grp_fu_399_p2.read());
    }
    if ((esl_seteq<1,6,6>(ap_ST_st21_fsm_20, ap_CS_fsm.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, j_end_phi_fu_315_p4.read()))) {
        state_reg_665 = state_fu_470_p2.read();
    }
    if ((esl_seteq<1,6,6>(ap_ST_st16_fsm_15, ap_CS_fsm.read()) && !esl_seteq<1,1,1>(sample_rsp_empty_n.read(), ap_const_logic_0))) {
        sym_reg_631 = sample_datain.read();
    }
    if (esl_seteq<1,6,6>(ap_ST_st8_fsm_7, ap_CS_fsm.read())) {
        tmp_14_cast_reg_602 = tmp_14_cast_fu_389_p1.read();
    }
    if ((esl_seteq<1,6,6>(ap_ST_st16_fsm_15, ap_CS_fsm.read()) && !esl_seteq<1,1,1>(sample_rsp_empty_n.read(), ap_const_logic_0) && !esl_seteq<1,1,1>(tmp_19_i_reg_627.read(), ap_const_lv1_0))) {
        tmp_19_1_i_reg_636 = tmp_19_1_i_fu_433_p2.read();
    }
    if (esl_seteq<1,6,6>(ap_ST_st15_fsm_14, ap_CS_fsm.read())) {
        tmp_19_i_reg_627 = tmp_19_i_fu_427_p2.read();
    }
    if (esl_seteq<1,6,6>(ap_ST_st40_fsm_39, ap_CS_fsm.read())) {
        tmp_1_reg_738 = tmp_1_fu_576_p2.read();
    }
    if (esl_seteq<1,6,6>(ap_ST_st41_fsm_40, ap_CS_fsm.read())) {
        tmp_2_reg_743 = tmp_2_fu_582_p2.read();
    }
    if (esl_seteq<1,6,6>(ap_ST_st20_fsm_19, ap_CS_fsm.read())) {
        tmp_7_i_cast_reg_660 = tmp_7_i_cast_fu_451_p1.read();
    }
    if (esl_seteq<1,6,6>(ap_ST_st25_fsm_24, ap_CS_fsm.read())) {
        tmp_8_i_reg_700 = tmp_8_i_fu_505_p2.read();
    }
    if (esl_seteq<1,6,6>(ap_ST_st39_fsm_38, ap_CS_fsm.read())) {
        tmp_buckets_0_reg_728 = grp_nfa_get_finals_fu_365_ap_return_0.read();
        tmp_buckets_1_reg_733 = grp_nfa_get_finals_fu_365_ap_return_1.read();
    }
}

void nfa_accept_sample::thread_agg_result_bucket_index_0_lcssa4_i_cast_cast_fu_439_p1() {
    agg_result_bucket_index_0_lcssa4_i_cast_cast_fu_439_p1 = esl_zext<2,1>(agg_result_bucket_index_0_lcssa4_i_reg_193.read());
}

void nfa_accept_sample::thread_any_phi_fu_327_p4() {
    any_phi_fu_327_p4 = any_reg_322.read();
}

void nfa_accept_sample::thread_ap_done() {
    if (((!esl_seteq<1,1,1>(ap_const_logic_1, ap_start.read()) && 
          esl_seteq<1,6,6>(ap_ST_st1_fsm_0, ap_CS_fsm.read())) || 
         esl_seteq<1,6,6>(ap_ST_st43_fsm_42, ap_CS_fsm.read()))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void nfa_accept_sample::thread_ap_idle() {
    if ((!esl_seteq<1,1,1>(ap_const_logic_1, ap_start.read()) && 
         esl_seteq<1,6,6>(ap_ST_st1_fsm_0, ap_CS_fsm.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void nfa_accept_sample::thread_ap_ready() {
    if (esl_seteq<1,6,6>(ap_ST_st43_fsm_42, ap_CS_fsm.read())) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void nfa_accept_sample::thread_ap_return() {
    if (esl_seteq<1,6,6>(ap_ST_st43_fsm_42, ap_CS_fsm.read())) {
        ap_return = p_0_reg_335.read();
    } else {
        ap_return = ap_return_preg.read();
    }
}

void nfa_accept_sample::thread_current_buckets_0_1_fu_566_p2() {
    current_buckets_0_1_fu_566_p2 = (next_buckets_0_reg_171.read() & tmp_buckets_0_reg_728.read());
}

void nfa_accept_sample::thread_current_buckets_1_1_fu_571_p2() {
    current_buckets_1_1_fu_571_p2 = (next_buckets_1_reg_161.read() & tmp_buckets_1_reg_733.read());
}

void nfa_accept_sample::thread_grp_bitset_next_fu_347_ap_ce() {
    if (((esl_seteq<1,6,6>(ap_ST_st21_fsm_20, ap_CS_fsm.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, j_end_phi_fu_315_p4.read())) || 
         esl_seteq<1,6,6>(ap_ST_st22_fsm_21, ap_CS_fsm.read()) || 
         esl_seteq<1,6,6>(ap_ST_st24_fsm_23, ap_CS_fsm.read()) || 
         esl_seteq<1,6,6>(ap_ST_st23_fsm_22, ap_CS_fsm.read()))) {
        grp_bitset_next_fu_347_ap_ce = ap_const_logic_1;
    } else {
        grp_bitset_next_fu_347_ap_ce = ap_const_logic_0;
    }
}

void nfa_accept_sample::thread_grp_bitset_next_fu_347_p_read() {
    grp_bitset_next_fu_347_p_read = next_buckets_1_reg_161.read();
}

void nfa_accept_sample::thread_grp_bitset_next_fu_347_r_bit() {
    grp_bitset_next_fu_347_r_bit = j_bit1_reg_302.read();
}

void nfa_accept_sample::thread_grp_bitset_next_fu_347_r_bucket() {
    grp_bitset_next_fu_347_r_bucket = j_bucket1_reg_281.read();
}

void nfa_accept_sample::thread_grp_bitset_next_fu_347_r_bucket_index() {
    grp_bitset_next_fu_347_r_bucket_index = j_bucket_index1_reg_292.read();
}

void nfa_accept_sample::thread_grp_fu_399_ce() {
    grp_fu_399_ce = ap_const_logic_1;
}

void nfa_accept_sample::thread_grp_fu_399_p0() {
    grp_fu_399_p0 = p_01_rec_reg_149.read();
}

void nfa_accept_sample::thread_grp_fu_399_p1() {
    grp_fu_399_p1 = tmp_14_cast_reg_602.read();
}

void nfa_accept_sample::thread_grp_fu_421_ce() {
    grp_fu_421_ce = ap_const_logic_1;
}

void nfa_accept_sample::thread_grp_fu_421_p0() {
    grp_fu_421_p0 = p_01_rec_reg_149.read();
}

void nfa_accept_sample::thread_grp_fu_421_p1() {
    grp_fu_421_p1 = ap_const_lv64_1;
}

void nfa_accept_sample::thread_grp_fu_483_ce() {
    grp_fu_483_ce = ap_const_logic_1;
}

void nfa_accept_sample::thread_grp_fu_483_p0() {
    grp_fu_483_p0 =  (sc_lv<8>) (grp_fu_483_p00.read());
}

void nfa_accept_sample::thread_grp_fu_483_p00() {
    grp_fu_483_p00 = esl_zext<14,8>(nfa_symbols.read());
}

void nfa_accept_sample::thread_grp_fu_483_p1() {
    grp_fu_483_p1 =  (sc_lv<6>) (grp_fu_483_p10.read());
}

void nfa_accept_sample::thread_grp_fu_483_p10() {
    grp_fu_483_p10 = esl_zext<14,6>(state_reg_665.read());
}

void nfa_accept_sample::thread_grp_nfa_get_finals_fu_365_ap_ce() {
    grp_nfa_get_finals_fu_365_ap_ce = ap_const_logic_1;
}

void nfa_accept_sample::thread_grp_nfa_get_finals_fu_365_ap_start() {
    grp_nfa_get_finals_fu_365_ap_start = grp_nfa_get_finals_fu_365_ap_start_ap_start_reg.read();
}

void nfa_accept_sample::thread_grp_nfa_get_finals_fu_365_nfa_finals_buckets_datain() {
    grp_nfa_get_finals_fu_365_nfa_finals_buckets_datain = nfa_finals_buckets_datain.read();
}

void nfa_accept_sample::thread_grp_nfa_get_finals_fu_365_nfa_finals_buckets_req_full_n() {
    grp_nfa_get_finals_fu_365_nfa_finals_buckets_req_full_n = nfa_finals_buckets_req_full_n.read();
}

void nfa_accept_sample::thread_grp_nfa_get_finals_fu_365_nfa_finals_buckets_rsp_empty_n() {
    grp_nfa_get_finals_fu_365_nfa_finals_buckets_rsp_empty_n = nfa_finals_buckets_rsp_empty_n.read();
}

void nfa_accept_sample::thread_grp_nfa_get_initials_fu_359_ap_ce() {
    grp_nfa_get_initials_fu_359_ap_ce = ap_const_logic_1;
}

void nfa_accept_sample::thread_grp_nfa_get_initials_fu_359_ap_start() {
    if ((esl_seteq<1,6,6>(ap_ST_st1_fsm_0, ap_CS_fsm.read()) && 
         !esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0))) {
        grp_nfa_get_initials_fu_359_ap_start = ap_const_logic_1;
    } else {
        grp_nfa_get_initials_fu_359_ap_start = ap_const_logic_0;
    }
}

void nfa_accept_sample::thread_grp_nfa_get_initials_fu_359_nfa_initials_buckets_datain() {
    grp_nfa_get_initials_fu_359_nfa_initials_buckets_datain = nfa_initials_buckets_datain.read();
}

void nfa_accept_sample::thread_grp_nfa_get_initials_fu_359_nfa_initials_buckets_req_full_n() {
    grp_nfa_get_initials_fu_359_nfa_initials_buckets_req_full_n = nfa_initials_buckets_req_full_n.read();
}

void nfa_accept_sample::thread_grp_nfa_get_initials_fu_359_nfa_initials_buckets_rsp_empty_n() {
    grp_nfa_get_initials_fu_359_nfa_initials_buckets_rsp_empty_n = nfa_initials_buckets_rsp_empty_n.read();
}

void nfa_accept_sample::thread_grp_p_bsf32_hw_fu_371_ap_ce() {
    if ((esl_seteq<1,6,6>(ap_ST_st19_fsm_18, ap_CS_fsm.read()) || 
         esl_seteq<1,6,6>(ap_ST_st18_fsm_17, ap_CS_fsm.read()))) {
        grp_p_bsf32_hw_fu_371_ap_ce = ap_const_logic_1;
    } else {
        grp_p_bsf32_hw_fu_371_ap_ce = ap_const_logic_0;
    }
}

void nfa_accept_sample::thread_grp_p_bsf32_hw_fu_371_bus_r() {
    grp_p_bsf32_hw_fu_371_bus_r = bus_assign_reg_181.read();
}

void nfa_accept_sample::thread_i_1_fu_409_p2() {
    i_1_fu_409_p2 = (!i_reg_138.read().is_01() || !ap_const_lv16_1.is_01())? sc_lv<16>(): (sc_bigint<16>(i_reg_138.read()) + sc_biguint<16>(ap_const_lv16_1));
}

void nfa_accept_sample::thread_j_bit1_ph_cast_fu_447_p1() {
    j_bit1_ph_cast_fu_447_p1 = esl_zext<8,5>(j_bit1_ph_reg_230.read());
}

void nfa_accept_sample::thread_j_bucket_index1_ph_cast_fu_443_p1() {
    j_bucket_index1_ph_cast_fu_443_p1 = esl_zext<8,2>(j_bucket_index1_ph_reg_219.read());
}

void nfa_accept_sample::thread_j_end_phi_fu_315_p4() {
    j_end_phi_fu_315_p4 = j_end_reg_312.read();
}

void nfa_accept_sample::thread_next_buckets_0_1_fu_546_p2() {
    next_buckets_0_1_fu_546_p2 = (tmp_buckets_0_3_reg_268.read() | reg_377.read());
}

void nfa_accept_sample::thread_next_buckets_1_1_fu_552_p2() {
    next_buckets_1_1_fu_552_p2 = (tmp_buckets_1_3_reg_255.read() | reg_377.read());
}

void nfa_accept_sample::thread_nfa_finals_buckets_address() {
    nfa_finals_buckets_address = grp_nfa_get_finals_fu_365_nfa_finals_buckets_address.read();
}

void nfa_accept_sample::thread_nfa_finals_buckets_dataout() {
    nfa_finals_buckets_dataout = grp_nfa_get_finals_fu_365_nfa_finals_buckets_dataout.read();
}

void nfa_accept_sample::thread_nfa_finals_buckets_req_din() {
    nfa_finals_buckets_req_din = grp_nfa_get_finals_fu_365_nfa_finals_buckets_req_din.read();
}

void nfa_accept_sample::thread_nfa_finals_buckets_req_write() {
    nfa_finals_buckets_req_write = grp_nfa_get_finals_fu_365_nfa_finals_buckets_req_write.read();
}

void nfa_accept_sample::thread_nfa_finals_buckets_rsp_read() {
    nfa_finals_buckets_rsp_read = grp_nfa_get_finals_fu_365_nfa_finals_buckets_rsp_read.read();
}

void nfa_accept_sample::thread_nfa_finals_buckets_size() {
    nfa_finals_buckets_size = grp_nfa_get_finals_fu_365_nfa_finals_buckets_size.read();
}

void nfa_accept_sample::thread_nfa_forward_buckets_address() {
    if (esl_seteq<1,6,6>(ap_ST_st27_fsm_26, ap_CS_fsm.read())) {
        nfa_forward_buckets_address =  (sc_lv<32>) (tmp_9_i_cast_fu_535_p1.read());
    } else if (esl_seteq<1,6,6>(ap_ST_st26_fsm_25, ap_CS_fsm.read())) {
        nfa_forward_buckets_address =  (sc_lv<32>) (tmp_4_i_cast_fu_517_p1.read());
    } else {
        nfa_forward_buckets_address = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    }
}

void nfa_accept_sample::thread_nfa_forward_buckets_dataout() {
    nfa_forward_buckets_dataout = ap_const_lv32_0;
}

void nfa_accept_sample::thread_nfa_forward_buckets_req_din() {
    nfa_forward_buckets_req_din = ap_const_logic_0;
}

void nfa_accept_sample::thread_nfa_forward_buckets_req_write() {
    if ((esl_seteq<1,6,6>(ap_ST_st26_fsm_25, ap_CS_fsm.read()) || 
         esl_seteq<1,6,6>(ap_ST_st27_fsm_26, ap_CS_fsm.read()))) {
        nfa_forward_buckets_req_write = ap_const_logic_1;
    } else {
        nfa_forward_buckets_req_write = ap_const_logic_0;
    }
}

void nfa_accept_sample::thread_nfa_forward_buckets_rsp_read() {
    if (((esl_seteq<1,6,6>(ap_ST_st31_fsm_30, ap_CS_fsm.read()) && 
          !esl_seteq<1,1,1>(nfa_forward_buckets_rsp_empty_n.read(), ap_const_logic_0)) || 
         (!esl_seteq<1,1,1>(nfa_forward_buckets_rsp_empty_n.read(), ap_const_logic_0) && 
          esl_seteq<1,6,6>(ap_ST_st32_fsm_31, ap_CS_fsm.read())))) {
        nfa_forward_buckets_rsp_read = ap_const_logic_1;
    } else {
        nfa_forward_buckets_rsp_read = ap_const_logic_0;
    }
}

void nfa_accept_sample::thread_nfa_forward_buckets_size() {
    nfa_forward_buckets_size = ap_const_lv32_1;
}

void nfa_accept_sample::thread_nfa_initials_buckets_address() {
    nfa_initials_buckets_address = grp_nfa_get_initials_fu_359_nfa_initials_buckets_address.read();
}

void nfa_accept_sample::thread_nfa_initials_buckets_dataout() {
    nfa_initials_buckets_dataout = grp_nfa_get_initials_fu_359_nfa_initials_buckets_dataout.read();
}

void nfa_accept_sample::thread_nfa_initials_buckets_req_din() {
    nfa_initials_buckets_req_din = grp_nfa_get_initials_fu_359_nfa_initials_buckets_req_din.read();
}

void nfa_accept_sample::thread_nfa_initials_buckets_req_write() {
    nfa_initials_buckets_req_write = grp_nfa_get_initials_fu_359_nfa_initials_buckets_req_write.read();
}

void nfa_accept_sample::thread_nfa_initials_buckets_rsp_read() {
    nfa_initials_buckets_rsp_read = grp_nfa_get_initials_fu_359_nfa_initials_buckets_rsp_read.read();
}

void nfa_accept_sample::thread_nfa_initials_buckets_size() {
    nfa_initials_buckets_size = grp_nfa_get_initials_fu_359_nfa_initials_buckets_size.read();
}

void nfa_accept_sample::thread_sample_address() {
    sample_address = sample_addr_1_reg_616.read();
}

void nfa_accept_sample::thread_sample_dataout() {
    sample_dataout = ap_const_lv8_0;
}

void nfa_accept_sample::thread_sample_req_din() {
    sample_req_din = ap_const_logic_0;
}

void nfa_accept_sample::thread_sample_req_write() {
    if (esl_seteq<1,6,6>(ap_ST_st11_fsm_10, ap_CS_fsm.read())) {
        sample_req_write = ap_const_logic_1;
    } else {
        sample_req_write = ap_const_logic_0;
    }
}

void nfa_accept_sample::thread_sample_rsp_read() {
    if ((esl_seteq<1,6,6>(ap_ST_st16_fsm_15, ap_CS_fsm.read()) && 
         !esl_seteq<1,1,1>(sample_rsp_empty_n.read(), ap_const_logic_0))) {
        sample_rsp_read = ap_const_logic_1;
    } else {
        sample_rsp_read = ap_const_logic_0;
    }
}

void nfa_accept_sample::thread_sample_size() {
    sample_size = ap_const_lv32_1;
}

void nfa_accept_sample::thread_state_fu_470_p2() {
    state_fu_470_p2 = (!tmp_i_fu_458_p3.read().is_01() || !tmp_32_fu_466_p1.read().is_01())? sc_lv<6>(): (sc_bigint<6>(tmp_i_fu_458_p3.read()) + sc_biguint<6>(tmp_32_fu_466_p1.read()));
}

void nfa_accept_sample::thread_tmp_14_cast_fu_389_p1() {
    tmp_14_cast_fu_389_p1 = esl_zext<64,32>(tmp_14.read());
}

void nfa_accept_sample::thread_tmp_19_1_i_fu_433_p2() {
    tmp_19_1_i_fu_433_p2 = (!next_buckets_1_reg_161.read().is_01() || !ap_const_lv32_0.is_01())? sc_lv<1>(): sc_lv<1>(next_buckets_1_reg_161.read() == ap_const_lv32_0);
}

void nfa_accept_sample::thread_tmp_19_i_fu_427_p2() {
    tmp_19_i_fu_427_p2 = (!next_buckets_0_reg_171.read().is_01() || !ap_const_lv32_0.is_01())? sc_lv<1>(): sc_lv<1>(next_buckets_0_reg_171.read() == ap_const_lv32_0);
}

void nfa_accept_sample::thread_tmp_1_fu_576_p2() {
    tmp_1_fu_576_p2 = (current_buckets_1_1_fu_571_p2.read() | current_buckets_0_1_fu_566_p2.read());
}

void nfa_accept_sample::thread_tmp_2_fu_582_p2() {
    tmp_2_fu_582_p2 = (!tmp_1_reg_738.read().is_01() || !ap_const_lv32_0.is_01())? sc_lv<1>(): sc_lv<1>(tmp_1_reg_738.read() != ap_const_lv32_0);
}

void nfa_accept_sample::thread_tmp_31_fu_454_p1() {
    tmp_31_fu_454_p1 = j_bucket_index1_reg_292.read().range(1-1, 0);
}

void nfa_accept_sample::thread_tmp_32_fu_466_p1() {
    tmp_32_fu_466_p1 = j_bit1_reg_302.read().range(6-1, 0);
}

void nfa_accept_sample::thread_tmp_4_i_cast_fu_517_p1() {
    tmp_4_i_cast_fu_517_p1 = esl_zext<64,15>(tmp_4_i_fu_510_p3.read());
}

void nfa_accept_sample::thread_tmp_4_i_fu_510_p3() {
    tmp_4_i_fu_510_p3 = esl_concat<14,1>(tmp_8_i_reg_700.read(), ap_const_lv1_0);
}

void nfa_accept_sample::thread_tmp_7_i_cast_fu_451_p1() {
    tmp_7_i_cast_fu_451_p1 = esl_zext<14,8>(sym_reg_631.read());
}

void nfa_accept_sample::thread_tmp_8_i_fu_505_p2() {
    tmp_8_i_fu_505_p2 = (!grp_fu_483_p2.read().is_01() || !tmp_7_i_cast_reg_660.read().is_01())? sc_lv<14>(): (sc_bigint<14>(grp_fu_483_p2.read()) + sc_biguint<14>(tmp_7_i_cast_reg_660.read()));
}

void nfa_accept_sample::thread_tmp_9_i_cast_fu_535_p1() {
    tmp_9_i_cast_fu_535_p1 = esl_zext<64,15>(tmp_9_i_fu_528_p3.read());
}

void nfa_accept_sample::thread_tmp_9_i_fu_528_p3() {
    tmp_9_i_fu_528_p3 = esl_concat<14,1>(tmp_8_i_reg_700.read(), ap_const_lv1_1);
}

void nfa_accept_sample::thread_tmp_i_fu_458_p3() {
    tmp_i_fu_458_p3 = esl_concat<1,5>(tmp_31_fu_454_p1.read(), ap_const_lv5_0);
}

void nfa_accept_sample::thread_tmp_s_fu_404_p2() {
    tmp_s_fu_404_p2 = (!i_reg_138.read().is_01() || !length_r.read().is_01())? sc_lv<1>(): (sc_biguint<16>(i_reg_138.read()) < sc_biguint<16>(length_r.read()));
}

void nfa_accept_sample::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint()) {
        case 0 : 
            if (!esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0)) {
                ap_NS_fsm = ap_ST_st2_fsm_1;
            } else {
                ap_NS_fsm = ap_ST_st1_fsm_0;
            }
            break;
        case 1 : 
            ap_NS_fsm = ap_ST_st3_fsm_2;
            break;
        case 2 : 
            ap_NS_fsm = ap_ST_st4_fsm_3;
            break;
        case 3 : 
            ap_NS_fsm = ap_ST_st5_fsm_4;
            break;
        case 4 : 
            ap_NS_fsm = ap_ST_st6_fsm_5;
            break;
        case 5 : 
            ap_NS_fsm = ap_ST_st7_fsm_6;
            break;
        case 6 : 
            ap_NS_fsm = ap_ST_st8_fsm_7;
            break;
        case 7 : 
            ap_NS_fsm = ap_ST_st9_fsm_8;
            break;
        case 8 : 
            ap_NS_fsm = ap_ST_st10_fsm_9;
            break;
        case 9 : 
            if (esl_seteq<1,1,1>(tmp_s_reg_607.read(), ap_const_lv1_0)) {
                ap_NS_fsm = ap_ST_st34_fsm_33;
            } else {
                ap_NS_fsm = ap_ST_st11_fsm_10;
            }
            break;
        case 10 : 
            ap_NS_fsm = ap_ST_st12_fsm_11;
            break;
        case 11 : 
            ap_NS_fsm = ap_ST_st13_fsm_12;
            break;
        case 12 : 
            ap_NS_fsm = ap_ST_st14_fsm_13;
            break;
        case 13 : 
            ap_NS_fsm = ap_ST_st15_fsm_14;
            break;
        case 14 : 
            ap_NS_fsm = ap_ST_st16_fsm_15;
            break;
        case 15 : 
            if ((!esl_seteq<1,1,1>(sample_rsp_empty_n.read(), ap_const_logic_0) && esl_seteq<1,1,1>(tmp_19_i_reg_627.read(), ap_const_lv1_0))) {
                ap_NS_fsm = ap_ST_st18_fsm_17;
            } else if ((!esl_seteq<1,1,1>(sample_rsp_empty_n.read(), ap_const_logic_0) && !esl_seteq<1,1,1>(tmp_19_i_reg_627.read(), ap_const_lv1_0))) {
                ap_NS_fsm = ap_ST_st17_fsm_16;
            } else {
                ap_NS_fsm = ap_ST_st16_fsm_15;
            }
            break;
        case 16 : 
            if (!esl_seteq<1,1,1>(tmp_19_1_i_reg_636.read(), ap_const_lv1_0)) {
                ap_NS_fsm = ap_ST_st20_fsm_19;
            } else {
                ap_NS_fsm = ap_ST_st18_fsm_17;
            }
            break;
        case 17 : 
            ap_NS_fsm = ap_ST_st19_fsm_18;
            break;
        case 18 : 
            ap_NS_fsm = ap_ST_st20_fsm_19;
            break;
        case 19 : 
            ap_NS_fsm = ap_ST_st21_fsm_20;
            break;
        case 20 : 
            if ((!esl_seteq<1,1,1>(ap_const_lv1_0, j_end_phi_fu_315_p4.read()) && !esl_seteq<1,1,1>(ap_const_lv1_0, any_phi_fu_327_p4.read()))) {
                ap_NS_fsm = ap_ST_st9_fsm_8;
            } else if ((!esl_seteq<1,1,1>(ap_const_lv1_0, j_end_phi_fu_315_p4.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, any_phi_fu_327_p4.read()))) {
                ap_NS_fsm = ap_ST_st43_fsm_42;
            } else {
                ap_NS_fsm = ap_ST_st22_fsm_21;
            }
            break;
        case 21 : 
            ap_NS_fsm = ap_ST_st23_fsm_22;
            break;
        case 22 : 
            ap_NS_fsm = ap_ST_st24_fsm_23;
            break;
        case 23 : 
            ap_NS_fsm = ap_ST_st25_fsm_24;
            break;
        case 24 : 
            ap_NS_fsm = ap_ST_st26_fsm_25;
            break;
        case 25 : 
            ap_NS_fsm = ap_ST_st27_fsm_26;
            break;
        case 26 : 
            ap_NS_fsm = ap_ST_st28_fsm_27;
            break;
        case 27 : 
            ap_NS_fsm = ap_ST_st29_fsm_28;
            break;
        case 28 : 
            ap_NS_fsm = ap_ST_st30_fsm_29;
            break;
        case 29 : 
            ap_NS_fsm = ap_ST_st31_fsm_30;
            break;
        case 30 : 
            if (!esl_seteq<1,1,1>(nfa_forward_buckets_rsp_empty_n.read(), ap_const_logic_0)) {
                ap_NS_fsm = ap_ST_st32_fsm_31;
            } else {
                ap_NS_fsm = ap_ST_st31_fsm_30;
            }
            break;
        case 31 : 
            if (!esl_seteq<1,1,1>(nfa_forward_buckets_rsp_empty_n.read(), ap_const_logic_0)) {
                ap_NS_fsm = ap_ST_st33_fsm_32;
            } else {
                ap_NS_fsm = ap_ST_st32_fsm_31;
            }
            break;
        case 32 : 
            ap_NS_fsm = ap_ST_st21_fsm_20;
            break;
        case 33 : 
            ap_NS_fsm = ap_ST_st35_fsm_34;
            break;
        case 34 : 
            ap_NS_fsm = ap_ST_st36_fsm_35;
            break;
        case 35 : 
            ap_NS_fsm = ap_ST_st37_fsm_36;
            break;
        case 36 : 
            ap_NS_fsm = ap_ST_st38_fsm_37;
            break;
        case 37 : 
            ap_NS_fsm = ap_ST_st39_fsm_38;
            break;
        case 38 : 
            ap_NS_fsm = ap_ST_st40_fsm_39;
            break;
        case 39 : 
            ap_NS_fsm = ap_ST_st41_fsm_40;
            break;
        case 40 : 
            ap_NS_fsm = ap_ST_st42_fsm_41;
            break;
        case 41 : 
            ap_NS_fsm = ap_ST_st43_fsm_42;
            break;
        case 42 : 
            ap_NS_fsm = ap_ST_st1_fsm_0;
            break;
        default : 
            ap_NS_fsm =  (sc_lv<6>) ("XXXXXX");
            break;
    }
}
}

