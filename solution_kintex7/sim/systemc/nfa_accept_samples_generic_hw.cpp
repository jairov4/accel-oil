// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2013.4
// Copyright (C) 2013 Xilinx Inc. All rights reserved.
// 
// ===========================================================

#include "nfa_accept_samples_generic_hw.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic nfa_accept_samples_generic_hw::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic nfa_accept_samples_generic_hw::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<5> nfa_accept_samples_generic_hw::ap_ST_st1_fsm_0 = "00000";
const sc_lv<5> nfa_accept_samples_generic_hw::ap_ST_st2_fsm_1 = "1";
const sc_lv<5> nfa_accept_samples_generic_hw::ap_ST_st3_fsm_2 = "10";
const sc_lv<5> nfa_accept_samples_generic_hw::ap_ST_st4_fsm_3 = "11";
const sc_lv<5> nfa_accept_samples_generic_hw::ap_ST_st5_fsm_4 = "100";
const sc_lv<5> nfa_accept_samples_generic_hw::ap_ST_st6_fsm_5 = "101";
const sc_lv<5> nfa_accept_samples_generic_hw::ap_ST_st7_fsm_6 = "110";
const sc_lv<5> nfa_accept_samples_generic_hw::ap_ST_st8_fsm_7 = "111";
const sc_lv<5> nfa_accept_samples_generic_hw::ap_ST_st9_fsm_8 = "1000";
const sc_lv<5> nfa_accept_samples_generic_hw::ap_ST_st10_fsm_9 = "1001";
const sc_lv<5> nfa_accept_samples_generic_hw::ap_ST_st11_fsm_10 = "1010";
const sc_lv<5> nfa_accept_samples_generic_hw::ap_ST_st12_fsm_11 = "1011";
const sc_lv<5> nfa_accept_samples_generic_hw::ap_ST_st13_fsm_12 = "1100";
const sc_lv<5> nfa_accept_samples_generic_hw::ap_ST_st14_fsm_13 = "1101";
const sc_lv<5> nfa_accept_samples_generic_hw::ap_ST_st15_fsm_14 = "1110";
const sc_lv<5> nfa_accept_samples_generic_hw::ap_ST_st16_fsm_15 = "1111";
const sc_lv<5> nfa_accept_samples_generic_hw::ap_ST_st17_fsm_16 = "10000";
const sc_lv<5> nfa_accept_samples_generic_hw::ap_ST_st18_fsm_17 = "10001";
const sc_lv<5> nfa_accept_samples_generic_hw::ap_ST_st19_fsm_18 = "10010";
const sc_lv<5> nfa_accept_samples_generic_hw::ap_ST_st20_fsm_19 = "10011";
const sc_lv<5> nfa_accept_samples_generic_hw::ap_ST_st21_fsm_20 = "10100";
const sc_lv<5> nfa_accept_samples_generic_hw::ap_ST_st22_fsm_21 = "10101";
const sc_lv<5> nfa_accept_samples_generic_hw::ap_ST_st23_fsm_22 = "10110";
const sc_lv<5> nfa_accept_samples_generic_hw::ap_ST_st24_fsm_23 = "10111";
const sc_lv<1> nfa_accept_samples_generic_hw::ap_const_lv1_0 = "0";
const sc_lv<32> nfa_accept_samples_generic_hw::ap_const_lv32_1 = "1";
const sc_lv<32> nfa_accept_samples_generic_hw::ap_const_lv32_0 = "00000000000000000000000000000000";

nfa_accept_samples_generic_hw::nfa_accept_samples_generic_hw(sc_module_name name) : sc_module(name), mVcdFile(0) {
    grp_nfa_accept_sample_fu_178 = new nfa_accept_sample("grp_nfa_accept_sample_fu_178");
    grp_nfa_accept_sample_fu_178->ap_clk(ap_clk);
    grp_nfa_accept_sample_fu_178->ap_rst(ap_rst);
    grp_nfa_accept_sample_fu_178->ap_start(grp_nfa_accept_sample_fu_178_ap_start);
    grp_nfa_accept_sample_fu_178->ap_done(grp_nfa_accept_sample_fu_178_ap_done);
    grp_nfa_accept_sample_fu_178->ap_idle(grp_nfa_accept_sample_fu_178_ap_idle);
    grp_nfa_accept_sample_fu_178->ap_ready(grp_nfa_accept_sample_fu_178_ap_ready);
    grp_nfa_accept_sample_fu_178->nfa_initials_buckets_req_din(grp_nfa_accept_sample_fu_178_nfa_initials_buckets_req_din);
    grp_nfa_accept_sample_fu_178->nfa_initials_buckets_req_full_n(grp_nfa_accept_sample_fu_178_nfa_initials_buckets_req_full_n);
    grp_nfa_accept_sample_fu_178->nfa_initials_buckets_req_write(grp_nfa_accept_sample_fu_178_nfa_initials_buckets_req_write);
    grp_nfa_accept_sample_fu_178->nfa_initials_buckets_rsp_empty_n(grp_nfa_accept_sample_fu_178_nfa_initials_buckets_rsp_empty_n);
    grp_nfa_accept_sample_fu_178->nfa_initials_buckets_rsp_read(grp_nfa_accept_sample_fu_178_nfa_initials_buckets_rsp_read);
    grp_nfa_accept_sample_fu_178->nfa_initials_buckets_address(grp_nfa_accept_sample_fu_178_nfa_initials_buckets_address);
    grp_nfa_accept_sample_fu_178->nfa_initials_buckets_datain(grp_nfa_accept_sample_fu_178_nfa_initials_buckets_datain);
    grp_nfa_accept_sample_fu_178->nfa_initials_buckets_dataout(grp_nfa_accept_sample_fu_178_nfa_initials_buckets_dataout);
    grp_nfa_accept_sample_fu_178->nfa_initials_buckets_size(grp_nfa_accept_sample_fu_178_nfa_initials_buckets_size);
    grp_nfa_accept_sample_fu_178->nfa_finals_buckets_req_din(grp_nfa_accept_sample_fu_178_nfa_finals_buckets_req_din);
    grp_nfa_accept_sample_fu_178->nfa_finals_buckets_req_full_n(grp_nfa_accept_sample_fu_178_nfa_finals_buckets_req_full_n);
    grp_nfa_accept_sample_fu_178->nfa_finals_buckets_req_write(grp_nfa_accept_sample_fu_178_nfa_finals_buckets_req_write);
    grp_nfa_accept_sample_fu_178->nfa_finals_buckets_rsp_empty_n(grp_nfa_accept_sample_fu_178_nfa_finals_buckets_rsp_empty_n);
    grp_nfa_accept_sample_fu_178->nfa_finals_buckets_rsp_read(grp_nfa_accept_sample_fu_178_nfa_finals_buckets_rsp_read);
    grp_nfa_accept_sample_fu_178->nfa_finals_buckets_address(grp_nfa_accept_sample_fu_178_nfa_finals_buckets_address);
    grp_nfa_accept_sample_fu_178->nfa_finals_buckets_datain(grp_nfa_accept_sample_fu_178_nfa_finals_buckets_datain);
    grp_nfa_accept_sample_fu_178->nfa_finals_buckets_dataout(grp_nfa_accept_sample_fu_178_nfa_finals_buckets_dataout);
    grp_nfa_accept_sample_fu_178->nfa_finals_buckets_size(grp_nfa_accept_sample_fu_178_nfa_finals_buckets_size);
    grp_nfa_accept_sample_fu_178->nfa_forward_buckets_req_din(grp_nfa_accept_sample_fu_178_nfa_forward_buckets_req_din);
    grp_nfa_accept_sample_fu_178->nfa_forward_buckets_req_full_n(grp_nfa_accept_sample_fu_178_nfa_forward_buckets_req_full_n);
    grp_nfa_accept_sample_fu_178->nfa_forward_buckets_req_write(grp_nfa_accept_sample_fu_178_nfa_forward_buckets_req_write);
    grp_nfa_accept_sample_fu_178->nfa_forward_buckets_rsp_empty_n(grp_nfa_accept_sample_fu_178_nfa_forward_buckets_rsp_empty_n);
    grp_nfa_accept_sample_fu_178->nfa_forward_buckets_rsp_read(grp_nfa_accept_sample_fu_178_nfa_forward_buckets_rsp_read);
    grp_nfa_accept_sample_fu_178->nfa_forward_buckets_address(grp_nfa_accept_sample_fu_178_nfa_forward_buckets_address);
    grp_nfa_accept_sample_fu_178->nfa_forward_buckets_datain(grp_nfa_accept_sample_fu_178_nfa_forward_buckets_datain);
    grp_nfa_accept_sample_fu_178->nfa_forward_buckets_dataout(grp_nfa_accept_sample_fu_178_nfa_forward_buckets_dataout);
    grp_nfa_accept_sample_fu_178->nfa_forward_buckets_size(grp_nfa_accept_sample_fu_178_nfa_forward_buckets_size);
    grp_nfa_accept_sample_fu_178->nfa_symbols(grp_nfa_accept_sample_fu_178_nfa_symbols);
    grp_nfa_accept_sample_fu_178->sample_req_din(grp_nfa_accept_sample_fu_178_sample_req_din);
    grp_nfa_accept_sample_fu_178->sample_req_full_n(grp_nfa_accept_sample_fu_178_sample_req_full_n);
    grp_nfa_accept_sample_fu_178->sample_req_write(grp_nfa_accept_sample_fu_178_sample_req_write);
    grp_nfa_accept_sample_fu_178->sample_rsp_empty_n(grp_nfa_accept_sample_fu_178_sample_rsp_empty_n);
    grp_nfa_accept_sample_fu_178->sample_rsp_read(grp_nfa_accept_sample_fu_178_sample_rsp_read);
    grp_nfa_accept_sample_fu_178->sample_address(grp_nfa_accept_sample_fu_178_sample_address);
    grp_nfa_accept_sample_fu_178->sample_datain(grp_nfa_accept_sample_fu_178_sample_datain);
    grp_nfa_accept_sample_fu_178->sample_dataout(grp_nfa_accept_sample_fu_178_sample_dataout);
    grp_nfa_accept_sample_fu_178->sample_size(grp_nfa_accept_sample_fu_178_sample_size);
    grp_nfa_accept_sample_fu_178->tmp_14(grp_nfa_accept_sample_fu_178_tmp_14);
    grp_nfa_accept_sample_fu_178->length_r(grp_nfa_accept_sample_fu_178_length_r);
    grp_nfa_accept_sample_fu_178->ap_return(grp_nfa_accept_sample_fu_178_ap_return);
    grp_sample_iterator_next_fu_194 = new sample_iterator_next("grp_sample_iterator_next_fu_194");
    grp_sample_iterator_next_fu_194->ap_clk(ap_clk);
    grp_sample_iterator_next_fu_194->ap_rst(ap_rst);
    grp_sample_iterator_next_fu_194->ap_start(grp_sample_iterator_next_fu_194_ap_start);
    grp_sample_iterator_next_fu_194->ap_done(grp_sample_iterator_next_fu_194_ap_done);
    grp_sample_iterator_next_fu_194->ap_idle(grp_sample_iterator_next_fu_194_ap_idle);
    grp_sample_iterator_next_fu_194->ap_ready(grp_sample_iterator_next_fu_194_ap_ready);
    grp_sample_iterator_next_fu_194->indices_samples_req_din(grp_sample_iterator_next_fu_194_indices_samples_req_din);
    grp_sample_iterator_next_fu_194->indices_samples_req_full_n(grp_sample_iterator_next_fu_194_indices_samples_req_full_n);
    grp_sample_iterator_next_fu_194->indices_samples_req_write(grp_sample_iterator_next_fu_194_indices_samples_req_write);
    grp_sample_iterator_next_fu_194->indices_samples_rsp_empty_n(grp_sample_iterator_next_fu_194_indices_samples_rsp_empty_n);
    grp_sample_iterator_next_fu_194->indices_samples_rsp_read(grp_sample_iterator_next_fu_194_indices_samples_rsp_read);
    grp_sample_iterator_next_fu_194->indices_samples_address(grp_sample_iterator_next_fu_194_indices_samples_address);
    grp_sample_iterator_next_fu_194->indices_samples_datain(grp_sample_iterator_next_fu_194_indices_samples_datain);
    grp_sample_iterator_next_fu_194->indices_samples_dataout(grp_sample_iterator_next_fu_194_indices_samples_dataout);
    grp_sample_iterator_next_fu_194->indices_samples_size(grp_sample_iterator_next_fu_194_indices_samples_size);
    grp_sample_iterator_next_fu_194->ap_ce(grp_sample_iterator_next_fu_194_ap_ce);
    grp_sample_iterator_next_fu_194->indices_begin_req_din(grp_sample_iterator_next_fu_194_indices_begin_req_din);
    grp_sample_iterator_next_fu_194->indices_begin_req_full_n(grp_sample_iterator_next_fu_194_indices_begin_req_full_n);
    grp_sample_iterator_next_fu_194->indices_begin_req_write(grp_sample_iterator_next_fu_194_indices_begin_req_write);
    grp_sample_iterator_next_fu_194->indices_begin_rsp_empty_n(grp_sample_iterator_next_fu_194_indices_begin_rsp_empty_n);
    grp_sample_iterator_next_fu_194->indices_begin_rsp_read(grp_sample_iterator_next_fu_194_indices_begin_rsp_read);
    grp_sample_iterator_next_fu_194->indices_begin_address(grp_sample_iterator_next_fu_194_indices_begin_address);
    grp_sample_iterator_next_fu_194->indices_begin_datain(grp_sample_iterator_next_fu_194_indices_begin_datain);
    grp_sample_iterator_next_fu_194->indices_begin_dataout(grp_sample_iterator_next_fu_194_indices_begin_dataout);
    grp_sample_iterator_next_fu_194->indices_begin_size(grp_sample_iterator_next_fu_194_indices_begin_size);
    grp_sample_iterator_next_fu_194->indices_stride_req_din(grp_sample_iterator_next_fu_194_indices_stride_req_din);
    grp_sample_iterator_next_fu_194->indices_stride_req_full_n(grp_sample_iterator_next_fu_194_indices_stride_req_full_n);
    grp_sample_iterator_next_fu_194->indices_stride_req_write(grp_sample_iterator_next_fu_194_indices_stride_req_write);
    grp_sample_iterator_next_fu_194->indices_stride_rsp_empty_n(grp_sample_iterator_next_fu_194_indices_stride_rsp_empty_n);
    grp_sample_iterator_next_fu_194->indices_stride_rsp_read(grp_sample_iterator_next_fu_194_indices_stride_rsp_read);
    grp_sample_iterator_next_fu_194->indices_stride_address(grp_sample_iterator_next_fu_194_indices_stride_address);
    grp_sample_iterator_next_fu_194->indices_stride_datain(grp_sample_iterator_next_fu_194_indices_stride_datain);
    grp_sample_iterator_next_fu_194->indices_stride_dataout(grp_sample_iterator_next_fu_194_indices_stride_dataout);
    grp_sample_iterator_next_fu_194->indices_stride_size(grp_sample_iterator_next_fu_194_indices_stride_size);
    grp_sample_iterator_next_fu_194->i_index(grp_sample_iterator_next_fu_194_i_index);
    grp_sample_iterator_next_fu_194->i_sample(grp_sample_iterator_next_fu_194_i_sample);
    grp_sample_iterator_next_fu_194->ap_return_0(grp_sample_iterator_next_fu_194_ap_return_0);
    grp_sample_iterator_next_fu_194->ap_return_1(grp_sample_iterator_next_fu_194_ap_return_1);
    grp_sample_iterator_get_offset_fu_208 = new sample_iterator_get_offset("grp_sample_iterator_get_offset_fu_208");
    grp_sample_iterator_get_offset_fu_208->ap_clk(ap_clk);
    grp_sample_iterator_get_offset_fu_208->ap_rst(ap_rst);
    grp_sample_iterator_get_offset_fu_208->ap_start(grp_sample_iterator_get_offset_fu_208_ap_start);
    grp_sample_iterator_get_offset_fu_208->ap_done(grp_sample_iterator_get_offset_fu_208_ap_done);
    grp_sample_iterator_get_offset_fu_208->ap_idle(grp_sample_iterator_get_offset_fu_208_ap_idle);
    grp_sample_iterator_get_offset_fu_208->ap_ready(grp_sample_iterator_get_offset_fu_208_ap_ready);
    grp_sample_iterator_get_offset_fu_208->indices_stride_req_din(grp_sample_iterator_get_offset_fu_208_indices_stride_req_din);
    grp_sample_iterator_get_offset_fu_208->indices_stride_req_full_n(grp_sample_iterator_get_offset_fu_208_indices_stride_req_full_n);
    grp_sample_iterator_get_offset_fu_208->indices_stride_req_write(grp_sample_iterator_get_offset_fu_208_indices_stride_req_write);
    grp_sample_iterator_get_offset_fu_208->indices_stride_rsp_empty_n(grp_sample_iterator_get_offset_fu_208_indices_stride_rsp_empty_n);
    grp_sample_iterator_get_offset_fu_208->indices_stride_rsp_read(grp_sample_iterator_get_offset_fu_208_indices_stride_rsp_read);
    grp_sample_iterator_get_offset_fu_208->indices_stride_address(grp_sample_iterator_get_offset_fu_208_indices_stride_address);
    grp_sample_iterator_get_offset_fu_208->indices_stride_datain(grp_sample_iterator_get_offset_fu_208_indices_stride_datain);
    grp_sample_iterator_get_offset_fu_208->indices_stride_dataout(grp_sample_iterator_get_offset_fu_208_indices_stride_dataout);
    grp_sample_iterator_get_offset_fu_208->indices_stride_size(grp_sample_iterator_get_offset_fu_208_indices_stride_size);
    grp_sample_iterator_get_offset_fu_208->indices_begin_req_din(grp_sample_iterator_get_offset_fu_208_indices_begin_req_din);
    grp_sample_iterator_get_offset_fu_208->indices_begin_req_full_n(grp_sample_iterator_get_offset_fu_208_indices_begin_req_full_n);
    grp_sample_iterator_get_offset_fu_208->indices_begin_req_write(grp_sample_iterator_get_offset_fu_208_indices_begin_req_write);
    grp_sample_iterator_get_offset_fu_208->indices_begin_rsp_empty_n(grp_sample_iterator_get_offset_fu_208_indices_begin_rsp_empty_n);
    grp_sample_iterator_get_offset_fu_208->indices_begin_rsp_read(grp_sample_iterator_get_offset_fu_208_indices_begin_rsp_read);
    grp_sample_iterator_get_offset_fu_208->indices_begin_address(grp_sample_iterator_get_offset_fu_208_indices_begin_address);
    grp_sample_iterator_get_offset_fu_208->indices_begin_datain(grp_sample_iterator_get_offset_fu_208_indices_begin_datain);
    grp_sample_iterator_get_offset_fu_208->indices_begin_dataout(grp_sample_iterator_get_offset_fu_208_indices_begin_dataout);
    grp_sample_iterator_get_offset_fu_208->indices_begin_size(grp_sample_iterator_get_offset_fu_208_indices_begin_size);
    grp_sample_iterator_get_offset_fu_208->ap_ce(grp_sample_iterator_get_offset_fu_208_ap_ce);
    grp_sample_iterator_get_offset_fu_208->i_index(grp_sample_iterator_get_offset_fu_208_i_index);
    grp_sample_iterator_get_offset_fu_208->i_sample(grp_sample_iterator_get_offset_fu_208_i_sample);
    grp_sample_iterator_get_offset_fu_208->indices_samples_req_din(grp_sample_iterator_get_offset_fu_208_indices_samples_req_din);
    grp_sample_iterator_get_offset_fu_208->indices_samples_req_full_n(grp_sample_iterator_get_offset_fu_208_indices_samples_req_full_n);
    grp_sample_iterator_get_offset_fu_208->indices_samples_req_write(grp_sample_iterator_get_offset_fu_208_indices_samples_req_write);
    grp_sample_iterator_get_offset_fu_208->indices_samples_rsp_empty_n(grp_sample_iterator_get_offset_fu_208_indices_samples_rsp_empty_n);
    grp_sample_iterator_get_offset_fu_208->indices_samples_rsp_read(grp_sample_iterator_get_offset_fu_208_indices_samples_rsp_read);
    grp_sample_iterator_get_offset_fu_208->indices_samples_address(grp_sample_iterator_get_offset_fu_208_indices_samples_address);
    grp_sample_iterator_get_offset_fu_208->indices_samples_datain(grp_sample_iterator_get_offset_fu_208_indices_samples_datain);
    grp_sample_iterator_get_offset_fu_208->indices_samples_dataout(grp_sample_iterator_get_offset_fu_208_indices_samples_dataout);
    grp_sample_iterator_get_offset_fu_208->indices_samples_size(grp_sample_iterator_get_offset_fu_208_indices_samples_size);
    grp_sample_iterator_get_offset_fu_208->sample_buffer_size(grp_sample_iterator_get_offset_fu_208_sample_buffer_size);
    grp_sample_iterator_get_offset_fu_208->sample_length(grp_sample_iterator_get_offset_fu_208_sample_length);
    grp_sample_iterator_get_offset_fu_208->ap_return(grp_sample_iterator_get_offset_fu_208_ap_return);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_return);
    sensitive << ( ap_CS_fsm );
    sensitive << ( p_0_reg_166 );

    SC_METHOD(thread_c_1_fu_252_p2);
    sensitive << ( c_load_reg_326 );

    SC_METHOD(thread_grp_nfa_accept_sample_fu_178_ap_start);
    sensitive << ( grp_nfa_accept_sample_fu_178_ap_start_ap_start_reg );

    SC_METHOD(thread_grp_nfa_accept_sample_fu_178_length_r);
    sensitive << ( ap_CS_fsm );
    sensitive << ( sample_length );

    SC_METHOD(thread_grp_nfa_accept_sample_fu_178_nfa_finals_buckets_datain);
    sensitive << ( ap_CS_fsm );
    sensitive << ( nfa_finals_buckets_datain );
    sensitive << ( grp_nfa_accept_sample_fu_178_ap_done );

    SC_METHOD(thread_grp_nfa_accept_sample_fu_178_nfa_finals_buckets_req_full_n);
    sensitive << ( ap_CS_fsm );
    sensitive << ( nfa_finals_buckets_req_full_n );
    sensitive << ( grp_nfa_accept_sample_fu_178_ap_done );

    SC_METHOD(thread_grp_nfa_accept_sample_fu_178_nfa_finals_buckets_rsp_empty_n);
    sensitive << ( ap_CS_fsm );
    sensitive << ( nfa_finals_buckets_rsp_empty_n );
    sensitive << ( grp_nfa_accept_sample_fu_178_ap_done );

    SC_METHOD(thread_grp_nfa_accept_sample_fu_178_nfa_forward_buckets_datain);
    sensitive << ( ap_CS_fsm );
    sensitive << ( nfa_forward_buckets_datain );
    sensitive << ( grp_nfa_accept_sample_fu_178_ap_done );

    SC_METHOD(thread_grp_nfa_accept_sample_fu_178_nfa_forward_buckets_req_full_n);
    sensitive << ( ap_CS_fsm );
    sensitive << ( nfa_forward_buckets_req_full_n );
    sensitive << ( grp_nfa_accept_sample_fu_178_ap_done );

    SC_METHOD(thread_grp_nfa_accept_sample_fu_178_nfa_forward_buckets_rsp_empty_n);
    sensitive << ( ap_CS_fsm );
    sensitive << ( nfa_forward_buckets_rsp_empty_n );
    sensitive << ( grp_nfa_accept_sample_fu_178_ap_done );

    SC_METHOD(thread_grp_nfa_accept_sample_fu_178_nfa_initials_buckets_datain);
    sensitive << ( ap_CS_fsm );
    sensitive << ( nfa_initials_buckets_datain );
    sensitive << ( grp_nfa_accept_sample_fu_178_ap_done );

    SC_METHOD(thread_grp_nfa_accept_sample_fu_178_nfa_initials_buckets_req_full_n);
    sensitive << ( ap_CS_fsm );
    sensitive << ( nfa_initials_buckets_req_full_n );
    sensitive << ( grp_nfa_accept_sample_fu_178_ap_done );

    SC_METHOD(thread_grp_nfa_accept_sample_fu_178_nfa_initials_buckets_rsp_empty_n);
    sensitive << ( ap_CS_fsm );
    sensitive << ( nfa_initials_buckets_rsp_empty_n );
    sensitive << ( grp_nfa_accept_sample_fu_178_ap_done );

    SC_METHOD(thread_grp_nfa_accept_sample_fu_178_nfa_symbols);
    sensitive << ( ap_CS_fsm );
    sensitive << ( nfa_symbols );

    SC_METHOD(thread_grp_nfa_accept_sample_fu_178_sample_datain);
    sensitive << ( ap_CS_fsm );
    sensitive << ( sample_buffer_datain );
    sensitive << ( grp_nfa_accept_sample_fu_178_ap_done );

    SC_METHOD(thread_grp_nfa_accept_sample_fu_178_sample_req_full_n);
    sensitive << ( ap_CS_fsm );
    sensitive << ( sample_buffer_req_full_n );
    sensitive << ( grp_nfa_accept_sample_fu_178_ap_done );

    SC_METHOD(thread_grp_nfa_accept_sample_fu_178_sample_rsp_empty_n);
    sensitive << ( ap_CS_fsm );
    sensitive << ( sample_buffer_rsp_empty_n );
    sensitive << ( grp_nfa_accept_sample_fu_178_ap_done );

    SC_METHOD(thread_grp_nfa_accept_sample_fu_178_tmp_14);
    sensitive << ( ap_CS_fsm );
    sensitive << ( offset_reg_335 );

    SC_METHOD(thread_grp_sample_iterator_get_offset_fu_208_ap_ce);

    SC_METHOD(thread_grp_sample_iterator_get_offset_fu_208_ap_start);
    sensitive << ( grp_sample_iterator_get_offset_fu_208_ap_start_ap_start_reg );

    SC_METHOD(thread_grp_sample_iterator_get_offset_fu_208_i_index);
    sensitive << ( ap_CS_fsm );
    sensitive << ( i_index_reg_146 );

    SC_METHOD(thread_grp_sample_iterator_get_offset_fu_208_i_sample);
    sensitive << ( ap_CS_fsm );
    sensitive << ( i_sample_reg_156 );

    SC_METHOD(thread_grp_sample_iterator_get_offset_fu_208_indices_begin_datain);
    sensitive << ( ap_CS_fsm );
    sensitive << ( indices_begin_datain );

    SC_METHOD(thread_grp_sample_iterator_get_offset_fu_208_indices_begin_req_full_n);
    sensitive << ( ap_CS_fsm );
    sensitive << ( indices_begin_req_full_n );

    SC_METHOD(thread_grp_sample_iterator_get_offset_fu_208_indices_begin_rsp_empty_n);
    sensitive << ( ap_CS_fsm );
    sensitive << ( indices_begin_rsp_empty_n );

    SC_METHOD(thread_grp_sample_iterator_get_offset_fu_208_indices_samples_datain);
    sensitive << ( ap_CS_fsm );
    sensitive << ( indices_samples_datain );

    SC_METHOD(thread_grp_sample_iterator_get_offset_fu_208_indices_samples_req_full_n);
    sensitive << ( ap_CS_fsm );
    sensitive << ( indices_samples_req_full_n );

    SC_METHOD(thread_grp_sample_iterator_get_offset_fu_208_indices_samples_rsp_empty_n);
    sensitive << ( ap_CS_fsm );
    sensitive << ( indices_samples_rsp_empty_n );

    SC_METHOD(thread_grp_sample_iterator_get_offset_fu_208_indices_stride_datain);
    sensitive << ( ap_CS_fsm );
    sensitive << ( indices_stride_datain );

    SC_METHOD(thread_grp_sample_iterator_get_offset_fu_208_indices_stride_req_full_n);
    sensitive << ( ap_CS_fsm );
    sensitive << ( indices_stride_req_full_n );

    SC_METHOD(thread_grp_sample_iterator_get_offset_fu_208_indices_stride_rsp_empty_n);
    sensitive << ( ap_CS_fsm );
    sensitive << ( indices_stride_rsp_empty_n );

    SC_METHOD(thread_grp_sample_iterator_get_offset_fu_208_sample_buffer_size);
    sensitive << ( ap_CS_fsm );
    sensitive << ( sample_buffer_length );

    SC_METHOD(thread_grp_sample_iterator_get_offset_fu_208_sample_length);
    sensitive << ( ap_CS_fsm );
    sensitive << ( sample_length );

    SC_METHOD(thread_grp_sample_iterator_next_fu_194_ap_ce);

    SC_METHOD(thread_grp_sample_iterator_next_fu_194_ap_start);
    sensitive << ( grp_sample_iterator_next_fu_194_ap_start_ap_start_reg );

    SC_METHOD(thread_grp_sample_iterator_next_fu_194_i_index);
    sensitive << ( ap_CS_fsm );
    sensitive << ( i_index_reg_146 );

    SC_METHOD(thread_grp_sample_iterator_next_fu_194_i_sample);
    sensitive << ( ap_CS_fsm );
    sensitive << ( i_sample_reg_156 );

    SC_METHOD(thread_grp_sample_iterator_next_fu_194_indices_begin_datain);
    sensitive << ( ap_CS_fsm );
    sensitive << ( indices_begin_datain );

    SC_METHOD(thread_grp_sample_iterator_next_fu_194_indices_begin_req_full_n);
    sensitive << ( ap_CS_fsm );
    sensitive << ( indices_begin_req_full_n );

    SC_METHOD(thread_grp_sample_iterator_next_fu_194_indices_begin_rsp_empty_n);
    sensitive << ( ap_CS_fsm );
    sensitive << ( indices_begin_rsp_empty_n );

    SC_METHOD(thread_grp_sample_iterator_next_fu_194_indices_samples_datain);
    sensitive << ( ap_CS_fsm );
    sensitive << ( indices_samples_datain );

    SC_METHOD(thread_grp_sample_iterator_next_fu_194_indices_samples_req_full_n);
    sensitive << ( ap_CS_fsm );
    sensitive << ( indices_samples_req_full_n );

    SC_METHOD(thread_grp_sample_iterator_next_fu_194_indices_samples_rsp_empty_n);
    sensitive << ( ap_CS_fsm );
    sensitive << ( indices_samples_rsp_empty_n );

    SC_METHOD(thread_grp_sample_iterator_next_fu_194_indices_stride_datain);
    sensitive << ( ap_CS_fsm );
    sensitive << ( indices_stride_datain );

    SC_METHOD(thread_grp_sample_iterator_next_fu_194_indices_stride_req_full_n);
    sensitive << ( ap_CS_fsm );
    sensitive << ( indices_stride_req_full_n );

    SC_METHOD(thread_grp_sample_iterator_next_fu_194_indices_stride_rsp_empty_n);
    sensitive << ( ap_CS_fsm );
    sensitive << ( indices_stride_rsp_empty_n );

    SC_METHOD(thread_indices_begin_address);
    sensitive << ( ap_CS_fsm );
    sensitive << ( grp_sample_iterator_next_fu_194_indices_begin_address );
    sensitive << ( grp_sample_iterator_get_offset_fu_208_indices_begin_address );

    SC_METHOD(thread_indices_begin_dataout);
    sensitive << ( ap_CS_fsm );
    sensitive << ( grp_sample_iterator_next_fu_194_indices_begin_dataout );
    sensitive << ( grp_sample_iterator_get_offset_fu_208_indices_begin_dataout );

    SC_METHOD(thread_indices_begin_req_din);
    sensitive << ( ap_CS_fsm );
    sensitive << ( grp_sample_iterator_next_fu_194_indices_begin_req_din );
    sensitive << ( grp_sample_iterator_get_offset_fu_208_indices_begin_req_din );

    SC_METHOD(thread_indices_begin_req_write);
    sensitive << ( ap_CS_fsm );
    sensitive << ( grp_sample_iterator_next_fu_194_indices_begin_req_write );
    sensitive << ( grp_sample_iterator_get_offset_fu_208_indices_begin_req_write );

    SC_METHOD(thread_indices_begin_rsp_read);
    sensitive << ( ap_CS_fsm );
    sensitive << ( grp_sample_iterator_next_fu_194_indices_begin_rsp_read );
    sensitive << ( grp_sample_iterator_get_offset_fu_208_indices_begin_rsp_read );

    SC_METHOD(thread_indices_begin_size);
    sensitive << ( ap_CS_fsm );
    sensitive << ( grp_sample_iterator_next_fu_194_indices_begin_size );
    sensitive << ( grp_sample_iterator_get_offset_fu_208_indices_begin_size );

    SC_METHOD(thread_indices_samples_address);
    sensitive << ( ap_CS_fsm );
    sensitive << ( grp_sample_iterator_next_fu_194_indices_samples_address );
    sensitive << ( grp_sample_iterator_get_offset_fu_208_indices_samples_address );

    SC_METHOD(thread_indices_samples_dataout);
    sensitive << ( ap_CS_fsm );
    sensitive << ( grp_sample_iterator_next_fu_194_indices_samples_dataout );
    sensitive << ( grp_sample_iterator_get_offset_fu_208_indices_samples_dataout );

    SC_METHOD(thread_indices_samples_req_din);
    sensitive << ( ap_CS_fsm );
    sensitive << ( grp_sample_iterator_next_fu_194_indices_samples_req_din );
    sensitive << ( grp_sample_iterator_get_offset_fu_208_indices_samples_req_din );

    SC_METHOD(thread_indices_samples_req_write);
    sensitive << ( ap_CS_fsm );
    sensitive << ( grp_sample_iterator_next_fu_194_indices_samples_req_write );
    sensitive << ( grp_sample_iterator_get_offset_fu_208_indices_samples_req_write );

    SC_METHOD(thread_indices_samples_rsp_read);
    sensitive << ( ap_CS_fsm );
    sensitive << ( grp_sample_iterator_next_fu_194_indices_samples_rsp_read );
    sensitive << ( grp_sample_iterator_get_offset_fu_208_indices_samples_rsp_read );

    SC_METHOD(thread_indices_samples_size);
    sensitive << ( ap_CS_fsm );
    sensitive << ( grp_sample_iterator_next_fu_194_indices_samples_size );
    sensitive << ( grp_sample_iterator_get_offset_fu_208_indices_samples_size );

    SC_METHOD(thread_indices_stride_address);
    sensitive << ( ap_CS_fsm );
    sensitive << ( grp_sample_iterator_next_fu_194_indices_stride_address );
    sensitive << ( grp_sample_iterator_get_offset_fu_208_indices_stride_address );

    SC_METHOD(thread_indices_stride_dataout);
    sensitive << ( ap_CS_fsm );
    sensitive << ( grp_sample_iterator_next_fu_194_indices_stride_dataout );
    sensitive << ( grp_sample_iterator_get_offset_fu_208_indices_stride_dataout );

    SC_METHOD(thread_indices_stride_req_din);
    sensitive << ( ap_CS_fsm );
    sensitive << ( grp_sample_iterator_next_fu_194_indices_stride_req_din );
    sensitive << ( grp_sample_iterator_get_offset_fu_208_indices_stride_req_din );

    SC_METHOD(thread_indices_stride_req_write);
    sensitive << ( ap_CS_fsm );
    sensitive << ( grp_sample_iterator_next_fu_194_indices_stride_req_write );
    sensitive << ( grp_sample_iterator_get_offset_fu_208_indices_stride_req_write );

    SC_METHOD(thread_indices_stride_rsp_read);
    sensitive << ( ap_CS_fsm );
    sensitive << ( grp_sample_iterator_next_fu_194_indices_stride_rsp_read );
    sensitive << ( grp_sample_iterator_get_offset_fu_208_indices_stride_rsp_read );

    SC_METHOD(thread_indices_stride_size);
    sensitive << ( ap_CS_fsm );
    sensitive << ( grp_sample_iterator_next_fu_194_indices_stride_size );
    sensitive << ( grp_sample_iterator_get_offset_fu_208_indices_stride_size );

    SC_METHOD(thread_nfa_finals_buckets_address);
    sensitive << ( ap_CS_fsm );
    sensitive << ( grp_nfa_accept_sample_fu_178_ap_idle );
    sensitive << ( grp_nfa_accept_sample_fu_178_nfa_finals_buckets_address );

    SC_METHOD(thread_nfa_finals_buckets_dataout);
    sensitive << ( ap_CS_fsm );
    sensitive << ( grp_nfa_accept_sample_fu_178_ap_idle );
    sensitive << ( grp_nfa_accept_sample_fu_178_nfa_finals_buckets_dataout );

    SC_METHOD(thread_nfa_finals_buckets_req_din);
    sensitive << ( ap_CS_fsm );
    sensitive << ( grp_nfa_accept_sample_fu_178_ap_idle );
    sensitive << ( grp_nfa_accept_sample_fu_178_nfa_finals_buckets_req_din );

    SC_METHOD(thread_nfa_finals_buckets_req_write);
    sensitive << ( ap_CS_fsm );
    sensitive << ( grp_nfa_accept_sample_fu_178_ap_idle );
    sensitive << ( grp_nfa_accept_sample_fu_178_nfa_finals_buckets_req_write );

    SC_METHOD(thread_nfa_finals_buckets_rsp_read);
    sensitive << ( ap_CS_fsm );
    sensitive << ( grp_nfa_accept_sample_fu_178_ap_idle );
    sensitive << ( grp_nfa_accept_sample_fu_178_nfa_finals_buckets_rsp_read );

    SC_METHOD(thread_nfa_finals_buckets_size);
    sensitive << ( ap_CS_fsm );
    sensitive << ( grp_nfa_accept_sample_fu_178_ap_idle );
    sensitive << ( grp_nfa_accept_sample_fu_178_nfa_finals_buckets_size );

    SC_METHOD(thread_nfa_forward_buckets_address);
    sensitive << ( ap_CS_fsm );
    sensitive << ( grp_nfa_accept_sample_fu_178_ap_idle );
    sensitive << ( grp_nfa_accept_sample_fu_178_nfa_forward_buckets_address );

    SC_METHOD(thread_nfa_forward_buckets_dataout);
    sensitive << ( ap_CS_fsm );
    sensitive << ( grp_nfa_accept_sample_fu_178_ap_idle );
    sensitive << ( grp_nfa_accept_sample_fu_178_nfa_forward_buckets_dataout );

    SC_METHOD(thread_nfa_forward_buckets_req_din);
    sensitive << ( ap_CS_fsm );
    sensitive << ( grp_nfa_accept_sample_fu_178_ap_idle );
    sensitive << ( grp_nfa_accept_sample_fu_178_nfa_forward_buckets_req_din );

    SC_METHOD(thread_nfa_forward_buckets_req_write);
    sensitive << ( ap_CS_fsm );
    sensitive << ( grp_nfa_accept_sample_fu_178_ap_idle );
    sensitive << ( grp_nfa_accept_sample_fu_178_nfa_forward_buckets_req_write );

    SC_METHOD(thread_nfa_forward_buckets_rsp_read);
    sensitive << ( ap_CS_fsm );
    sensitive << ( grp_nfa_accept_sample_fu_178_ap_idle );
    sensitive << ( grp_nfa_accept_sample_fu_178_nfa_forward_buckets_rsp_read );

    SC_METHOD(thread_nfa_forward_buckets_size);
    sensitive << ( ap_CS_fsm );
    sensitive << ( grp_nfa_accept_sample_fu_178_ap_idle );
    sensitive << ( grp_nfa_accept_sample_fu_178_nfa_forward_buckets_size );

    SC_METHOD(thread_nfa_initials_buckets_address);
    sensitive << ( ap_CS_fsm );
    sensitive << ( grp_nfa_accept_sample_fu_178_ap_idle );
    sensitive << ( grp_nfa_accept_sample_fu_178_nfa_initials_buckets_address );

    SC_METHOD(thread_nfa_initials_buckets_dataout);
    sensitive << ( ap_CS_fsm );
    sensitive << ( grp_nfa_accept_sample_fu_178_ap_idle );
    sensitive << ( grp_nfa_accept_sample_fu_178_nfa_initials_buckets_dataout );

    SC_METHOD(thread_nfa_initials_buckets_req_din);
    sensitive << ( ap_CS_fsm );
    sensitive << ( grp_nfa_accept_sample_fu_178_ap_idle );
    sensitive << ( grp_nfa_accept_sample_fu_178_nfa_initials_buckets_req_din );

    SC_METHOD(thread_nfa_initials_buckets_req_write);
    sensitive << ( ap_CS_fsm );
    sensitive << ( grp_nfa_accept_sample_fu_178_ap_idle );
    sensitive << ( grp_nfa_accept_sample_fu_178_nfa_initials_buckets_req_write );

    SC_METHOD(thread_nfa_initials_buckets_rsp_read);
    sensitive << ( ap_CS_fsm );
    sensitive << ( grp_nfa_accept_sample_fu_178_ap_idle );
    sensitive << ( grp_nfa_accept_sample_fu_178_nfa_initials_buckets_rsp_read );

    SC_METHOD(thread_nfa_initials_buckets_size);
    sensitive << ( ap_CS_fsm );
    sensitive << ( grp_nfa_accept_sample_fu_178_ap_idle );
    sensitive << ( grp_nfa_accept_sample_fu_178_nfa_initials_buckets_size );

    SC_METHOD(thread_or_cond_fu_247_p2);
    sensitive << ( accept );
    sensitive << ( grp_nfa_accept_sample_fu_178_ap_return );

    SC_METHOD(thread_sample_buffer_address);
    sensitive << ( ap_CS_fsm );
    sensitive << ( grp_nfa_accept_sample_fu_178_ap_idle );
    sensitive << ( grp_nfa_accept_sample_fu_178_sample_address );

    SC_METHOD(thread_sample_buffer_dataout);
    sensitive << ( ap_CS_fsm );
    sensitive << ( grp_nfa_accept_sample_fu_178_ap_idle );
    sensitive << ( grp_nfa_accept_sample_fu_178_sample_dataout );

    SC_METHOD(thread_sample_buffer_req_din);
    sensitive << ( ap_CS_fsm );
    sensitive << ( grp_nfa_accept_sample_fu_178_ap_idle );
    sensitive << ( grp_nfa_accept_sample_fu_178_sample_req_din );

    SC_METHOD(thread_sample_buffer_req_write);
    sensitive << ( ap_CS_fsm );
    sensitive << ( grp_nfa_accept_sample_fu_178_ap_idle );
    sensitive << ( grp_nfa_accept_sample_fu_178_sample_req_write );

    SC_METHOD(thread_sample_buffer_rsp_read);
    sensitive << ( ap_CS_fsm );
    sensitive << ( grp_nfa_accept_sample_fu_178_ap_idle );
    sensitive << ( grp_nfa_accept_sample_fu_178_sample_rsp_read );

    SC_METHOD(thread_sample_buffer_size);
    sensitive << ( ap_CS_fsm );
    sensitive << ( grp_nfa_accept_sample_fu_178_ap_idle );
    sensitive << ( grp_nfa_accept_sample_fu_178_sample_size );

    SC_METHOD(thread_stop_on_first_read_read_fu_104_p2);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( stop_on_first );

    SC_METHOD(thread_tmp_i_10_fu_235_p2);
    sensitive << ( ap_CS_fsm );
    sensitive << ( end_index );
    sensitive << ( i_index_reg_146 );

    SC_METHOD(thread_tmp_i_11_fu_243_p2);
    sensitive << ( tmp_i_reg_316 );
    sensitive << ( tmp_i_10_reg_321 );

    SC_METHOD(thread_tmp_i_fu_230_p2);
    sensitive << ( ap_CS_fsm );
    sensitive << ( end_sample );
    sensitive << ( i_sample_reg_156 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( stop_on_first_read_read_fu_104_p2 );
    sensitive << ( or_cond_fu_247_p2 );
    sensitive << ( grp_nfa_accept_sample_fu_178_ap_done );
    sensitive << ( tmp_i_11_fu_243_p2 );

    SC_THREAD(thread_hdltv_gen);
    sensitive << ( ap_clk.pos() );

    ap_CS_fsm = "00000";
    grp_nfa_accept_sample_fu_178_ap_start_ap_start_reg = SC_LOGIC_0;
    grp_sample_iterator_next_fu_194_ap_start_ap_start_reg = SC_LOGIC_0;
    grp_sample_iterator_get_offset_fu_208_ap_start_ap_start_reg = SC_LOGIC_0;
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "nfa_accept_samples_generic_hw_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, nfa_initials_buckets_req_din, "(port)nfa_initials_buckets_req_din");
    sc_trace(mVcdFile, nfa_initials_buckets_req_full_n, "(port)nfa_initials_buckets_req_full_n");
    sc_trace(mVcdFile, nfa_initials_buckets_req_write, "(port)nfa_initials_buckets_req_write");
    sc_trace(mVcdFile, nfa_initials_buckets_rsp_empty_n, "(port)nfa_initials_buckets_rsp_empty_n");
    sc_trace(mVcdFile, nfa_initials_buckets_rsp_read, "(port)nfa_initials_buckets_rsp_read");
    sc_trace(mVcdFile, nfa_initials_buckets_address, "(port)nfa_initials_buckets_address");
    sc_trace(mVcdFile, nfa_initials_buckets_datain, "(port)nfa_initials_buckets_datain");
    sc_trace(mVcdFile, nfa_initials_buckets_dataout, "(port)nfa_initials_buckets_dataout");
    sc_trace(mVcdFile, nfa_initials_buckets_size, "(port)nfa_initials_buckets_size");
    sc_trace(mVcdFile, nfa_finals_buckets_req_din, "(port)nfa_finals_buckets_req_din");
    sc_trace(mVcdFile, nfa_finals_buckets_req_full_n, "(port)nfa_finals_buckets_req_full_n");
    sc_trace(mVcdFile, nfa_finals_buckets_req_write, "(port)nfa_finals_buckets_req_write");
    sc_trace(mVcdFile, nfa_finals_buckets_rsp_empty_n, "(port)nfa_finals_buckets_rsp_empty_n");
    sc_trace(mVcdFile, nfa_finals_buckets_rsp_read, "(port)nfa_finals_buckets_rsp_read");
    sc_trace(mVcdFile, nfa_finals_buckets_address, "(port)nfa_finals_buckets_address");
    sc_trace(mVcdFile, nfa_finals_buckets_datain, "(port)nfa_finals_buckets_datain");
    sc_trace(mVcdFile, nfa_finals_buckets_dataout, "(port)nfa_finals_buckets_dataout");
    sc_trace(mVcdFile, nfa_finals_buckets_size, "(port)nfa_finals_buckets_size");
    sc_trace(mVcdFile, nfa_forward_buckets_req_din, "(port)nfa_forward_buckets_req_din");
    sc_trace(mVcdFile, nfa_forward_buckets_req_full_n, "(port)nfa_forward_buckets_req_full_n");
    sc_trace(mVcdFile, nfa_forward_buckets_req_write, "(port)nfa_forward_buckets_req_write");
    sc_trace(mVcdFile, nfa_forward_buckets_rsp_empty_n, "(port)nfa_forward_buckets_rsp_empty_n");
    sc_trace(mVcdFile, nfa_forward_buckets_rsp_read, "(port)nfa_forward_buckets_rsp_read");
    sc_trace(mVcdFile, nfa_forward_buckets_address, "(port)nfa_forward_buckets_address");
    sc_trace(mVcdFile, nfa_forward_buckets_datain, "(port)nfa_forward_buckets_datain");
    sc_trace(mVcdFile, nfa_forward_buckets_dataout, "(port)nfa_forward_buckets_dataout");
    sc_trace(mVcdFile, nfa_forward_buckets_size, "(port)nfa_forward_buckets_size");
    sc_trace(mVcdFile, nfa_symbols, "(port)nfa_symbols");
    sc_trace(mVcdFile, sample_buffer_req_din, "(port)sample_buffer_req_din");
    sc_trace(mVcdFile, sample_buffer_req_full_n, "(port)sample_buffer_req_full_n");
    sc_trace(mVcdFile, sample_buffer_req_write, "(port)sample_buffer_req_write");
    sc_trace(mVcdFile, sample_buffer_rsp_empty_n, "(port)sample_buffer_rsp_empty_n");
    sc_trace(mVcdFile, sample_buffer_rsp_read, "(port)sample_buffer_rsp_read");
    sc_trace(mVcdFile, sample_buffer_address, "(port)sample_buffer_address");
    sc_trace(mVcdFile, sample_buffer_datain, "(port)sample_buffer_datain");
    sc_trace(mVcdFile, sample_buffer_dataout, "(port)sample_buffer_dataout");
    sc_trace(mVcdFile, sample_buffer_size, "(port)sample_buffer_size");
    sc_trace(mVcdFile, sample_buffer_length, "(port)sample_buffer_length");
    sc_trace(mVcdFile, sample_length, "(port)sample_length");
    sc_trace(mVcdFile, indices_begin_req_din, "(port)indices_begin_req_din");
    sc_trace(mVcdFile, indices_begin_req_full_n, "(port)indices_begin_req_full_n");
    sc_trace(mVcdFile, indices_begin_req_write, "(port)indices_begin_req_write");
    sc_trace(mVcdFile, indices_begin_rsp_empty_n, "(port)indices_begin_rsp_empty_n");
    sc_trace(mVcdFile, indices_begin_rsp_read, "(port)indices_begin_rsp_read");
    sc_trace(mVcdFile, indices_begin_address, "(port)indices_begin_address");
    sc_trace(mVcdFile, indices_begin_datain, "(port)indices_begin_datain");
    sc_trace(mVcdFile, indices_begin_dataout, "(port)indices_begin_dataout");
    sc_trace(mVcdFile, indices_begin_size, "(port)indices_begin_size");
    sc_trace(mVcdFile, indices_samples_req_din, "(port)indices_samples_req_din");
    sc_trace(mVcdFile, indices_samples_req_full_n, "(port)indices_samples_req_full_n");
    sc_trace(mVcdFile, indices_samples_req_write, "(port)indices_samples_req_write");
    sc_trace(mVcdFile, indices_samples_rsp_empty_n, "(port)indices_samples_rsp_empty_n");
    sc_trace(mVcdFile, indices_samples_rsp_read, "(port)indices_samples_rsp_read");
    sc_trace(mVcdFile, indices_samples_address, "(port)indices_samples_address");
    sc_trace(mVcdFile, indices_samples_datain, "(port)indices_samples_datain");
    sc_trace(mVcdFile, indices_samples_dataout, "(port)indices_samples_dataout");
    sc_trace(mVcdFile, indices_samples_size, "(port)indices_samples_size");
    sc_trace(mVcdFile, indices_stride_req_din, "(port)indices_stride_req_din");
    sc_trace(mVcdFile, indices_stride_req_full_n, "(port)indices_stride_req_full_n");
    sc_trace(mVcdFile, indices_stride_req_write, "(port)indices_stride_req_write");
    sc_trace(mVcdFile, indices_stride_rsp_empty_n, "(port)indices_stride_rsp_empty_n");
    sc_trace(mVcdFile, indices_stride_rsp_read, "(port)indices_stride_rsp_read");
    sc_trace(mVcdFile, indices_stride_address, "(port)indices_stride_address");
    sc_trace(mVcdFile, indices_stride_datain, "(port)indices_stride_datain");
    sc_trace(mVcdFile, indices_stride_dataout, "(port)indices_stride_dataout");
    sc_trace(mVcdFile, indices_stride_size, "(port)indices_stride_size");
    sc_trace(mVcdFile, i_size, "(port)i_size");
    sc_trace(mVcdFile, begin_index, "(port)begin_index");
    sc_trace(mVcdFile, begin_sample, "(port)begin_sample");
    sc_trace(mVcdFile, end_index, "(port)end_index");
    sc_trace(mVcdFile, end_sample, "(port)end_sample");
    sc_trace(mVcdFile, stop_on_first, "(port)stop_on_first");
    sc_trace(mVcdFile, accept, "(port)accept");
    sc_trace(mVcdFile, ap_return, "(port)ap_return");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, stop_on_first_read_read_fu_104_p2, "stop_on_first_read_read_fu_104_p2");
    sc_trace(mVcdFile, tmp_i_fu_230_p2, "tmp_i_fu_230_p2");
    sc_trace(mVcdFile, tmp_i_reg_316, "tmp_i_reg_316");
    sc_trace(mVcdFile, tmp_i_10_fu_235_p2, "tmp_i_10_fu_235_p2");
    sc_trace(mVcdFile, tmp_i_10_reg_321, "tmp_i_10_reg_321");
    sc_trace(mVcdFile, c_load_reg_326, "c_load_reg_326");
    sc_trace(mVcdFile, grp_sample_iterator_get_offset_fu_208_ap_return, "grp_sample_iterator_get_offset_fu_208_ap_return");
    sc_trace(mVcdFile, offset_reg_335, "offset_reg_335");
    sc_trace(mVcdFile, or_cond_fu_247_p2, "or_cond_fu_247_p2");
    sc_trace(mVcdFile, or_cond_reg_340, "or_cond_reg_340");
    sc_trace(mVcdFile, grp_nfa_accept_sample_fu_178_ap_done, "grp_nfa_accept_sample_fu_178_ap_done");
    sc_trace(mVcdFile, c_1_fu_252_p2, "c_1_fu_252_p2");
    sc_trace(mVcdFile, c_1_reg_344, "c_1_reg_344");
    sc_trace(mVcdFile, grp_nfa_accept_sample_fu_178_ap_start, "grp_nfa_accept_sample_fu_178_ap_start");
    sc_trace(mVcdFile, grp_nfa_accept_sample_fu_178_ap_idle, "grp_nfa_accept_sample_fu_178_ap_idle");
    sc_trace(mVcdFile, grp_nfa_accept_sample_fu_178_ap_ready, "grp_nfa_accept_sample_fu_178_ap_ready");
    sc_trace(mVcdFile, grp_nfa_accept_sample_fu_178_nfa_initials_buckets_req_din, "grp_nfa_accept_sample_fu_178_nfa_initials_buckets_req_din");
    sc_trace(mVcdFile, grp_nfa_accept_sample_fu_178_nfa_initials_buckets_req_full_n, "grp_nfa_accept_sample_fu_178_nfa_initials_buckets_req_full_n");
    sc_trace(mVcdFile, grp_nfa_accept_sample_fu_178_nfa_initials_buckets_req_write, "grp_nfa_accept_sample_fu_178_nfa_initials_buckets_req_write");
    sc_trace(mVcdFile, grp_nfa_accept_sample_fu_178_nfa_initials_buckets_rsp_empty_n, "grp_nfa_accept_sample_fu_178_nfa_initials_buckets_rsp_empty_n");
    sc_trace(mVcdFile, grp_nfa_accept_sample_fu_178_nfa_initials_buckets_rsp_read, "grp_nfa_accept_sample_fu_178_nfa_initials_buckets_rsp_read");
    sc_trace(mVcdFile, grp_nfa_accept_sample_fu_178_nfa_initials_buckets_address, "grp_nfa_accept_sample_fu_178_nfa_initials_buckets_address");
    sc_trace(mVcdFile, grp_nfa_accept_sample_fu_178_nfa_initials_buckets_datain, "grp_nfa_accept_sample_fu_178_nfa_initials_buckets_datain");
    sc_trace(mVcdFile, grp_nfa_accept_sample_fu_178_nfa_initials_buckets_dataout, "grp_nfa_accept_sample_fu_178_nfa_initials_buckets_dataout");
    sc_trace(mVcdFile, grp_nfa_accept_sample_fu_178_nfa_initials_buckets_size, "grp_nfa_accept_sample_fu_178_nfa_initials_buckets_size");
    sc_trace(mVcdFile, grp_nfa_accept_sample_fu_178_nfa_finals_buckets_req_din, "grp_nfa_accept_sample_fu_178_nfa_finals_buckets_req_din");
    sc_trace(mVcdFile, grp_nfa_accept_sample_fu_178_nfa_finals_buckets_req_full_n, "grp_nfa_accept_sample_fu_178_nfa_finals_buckets_req_full_n");
    sc_trace(mVcdFile, grp_nfa_accept_sample_fu_178_nfa_finals_buckets_req_write, "grp_nfa_accept_sample_fu_178_nfa_finals_buckets_req_write");
    sc_trace(mVcdFile, grp_nfa_accept_sample_fu_178_nfa_finals_buckets_rsp_empty_n, "grp_nfa_accept_sample_fu_178_nfa_finals_buckets_rsp_empty_n");
    sc_trace(mVcdFile, grp_nfa_accept_sample_fu_178_nfa_finals_buckets_rsp_read, "grp_nfa_accept_sample_fu_178_nfa_finals_buckets_rsp_read");
    sc_trace(mVcdFile, grp_nfa_accept_sample_fu_178_nfa_finals_buckets_address, "grp_nfa_accept_sample_fu_178_nfa_finals_buckets_address");
    sc_trace(mVcdFile, grp_nfa_accept_sample_fu_178_nfa_finals_buckets_datain, "grp_nfa_accept_sample_fu_178_nfa_finals_buckets_datain");
    sc_trace(mVcdFile, grp_nfa_accept_sample_fu_178_nfa_finals_buckets_dataout, "grp_nfa_accept_sample_fu_178_nfa_finals_buckets_dataout");
    sc_trace(mVcdFile, grp_nfa_accept_sample_fu_178_nfa_finals_buckets_size, "grp_nfa_accept_sample_fu_178_nfa_finals_buckets_size");
    sc_trace(mVcdFile, grp_nfa_accept_sample_fu_178_nfa_forward_buckets_req_din, "grp_nfa_accept_sample_fu_178_nfa_forward_buckets_req_din");
    sc_trace(mVcdFile, grp_nfa_accept_sample_fu_178_nfa_forward_buckets_req_full_n, "grp_nfa_accept_sample_fu_178_nfa_forward_buckets_req_full_n");
    sc_trace(mVcdFile, grp_nfa_accept_sample_fu_178_nfa_forward_buckets_req_write, "grp_nfa_accept_sample_fu_178_nfa_forward_buckets_req_write");
    sc_trace(mVcdFile, grp_nfa_accept_sample_fu_178_nfa_forward_buckets_rsp_empty_n, "grp_nfa_accept_sample_fu_178_nfa_forward_buckets_rsp_empty_n");
    sc_trace(mVcdFile, grp_nfa_accept_sample_fu_178_nfa_forward_buckets_rsp_read, "grp_nfa_accept_sample_fu_178_nfa_forward_buckets_rsp_read");
    sc_trace(mVcdFile, grp_nfa_accept_sample_fu_178_nfa_forward_buckets_address, "grp_nfa_accept_sample_fu_178_nfa_forward_buckets_address");
    sc_trace(mVcdFile, grp_nfa_accept_sample_fu_178_nfa_forward_buckets_datain, "grp_nfa_accept_sample_fu_178_nfa_forward_buckets_datain");
    sc_trace(mVcdFile, grp_nfa_accept_sample_fu_178_nfa_forward_buckets_dataout, "grp_nfa_accept_sample_fu_178_nfa_forward_buckets_dataout");
    sc_trace(mVcdFile, grp_nfa_accept_sample_fu_178_nfa_forward_buckets_size, "grp_nfa_accept_sample_fu_178_nfa_forward_buckets_size");
    sc_trace(mVcdFile, grp_nfa_accept_sample_fu_178_nfa_symbols, "grp_nfa_accept_sample_fu_178_nfa_symbols");
    sc_trace(mVcdFile, grp_nfa_accept_sample_fu_178_sample_req_din, "grp_nfa_accept_sample_fu_178_sample_req_din");
    sc_trace(mVcdFile, grp_nfa_accept_sample_fu_178_sample_req_full_n, "grp_nfa_accept_sample_fu_178_sample_req_full_n");
    sc_trace(mVcdFile, grp_nfa_accept_sample_fu_178_sample_req_write, "grp_nfa_accept_sample_fu_178_sample_req_write");
    sc_trace(mVcdFile, grp_nfa_accept_sample_fu_178_sample_rsp_empty_n, "grp_nfa_accept_sample_fu_178_sample_rsp_empty_n");
    sc_trace(mVcdFile, grp_nfa_accept_sample_fu_178_sample_rsp_read, "grp_nfa_accept_sample_fu_178_sample_rsp_read");
    sc_trace(mVcdFile, grp_nfa_accept_sample_fu_178_sample_address, "grp_nfa_accept_sample_fu_178_sample_address");
    sc_trace(mVcdFile, grp_nfa_accept_sample_fu_178_sample_datain, "grp_nfa_accept_sample_fu_178_sample_datain");
    sc_trace(mVcdFile, grp_nfa_accept_sample_fu_178_sample_dataout, "grp_nfa_accept_sample_fu_178_sample_dataout");
    sc_trace(mVcdFile, grp_nfa_accept_sample_fu_178_sample_size, "grp_nfa_accept_sample_fu_178_sample_size");
    sc_trace(mVcdFile, grp_nfa_accept_sample_fu_178_tmp_14, "grp_nfa_accept_sample_fu_178_tmp_14");
    sc_trace(mVcdFile, grp_nfa_accept_sample_fu_178_length_r, "grp_nfa_accept_sample_fu_178_length_r");
    sc_trace(mVcdFile, grp_nfa_accept_sample_fu_178_ap_return, "grp_nfa_accept_sample_fu_178_ap_return");
    sc_trace(mVcdFile, grp_sample_iterator_next_fu_194_ap_start, "grp_sample_iterator_next_fu_194_ap_start");
    sc_trace(mVcdFile, grp_sample_iterator_next_fu_194_ap_done, "grp_sample_iterator_next_fu_194_ap_done");
    sc_trace(mVcdFile, grp_sample_iterator_next_fu_194_ap_idle, "grp_sample_iterator_next_fu_194_ap_idle");
    sc_trace(mVcdFile, grp_sample_iterator_next_fu_194_ap_ready, "grp_sample_iterator_next_fu_194_ap_ready");
    sc_trace(mVcdFile, grp_sample_iterator_next_fu_194_indices_samples_req_din, "grp_sample_iterator_next_fu_194_indices_samples_req_din");
    sc_trace(mVcdFile, grp_sample_iterator_next_fu_194_indices_samples_req_full_n, "grp_sample_iterator_next_fu_194_indices_samples_req_full_n");
    sc_trace(mVcdFile, grp_sample_iterator_next_fu_194_indices_samples_req_write, "grp_sample_iterator_next_fu_194_indices_samples_req_write");
    sc_trace(mVcdFile, grp_sample_iterator_next_fu_194_indices_samples_rsp_empty_n, "grp_sample_iterator_next_fu_194_indices_samples_rsp_empty_n");
    sc_trace(mVcdFile, grp_sample_iterator_next_fu_194_indices_samples_rsp_read, "grp_sample_iterator_next_fu_194_indices_samples_rsp_read");
    sc_trace(mVcdFile, grp_sample_iterator_next_fu_194_indices_samples_address, "grp_sample_iterator_next_fu_194_indices_samples_address");
    sc_trace(mVcdFile, grp_sample_iterator_next_fu_194_indices_samples_datain, "grp_sample_iterator_next_fu_194_indices_samples_datain");
    sc_trace(mVcdFile, grp_sample_iterator_next_fu_194_indices_samples_dataout, "grp_sample_iterator_next_fu_194_indices_samples_dataout");
    sc_trace(mVcdFile, grp_sample_iterator_next_fu_194_indices_samples_size, "grp_sample_iterator_next_fu_194_indices_samples_size");
    sc_trace(mVcdFile, grp_sample_iterator_next_fu_194_ap_ce, "grp_sample_iterator_next_fu_194_ap_ce");
    sc_trace(mVcdFile, grp_sample_iterator_next_fu_194_indices_begin_req_din, "grp_sample_iterator_next_fu_194_indices_begin_req_din");
    sc_trace(mVcdFile, grp_sample_iterator_next_fu_194_indices_begin_req_full_n, "grp_sample_iterator_next_fu_194_indices_begin_req_full_n");
    sc_trace(mVcdFile, grp_sample_iterator_next_fu_194_indices_begin_req_write, "grp_sample_iterator_next_fu_194_indices_begin_req_write");
    sc_trace(mVcdFile, grp_sample_iterator_next_fu_194_indices_begin_rsp_empty_n, "grp_sample_iterator_next_fu_194_indices_begin_rsp_empty_n");
    sc_trace(mVcdFile, grp_sample_iterator_next_fu_194_indices_begin_rsp_read, "grp_sample_iterator_next_fu_194_indices_begin_rsp_read");
    sc_trace(mVcdFile, grp_sample_iterator_next_fu_194_indices_begin_address, "grp_sample_iterator_next_fu_194_indices_begin_address");
    sc_trace(mVcdFile, grp_sample_iterator_next_fu_194_indices_begin_datain, "grp_sample_iterator_next_fu_194_indices_begin_datain");
    sc_trace(mVcdFile, grp_sample_iterator_next_fu_194_indices_begin_dataout, "grp_sample_iterator_next_fu_194_indices_begin_dataout");
    sc_trace(mVcdFile, grp_sample_iterator_next_fu_194_indices_begin_size, "grp_sample_iterator_next_fu_194_indices_begin_size");
    sc_trace(mVcdFile, grp_sample_iterator_next_fu_194_indices_stride_req_din, "grp_sample_iterator_next_fu_194_indices_stride_req_din");
    sc_trace(mVcdFile, grp_sample_iterator_next_fu_194_indices_stride_req_full_n, "grp_sample_iterator_next_fu_194_indices_stride_req_full_n");
    sc_trace(mVcdFile, grp_sample_iterator_next_fu_194_indices_stride_req_write, "grp_sample_iterator_next_fu_194_indices_stride_req_write");
    sc_trace(mVcdFile, grp_sample_iterator_next_fu_194_indices_stride_rsp_empty_n, "grp_sample_iterator_next_fu_194_indices_stride_rsp_empty_n");
    sc_trace(mVcdFile, grp_sample_iterator_next_fu_194_indices_stride_rsp_read, "grp_sample_iterator_next_fu_194_indices_stride_rsp_read");
    sc_trace(mVcdFile, grp_sample_iterator_next_fu_194_indices_stride_address, "grp_sample_iterator_next_fu_194_indices_stride_address");
    sc_trace(mVcdFile, grp_sample_iterator_next_fu_194_indices_stride_datain, "grp_sample_iterator_next_fu_194_indices_stride_datain");
    sc_trace(mVcdFile, grp_sample_iterator_next_fu_194_indices_stride_dataout, "grp_sample_iterator_next_fu_194_indices_stride_dataout");
    sc_trace(mVcdFile, grp_sample_iterator_next_fu_194_indices_stride_size, "grp_sample_iterator_next_fu_194_indices_stride_size");
    sc_trace(mVcdFile, grp_sample_iterator_next_fu_194_i_index, "grp_sample_iterator_next_fu_194_i_index");
    sc_trace(mVcdFile, grp_sample_iterator_next_fu_194_i_sample, "grp_sample_iterator_next_fu_194_i_sample");
    sc_trace(mVcdFile, grp_sample_iterator_next_fu_194_ap_return_0, "grp_sample_iterator_next_fu_194_ap_return_0");
    sc_trace(mVcdFile, grp_sample_iterator_next_fu_194_ap_return_1, "grp_sample_iterator_next_fu_194_ap_return_1");
    sc_trace(mVcdFile, grp_sample_iterator_get_offset_fu_208_ap_start, "grp_sample_iterator_get_offset_fu_208_ap_start");
    sc_trace(mVcdFile, grp_sample_iterator_get_offset_fu_208_ap_done, "grp_sample_iterator_get_offset_fu_208_ap_done");
    sc_trace(mVcdFile, grp_sample_iterator_get_offset_fu_208_ap_idle, "grp_sample_iterator_get_offset_fu_208_ap_idle");
    sc_trace(mVcdFile, grp_sample_iterator_get_offset_fu_208_ap_ready, "grp_sample_iterator_get_offset_fu_208_ap_ready");
    sc_trace(mVcdFile, grp_sample_iterator_get_offset_fu_208_indices_stride_req_din, "grp_sample_iterator_get_offset_fu_208_indices_stride_req_din");
    sc_trace(mVcdFile, grp_sample_iterator_get_offset_fu_208_indices_stride_req_full_n, "grp_sample_iterator_get_offset_fu_208_indices_stride_req_full_n");
    sc_trace(mVcdFile, grp_sample_iterator_get_offset_fu_208_indices_stride_req_write, "grp_sample_iterator_get_offset_fu_208_indices_stride_req_write");
    sc_trace(mVcdFile, grp_sample_iterator_get_offset_fu_208_indices_stride_rsp_empty_n, "grp_sample_iterator_get_offset_fu_208_indices_stride_rsp_empty_n");
    sc_trace(mVcdFile, grp_sample_iterator_get_offset_fu_208_indices_stride_rsp_read, "grp_sample_iterator_get_offset_fu_208_indices_stride_rsp_read");
    sc_trace(mVcdFile, grp_sample_iterator_get_offset_fu_208_indices_stride_address, "grp_sample_iterator_get_offset_fu_208_indices_stride_address");
    sc_trace(mVcdFile, grp_sample_iterator_get_offset_fu_208_indices_stride_datain, "grp_sample_iterator_get_offset_fu_208_indices_stride_datain");
    sc_trace(mVcdFile, grp_sample_iterator_get_offset_fu_208_indices_stride_dataout, "grp_sample_iterator_get_offset_fu_208_indices_stride_dataout");
    sc_trace(mVcdFile, grp_sample_iterator_get_offset_fu_208_indices_stride_size, "grp_sample_iterator_get_offset_fu_208_indices_stride_size");
    sc_trace(mVcdFile, grp_sample_iterator_get_offset_fu_208_indices_begin_req_din, "grp_sample_iterator_get_offset_fu_208_indices_begin_req_din");
    sc_trace(mVcdFile, grp_sample_iterator_get_offset_fu_208_indices_begin_req_full_n, "grp_sample_iterator_get_offset_fu_208_indices_begin_req_full_n");
    sc_trace(mVcdFile, grp_sample_iterator_get_offset_fu_208_indices_begin_req_write, "grp_sample_iterator_get_offset_fu_208_indices_begin_req_write");
    sc_trace(mVcdFile, grp_sample_iterator_get_offset_fu_208_indices_begin_rsp_empty_n, "grp_sample_iterator_get_offset_fu_208_indices_begin_rsp_empty_n");
    sc_trace(mVcdFile, grp_sample_iterator_get_offset_fu_208_indices_begin_rsp_read, "grp_sample_iterator_get_offset_fu_208_indices_begin_rsp_read");
    sc_trace(mVcdFile, grp_sample_iterator_get_offset_fu_208_indices_begin_address, "grp_sample_iterator_get_offset_fu_208_indices_begin_address");
    sc_trace(mVcdFile, grp_sample_iterator_get_offset_fu_208_indices_begin_datain, "grp_sample_iterator_get_offset_fu_208_indices_begin_datain");
    sc_trace(mVcdFile, grp_sample_iterator_get_offset_fu_208_indices_begin_dataout, "grp_sample_iterator_get_offset_fu_208_indices_begin_dataout");
    sc_trace(mVcdFile, grp_sample_iterator_get_offset_fu_208_indices_begin_size, "grp_sample_iterator_get_offset_fu_208_indices_begin_size");
    sc_trace(mVcdFile, grp_sample_iterator_get_offset_fu_208_ap_ce, "grp_sample_iterator_get_offset_fu_208_ap_ce");
    sc_trace(mVcdFile, grp_sample_iterator_get_offset_fu_208_i_index, "grp_sample_iterator_get_offset_fu_208_i_index");
    sc_trace(mVcdFile, grp_sample_iterator_get_offset_fu_208_i_sample, "grp_sample_iterator_get_offset_fu_208_i_sample");
    sc_trace(mVcdFile, grp_sample_iterator_get_offset_fu_208_indices_samples_req_din, "grp_sample_iterator_get_offset_fu_208_indices_samples_req_din");
    sc_trace(mVcdFile, grp_sample_iterator_get_offset_fu_208_indices_samples_req_full_n, "grp_sample_iterator_get_offset_fu_208_indices_samples_req_full_n");
    sc_trace(mVcdFile, grp_sample_iterator_get_offset_fu_208_indices_samples_req_write, "grp_sample_iterator_get_offset_fu_208_indices_samples_req_write");
    sc_trace(mVcdFile, grp_sample_iterator_get_offset_fu_208_indices_samples_rsp_empty_n, "grp_sample_iterator_get_offset_fu_208_indices_samples_rsp_empty_n");
    sc_trace(mVcdFile, grp_sample_iterator_get_offset_fu_208_indices_samples_rsp_read, "grp_sample_iterator_get_offset_fu_208_indices_samples_rsp_read");
    sc_trace(mVcdFile, grp_sample_iterator_get_offset_fu_208_indices_samples_address, "grp_sample_iterator_get_offset_fu_208_indices_samples_address");
    sc_trace(mVcdFile, grp_sample_iterator_get_offset_fu_208_indices_samples_datain, "grp_sample_iterator_get_offset_fu_208_indices_samples_datain");
    sc_trace(mVcdFile, grp_sample_iterator_get_offset_fu_208_indices_samples_dataout, "grp_sample_iterator_get_offset_fu_208_indices_samples_dataout");
    sc_trace(mVcdFile, grp_sample_iterator_get_offset_fu_208_indices_samples_size, "grp_sample_iterator_get_offset_fu_208_indices_samples_size");
    sc_trace(mVcdFile, grp_sample_iterator_get_offset_fu_208_sample_buffer_size, "grp_sample_iterator_get_offset_fu_208_sample_buffer_size");
    sc_trace(mVcdFile, grp_sample_iterator_get_offset_fu_208_sample_length, "grp_sample_iterator_get_offset_fu_208_sample_length");
    sc_trace(mVcdFile, i_index_reg_146, "i_index_reg_146");
    sc_trace(mVcdFile, i_sample_reg_156, "i_sample_reg_156");
    sc_trace(mVcdFile, p_0_reg_166, "p_0_reg_166");
    sc_trace(mVcdFile, tmp_i_11_fu_243_p2, "tmp_i_11_fu_243_p2");
    sc_trace(mVcdFile, grp_nfa_accept_sample_fu_178_ap_start_ap_start_reg, "grp_nfa_accept_sample_fu_178_ap_start_ap_start_reg");
    sc_trace(mVcdFile, grp_sample_iterator_next_fu_194_ap_start_ap_start_reg, "grp_sample_iterator_next_fu_194_ap_start_ap_start_reg");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
    sc_trace(mVcdFile, grp_sample_iterator_get_offset_fu_208_ap_start_ap_start_reg, "grp_sample_iterator_get_offset_fu_208_ap_start_ap_start_reg");
    sc_trace(mVcdFile, c_fu_94, "c_fu_94");
#endif

    }
    mHdltvinHandle.open("nfa_accept_samples_generic_hw.hdltvin.dat");
    mHdltvoutHandle.open("nfa_accept_samples_generic_hw.hdltvout.dat");
}

nfa_accept_samples_generic_hw::~nfa_accept_samples_generic_hw() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    mHdltvinHandle << "] " << endl;
    mHdltvoutHandle << "] " << endl;
    mHdltvinHandle.close();
    mHdltvoutHandle.close();
    delete grp_nfa_accept_sample_fu_178;
    delete grp_sample_iterator_next_fu_194;
    delete grp_sample_iterator_get_offset_fu_208;
}

void nfa_accept_samples_generic_hw::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_st1_fsm_0;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ((esl_seteq<1,5,5>(ap_ST_st15_fsm_14, ap_CS_fsm.read()) && 
         esl_seteq<1,1,1>(or_cond_reg_340.read(), ap_const_lv1_0))) {
        c_fu_94 = c_1_reg_344.read();
    } else if ((esl_seteq<1,5,5>(ap_ST_st1_fsm_0, ap_CS_fsm.read()) && 
                !esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0))) {
        c_fu_94 = ap_const_lv32_0;
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        grp_nfa_accept_sample_fu_178_ap_start_ap_start_reg = ap_const_logic_0;
    } else {
        if (esl_seteq<1,5,5>(ap_ST_st13_fsm_12, ap_CS_fsm.read())) {
            grp_nfa_accept_sample_fu_178_ap_start_ap_start_reg = ap_const_logic_1;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, grp_nfa_accept_sample_fu_178_ap_ready.read())) {
            grp_nfa_accept_sample_fu_178_ap_start_ap_start_reg = ap_const_logic_0;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        grp_sample_iterator_get_offset_fu_208_ap_start_ap_start_reg = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,5,5>(ap_ST_st3_fsm_2, ap_CS_fsm.read()) && 
             esl_seteq<1,5,5>(ap_ST_st4_fsm_3, ap_NS_fsm.read()))) {
            grp_sample_iterator_get_offset_fu_208_ap_start_ap_start_reg = ap_const_logic_1;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, grp_sample_iterator_get_offset_fu_208_ap_ready.read())) {
            grp_sample_iterator_get_offset_fu_208_ap_start_ap_start_reg = ap_const_logic_0;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        grp_sample_iterator_next_fu_194_ap_start_ap_start_reg = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,5,5>(ap_ST_st14_fsm_13, ap_CS_fsm.read()) && 
             esl_seteq<1,5,5>(ap_ST_st15_fsm_14, ap_NS_fsm.read()))) {
            grp_sample_iterator_next_fu_194_ap_start_ap_start_reg = ap_const_logic_1;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, grp_sample_iterator_next_fu_194_ap_ready.read())) {
            grp_sample_iterator_next_fu_194_ap_start_ap_start_reg = ap_const_logic_0;
        }
    }
    if (esl_seteq<1,5,5>(ap_ST_st23_fsm_22, ap_CS_fsm.read())) {
        i_index_reg_146 = grp_sample_iterator_next_fu_194_ap_return_0.read();
    } else if ((esl_seteq<1,5,5>(ap_ST_st1_fsm_0, ap_CS_fsm.read()) && 
                !esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0))) {
        i_index_reg_146 = begin_index.read();
    }
    if (esl_seteq<1,5,5>(ap_ST_st23_fsm_22, ap_CS_fsm.read())) {
        i_sample_reg_156 = grp_sample_iterator_next_fu_194_ap_return_1.read();
    } else if ((esl_seteq<1,5,5>(ap_ST_st1_fsm_0, ap_CS_fsm.read()) && 
                !esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0))) {
        i_sample_reg_156 = begin_sample.read();
    }
    if ((esl_seteq<1,5,5>(ap_ST_st14_fsm_13, ap_CS_fsm.read()) && 
         !esl_seteq<1,1,1>(ap_const_logic_0, grp_nfa_accept_sample_fu_178_ap_done.read()) && 
         esl_seteq<1,1,1>(or_cond_fu_247_p2.read(), ap_const_lv1_0) && 
         !esl_seteq<1,1,1>(stop_on_first_read_read_fu_104_p2.read(), ap_const_lv1_0))) {
        p_0_reg_166 = ap_const_lv32_1;
    } else if ((esl_seteq<1,5,5>(ap_ST_st3_fsm_2, ap_CS_fsm.read()) && 
                !esl_seteq<1,1,1>(ap_const_lv1_0, tmp_i_11_fu_243_p2.read()))) {
        p_0_reg_166 = c_fu_94.read();
    }
    if ((esl_seteq<1,5,5>(ap_ST_st14_fsm_13, ap_CS_fsm.read()) && !esl_seteq<1,1,1>(ap_const_logic_0, grp_nfa_accept_sample_fu_178_ap_done.read()) && esl_seteq<1,1,1>(or_cond_fu_247_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(stop_on_first_read_read_fu_104_p2.read(), ap_const_lv1_0))) {
        c_1_reg_344 = c_1_fu_252_p2.read();
    }
    if (esl_seteq<1,5,5>(ap_ST_st3_fsm_2, ap_CS_fsm.read())) {
        c_load_reg_326 = c_fu_94.read();
    }
    if (esl_seteq<1,5,5>(ap_ST_st13_fsm_12, ap_CS_fsm.read())) {
        offset_reg_335 = grp_sample_iterator_get_offset_fu_208_ap_return.read();
    }
    if ((esl_seteq<1,5,5>(ap_ST_st14_fsm_13, ap_CS_fsm.read()) && !esl_seteq<1,1,1>(ap_const_logic_0, grp_nfa_accept_sample_fu_178_ap_done.read()))) {
        or_cond_reg_340 = or_cond_fu_247_p2.read();
    }
    if (esl_seteq<1,5,5>(ap_ST_st2_fsm_1, ap_CS_fsm.read())) {
        tmp_i_10_reg_321 = tmp_i_10_fu_235_p2.read();
        tmp_i_reg_316 = tmp_i_fu_230_p2.read();
    }
}

void nfa_accept_samples_generic_hw::thread_ap_done() {
    if (esl_seteq<1,5,5>(ap_ST_st24_fsm_23, ap_CS_fsm.read())) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void nfa_accept_samples_generic_hw::thread_ap_idle() {
    if ((!esl_seteq<1,1,1>(ap_const_logic_1, ap_start.read()) && 
         esl_seteq<1,5,5>(ap_ST_st1_fsm_0, ap_CS_fsm.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void nfa_accept_samples_generic_hw::thread_ap_ready() {
    if (esl_seteq<1,5,5>(ap_ST_st24_fsm_23, ap_CS_fsm.read())) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void nfa_accept_samples_generic_hw::thread_ap_return() {
    ap_return = p_0_reg_166.read();
}

void nfa_accept_samples_generic_hw::thread_c_1_fu_252_p2() {
    c_1_fu_252_p2 = (!c_load_reg_326.read().is_01() || !ap_const_lv32_1.is_01())? sc_lv<32>(): (sc_bigint<32>(c_load_reg_326.read()) + sc_biguint<32>(ap_const_lv32_1));
}

void nfa_accept_samples_generic_hw::thread_grp_nfa_accept_sample_fu_178_ap_start() {
    grp_nfa_accept_sample_fu_178_ap_start = grp_nfa_accept_sample_fu_178_ap_start_ap_start_reg.read();
}

void nfa_accept_samples_generic_hw::thread_grp_nfa_accept_sample_fu_178_length_r() {
    grp_nfa_accept_sample_fu_178_length_r = sample_length.read();
}

void nfa_accept_samples_generic_hw::thread_grp_nfa_accept_sample_fu_178_nfa_finals_buckets_datain() {
    grp_nfa_accept_sample_fu_178_nfa_finals_buckets_datain = nfa_finals_buckets_datain.read();
}

void nfa_accept_samples_generic_hw::thread_grp_nfa_accept_sample_fu_178_nfa_finals_buckets_req_full_n() {
    grp_nfa_accept_sample_fu_178_nfa_finals_buckets_req_full_n = nfa_finals_buckets_req_full_n.read();
}

void nfa_accept_samples_generic_hw::thread_grp_nfa_accept_sample_fu_178_nfa_finals_buckets_rsp_empty_n() {
    grp_nfa_accept_sample_fu_178_nfa_finals_buckets_rsp_empty_n = nfa_finals_buckets_rsp_empty_n.read();
}

void nfa_accept_samples_generic_hw::thread_grp_nfa_accept_sample_fu_178_nfa_forward_buckets_datain() {
    grp_nfa_accept_sample_fu_178_nfa_forward_buckets_datain = nfa_forward_buckets_datain.read();
}

void nfa_accept_samples_generic_hw::thread_grp_nfa_accept_sample_fu_178_nfa_forward_buckets_req_full_n() {
    grp_nfa_accept_sample_fu_178_nfa_forward_buckets_req_full_n = nfa_forward_buckets_req_full_n.read();
}

void nfa_accept_samples_generic_hw::thread_grp_nfa_accept_sample_fu_178_nfa_forward_buckets_rsp_empty_n() {
    grp_nfa_accept_sample_fu_178_nfa_forward_buckets_rsp_empty_n = nfa_forward_buckets_rsp_empty_n.read();
}

void nfa_accept_samples_generic_hw::thread_grp_nfa_accept_sample_fu_178_nfa_initials_buckets_datain() {
    grp_nfa_accept_sample_fu_178_nfa_initials_buckets_datain = nfa_initials_buckets_datain.read();
}

void nfa_accept_samples_generic_hw::thread_grp_nfa_accept_sample_fu_178_nfa_initials_buckets_req_full_n() {
    grp_nfa_accept_sample_fu_178_nfa_initials_buckets_req_full_n = nfa_initials_buckets_req_full_n.read();
}

void nfa_accept_samples_generic_hw::thread_grp_nfa_accept_sample_fu_178_nfa_initials_buckets_rsp_empty_n() {
    grp_nfa_accept_sample_fu_178_nfa_initials_buckets_rsp_empty_n = nfa_initials_buckets_rsp_empty_n.read();
}

void nfa_accept_samples_generic_hw::thread_grp_nfa_accept_sample_fu_178_nfa_symbols() {
    grp_nfa_accept_sample_fu_178_nfa_symbols = nfa_symbols.read();
}

void nfa_accept_samples_generic_hw::thread_grp_nfa_accept_sample_fu_178_sample_datain() {
    grp_nfa_accept_sample_fu_178_sample_datain = sample_buffer_datain.read();
}

void nfa_accept_samples_generic_hw::thread_grp_nfa_accept_sample_fu_178_sample_req_full_n() {
    grp_nfa_accept_sample_fu_178_sample_req_full_n = sample_buffer_req_full_n.read();
}

void nfa_accept_samples_generic_hw::thread_grp_nfa_accept_sample_fu_178_sample_rsp_empty_n() {
    grp_nfa_accept_sample_fu_178_sample_rsp_empty_n = sample_buffer_rsp_empty_n.read();
}

void nfa_accept_samples_generic_hw::thread_grp_nfa_accept_sample_fu_178_tmp_14() {
    grp_nfa_accept_sample_fu_178_tmp_14 = offset_reg_335.read();
}

void nfa_accept_samples_generic_hw::thread_grp_sample_iterator_get_offset_fu_208_ap_ce() {
    grp_sample_iterator_get_offset_fu_208_ap_ce = ap_const_logic_1;
}

void nfa_accept_samples_generic_hw::thread_grp_sample_iterator_get_offset_fu_208_ap_start() {
    grp_sample_iterator_get_offset_fu_208_ap_start = grp_sample_iterator_get_offset_fu_208_ap_start_ap_start_reg.read();
}

void nfa_accept_samples_generic_hw::thread_grp_sample_iterator_get_offset_fu_208_i_index() {
    grp_sample_iterator_get_offset_fu_208_i_index = i_index_reg_146.read();
}

void nfa_accept_samples_generic_hw::thread_grp_sample_iterator_get_offset_fu_208_i_sample() {
    grp_sample_iterator_get_offset_fu_208_i_sample = i_sample_reg_156.read();
}

void nfa_accept_samples_generic_hw::thread_grp_sample_iterator_get_offset_fu_208_indices_begin_datain() {
    grp_sample_iterator_get_offset_fu_208_indices_begin_datain = indices_begin_datain.read();
}

void nfa_accept_samples_generic_hw::thread_grp_sample_iterator_get_offset_fu_208_indices_begin_req_full_n() {
    grp_sample_iterator_get_offset_fu_208_indices_begin_req_full_n = indices_begin_req_full_n.read();
}

void nfa_accept_samples_generic_hw::thread_grp_sample_iterator_get_offset_fu_208_indices_begin_rsp_empty_n() {
    grp_sample_iterator_get_offset_fu_208_indices_begin_rsp_empty_n = indices_begin_rsp_empty_n.read();
}

void nfa_accept_samples_generic_hw::thread_grp_sample_iterator_get_offset_fu_208_indices_samples_datain() {
    grp_sample_iterator_get_offset_fu_208_indices_samples_datain = indices_samples_datain.read();
}

void nfa_accept_samples_generic_hw::thread_grp_sample_iterator_get_offset_fu_208_indices_samples_req_full_n() {
    grp_sample_iterator_get_offset_fu_208_indices_samples_req_full_n = indices_samples_req_full_n.read();
}

void nfa_accept_samples_generic_hw::thread_grp_sample_iterator_get_offset_fu_208_indices_samples_rsp_empty_n() {
    grp_sample_iterator_get_offset_fu_208_indices_samples_rsp_empty_n = indices_samples_rsp_empty_n.read();
}

void nfa_accept_samples_generic_hw::thread_grp_sample_iterator_get_offset_fu_208_indices_stride_datain() {
    grp_sample_iterator_get_offset_fu_208_indices_stride_datain = indices_stride_datain.read();
}

void nfa_accept_samples_generic_hw::thread_grp_sample_iterator_get_offset_fu_208_indices_stride_req_full_n() {
    grp_sample_iterator_get_offset_fu_208_indices_stride_req_full_n = indices_stride_req_full_n.read();
}

void nfa_accept_samples_generic_hw::thread_grp_sample_iterator_get_offset_fu_208_indices_stride_rsp_empty_n() {
    grp_sample_iterator_get_offset_fu_208_indices_stride_rsp_empty_n = indices_stride_rsp_empty_n.read();
}

void nfa_accept_samples_generic_hw::thread_grp_sample_iterator_get_offset_fu_208_sample_buffer_size() {
    grp_sample_iterator_get_offset_fu_208_sample_buffer_size = sample_buffer_length.read();
}

void nfa_accept_samples_generic_hw::thread_grp_sample_iterator_get_offset_fu_208_sample_length() {
    grp_sample_iterator_get_offset_fu_208_sample_length = sample_length.read();
}

void nfa_accept_samples_generic_hw::thread_grp_sample_iterator_next_fu_194_ap_ce() {
    grp_sample_iterator_next_fu_194_ap_ce = ap_const_logic_1;
}

void nfa_accept_samples_generic_hw::thread_grp_sample_iterator_next_fu_194_ap_start() {
    grp_sample_iterator_next_fu_194_ap_start = grp_sample_iterator_next_fu_194_ap_start_ap_start_reg.read();
}

void nfa_accept_samples_generic_hw::thread_grp_sample_iterator_next_fu_194_i_index() {
    grp_sample_iterator_next_fu_194_i_index = i_index_reg_146.read();
}

void nfa_accept_samples_generic_hw::thread_grp_sample_iterator_next_fu_194_i_sample() {
    grp_sample_iterator_next_fu_194_i_sample = i_sample_reg_156.read();
}

void nfa_accept_samples_generic_hw::thread_grp_sample_iterator_next_fu_194_indices_begin_datain() {
    grp_sample_iterator_next_fu_194_indices_begin_datain = indices_begin_datain.read();
}

void nfa_accept_samples_generic_hw::thread_grp_sample_iterator_next_fu_194_indices_begin_req_full_n() {
    grp_sample_iterator_next_fu_194_indices_begin_req_full_n = indices_begin_req_full_n.read();
}

void nfa_accept_samples_generic_hw::thread_grp_sample_iterator_next_fu_194_indices_begin_rsp_empty_n() {
    grp_sample_iterator_next_fu_194_indices_begin_rsp_empty_n = indices_begin_rsp_empty_n.read();
}

void nfa_accept_samples_generic_hw::thread_grp_sample_iterator_next_fu_194_indices_samples_datain() {
    grp_sample_iterator_next_fu_194_indices_samples_datain = indices_samples_datain.read();
}

void nfa_accept_samples_generic_hw::thread_grp_sample_iterator_next_fu_194_indices_samples_req_full_n() {
    grp_sample_iterator_next_fu_194_indices_samples_req_full_n = indices_samples_req_full_n.read();
}

void nfa_accept_samples_generic_hw::thread_grp_sample_iterator_next_fu_194_indices_samples_rsp_empty_n() {
    grp_sample_iterator_next_fu_194_indices_samples_rsp_empty_n = indices_samples_rsp_empty_n.read();
}

void nfa_accept_samples_generic_hw::thread_grp_sample_iterator_next_fu_194_indices_stride_datain() {
    grp_sample_iterator_next_fu_194_indices_stride_datain = indices_stride_datain.read();
}

void nfa_accept_samples_generic_hw::thread_grp_sample_iterator_next_fu_194_indices_stride_req_full_n() {
    grp_sample_iterator_next_fu_194_indices_stride_req_full_n = indices_stride_req_full_n.read();
}

void nfa_accept_samples_generic_hw::thread_grp_sample_iterator_next_fu_194_indices_stride_rsp_empty_n() {
    grp_sample_iterator_next_fu_194_indices_stride_rsp_empty_n = indices_stride_rsp_empty_n.read();
}

void nfa_accept_samples_generic_hw::thread_indices_begin_address() {
    if ((esl_seteq<1,5,5>(ap_ST_st13_fsm_12, ap_CS_fsm.read()) || 
         esl_seteq<1,5,5>(ap_ST_st4_fsm_3, ap_CS_fsm.read()) || 
         esl_seteq<1,5,5>(ap_ST_st5_fsm_4, ap_CS_fsm.read()) || 
         esl_seteq<1,5,5>(ap_ST_st6_fsm_5, ap_CS_fsm.read()) || 
         esl_seteq<1,5,5>(ap_ST_st7_fsm_6, ap_CS_fsm.read()) || 
         esl_seteq<1,5,5>(ap_ST_st8_fsm_7, ap_CS_fsm.read()) || 
         esl_seteq<1,5,5>(ap_ST_st9_fsm_8, ap_CS_fsm.read()) || 
         esl_seteq<1,5,5>(ap_ST_st10_fsm_9, ap_CS_fsm.read()) || 
         esl_seteq<1,5,5>(ap_ST_st11_fsm_10, ap_CS_fsm.read()) || 
         esl_seteq<1,5,5>(ap_ST_st12_fsm_11, ap_CS_fsm.read()))) {
        indices_begin_address = grp_sample_iterator_get_offset_fu_208_indices_begin_address.read();
    } else if ((esl_seteq<1,5,5>(ap_ST_st23_fsm_22, ap_CS_fsm.read()) || 
                esl_seteq<1,5,5>(ap_ST_st15_fsm_14, ap_CS_fsm.read()) || 
                esl_seteq<1,5,5>(ap_ST_st16_fsm_15, ap_CS_fsm.read()) || 
                esl_seteq<1,5,5>(ap_ST_st17_fsm_16, ap_CS_fsm.read()) || 
                esl_seteq<1,5,5>(ap_ST_st18_fsm_17, ap_CS_fsm.read()) || 
                esl_seteq<1,5,5>(ap_ST_st19_fsm_18, ap_CS_fsm.read()) || 
                esl_seteq<1,5,5>(ap_ST_st20_fsm_19, ap_CS_fsm.read()) || 
                esl_seteq<1,5,5>(ap_ST_st21_fsm_20, ap_CS_fsm.read()) || 
                esl_seteq<1,5,5>(ap_ST_st22_fsm_21, ap_CS_fsm.read()))) {
        indices_begin_address = grp_sample_iterator_next_fu_194_indices_begin_address.read();
    } else {
        indices_begin_address = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    }
}

void nfa_accept_samples_generic_hw::thread_indices_begin_dataout() {
    if ((esl_seteq<1,5,5>(ap_ST_st13_fsm_12, ap_CS_fsm.read()) || 
         esl_seteq<1,5,5>(ap_ST_st4_fsm_3, ap_CS_fsm.read()) || 
         esl_seteq<1,5,5>(ap_ST_st5_fsm_4, ap_CS_fsm.read()) || 
         esl_seteq<1,5,5>(ap_ST_st6_fsm_5, ap_CS_fsm.read()) || 
         esl_seteq<1,5,5>(ap_ST_st7_fsm_6, ap_CS_fsm.read()) || 
         esl_seteq<1,5,5>(ap_ST_st8_fsm_7, ap_CS_fsm.read()) || 
         esl_seteq<1,5,5>(ap_ST_st9_fsm_8, ap_CS_fsm.read()) || 
         esl_seteq<1,5,5>(ap_ST_st10_fsm_9, ap_CS_fsm.read()) || 
         esl_seteq<1,5,5>(ap_ST_st11_fsm_10, ap_CS_fsm.read()) || 
         esl_seteq<1,5,5>(ap_ST_st12_fsm_11, ap_CS_fsm.read()))) {
        indices_begin_dataout = grp_sample_iterator_get_offset_fu_208_indices_begin_dataout.read();
    } else if ((esl_seteq<1,5,5>(ap_ST_st23_fsm_22, ap_CS_fsm.read()) || 
                esl_seteq<1,5,5>(ap_ST_st15_fsm_14, ap_CS_fsm.read()) || 
                esl_seteq<1,5,5>(ap_ST_st16_fsm_15, ap_CS_fsm.read()) || 
                esl_seteq<1,5,5>(ap_ST_st17_fsm_16, ap_CS_fsm.read()) || 
                esl_seteq<1,5,5>(ap_ST_st18_fsm_17, ap_CS_fsm.read()) || 
                esl_seteq<1,5,5>(ap_ST_st19_fsm_18, ap_CS_fsm.read()) || 
                esl_seteq<1,5,5>(ap_ST_st20_fsm_19, ap_CS_fsm.read()) || 
                esl_seteq<1,5,5>(ap_ST_st21_fsm_20, ap_CS_fsm.read()) || 
                esl_seteq<1,5,5>(ap_ST_st22_fsm_21, ap_CS_fsm.read()))) {
        indices_begin_dataout = grp_sample_iterator_next_fu_194_indices_begin_dataout.read();
    } else {
        indices_begin_dataout = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    }
}

void nfa_accept_samples_generic_hw::thread_indices_begin_req_din() {
    if ((esl_seteq<1,5,5>(ap_ST_st13_fsm_12, ap_CS_fsm.read()) || 
         esl_seteq<1,5,5>(ap_ST_st4_fsm_3, ap_CS_fsm.read()) || 
         esl_seteq<1,5,5>(ap_ST_st5_fsm_4, ap_CS_fsm.read()) || 
         esl_seteq<1,5,5>(ap_ST_st6_fsm_5, ap_CS_fsm.read()) || 
         esl_seteq<1,5,5>(ap_ST_st7_fsm_6, ap_CS_fsm.read()) || 
         esl_seteq<1,5,5>(ap_ST_st8_fsm_7, ap_CS_fsm.read()) || 
         esl_seteq<1,5,5>(ap_ST_st9_fsm_8, ap_CS_fsm.read()) || 
         esl_seteq<1,5,5>(ap_ST_st10_fsm_9, ap_CS_fsm.read()) || 
         esl_seteq<1,5,5>(ap_ST_st11_fsm_10, ap_CS_fsm.read()) || 
         esl_seteq<1,5,5>(ap_ST_st12_fsm_11, ap_CS_fsm.read()))) {
        indices_begin_req_din = grp_sample_iterator_get_offset_fu_208_indices_begin_req_din.read();
    } else if ((esl_seteq<1,5,5>(ap_ST_st23_fsm_22, ap_CS_fsm.read()) || 
                esl_seteq<1,5,5>(ap_ST_st15_fsm_14, ap_CS_fsm.read()) || 
                esl_seteq<1,5,5>(ap_ST_st16_fsm_15, ap_CS_fsm.read()) || 
                esl_seteq<1,5,5>(ap_ST_st17_fsm_16, ap_CS_fsm.read()) || 
                esl_seteq<1,5,5>(ap_ST_st18_fsm_17, ap_CS_fsm.read()) || 
                esl_seteq<1,5,5>(ap_ST_st19_fsm_18, ap_CS_fsm.read()) || 
                esl_seteq<1,5,5>(ap_ST_st20_fsm_19, ap_CS_fsm.read()) || 
                esl_seteq<1,5,5>(ap_ST_st21_fsm_20, ap_CS_fsm.read()) || 
                esl_seteq<1,5,5>(ap_ST_st22_fsm_21, ap_CS_fsm.read()))) {
        indices_begin_req_din = grp_sample_iterator_next_fu_194_indices_begin_req_din.read();
    } else {
        indices_begin_req_din = sc_logic('X');
    }
}

void nfa_accept_samples_generic_hw::thread_indices_begin_req_write() {
    if ((esl_seteq<1,5,5>(ap_ST_st13_fsm_12, ap_CS_fsm.read()) || 
         esl_seteq<1,5,5>(ap_ST_st4_fsm_3, ap_CS_fsm.read()) || 
         esl_seteq<1,5,5>(ap_ST_st5_fsm_4, ap_CS_fsm.read()) || 
         esl_seteq<1,5,5>(ap_ST_st6_fsm_5, ap_CS_fsm.read()) || 
         esl_seteq<1,5,5>(ap_ST_st7_fsm_6, ap_CS_fsm.read()) || 
         esl_seteq<1,5,5>(ap_ST_st8_fsm_7, ap_CS_fsm.read()) || 
         esl_seteq<1,5,5>(ap_ST_st9_fsm_8, ap_CS_fsm.read()) || 
         esl_seteq<1,5,5>(ap_ST_st10_fsm_9, ap_CS_fsm.read()) || 
         esl_seteq<1,5,5>(ap_ST_st11_fsm_10, ap_CS_fsm.read()) || 
         esl_seteq<1,5,5>(ap_ST_st12_fsm_11, ap_CS_fsm.read()))) {
        indices_begin_req_write = grp_sample_iterator_get_offset_fu_208_indices_begin_req_write.read();
    } else if ((esl_seteq<1,5,5>(ap_ST_st23_fsm_22, ap_CS_fsm.read()) || 
                esl_seteq<1,5,5>(ap_ST_st15_fsm_14, ap_CS_fsm.read()) || 
                esl_seteq<1,5,5>(ap_ST_st16_fsm_15, ap_CS_fsm.read()) || 
                esl_seteq<1,5,5>(ap_ST_st17_fsm_16, ap_CS_fsm.read()) || 
                esl_seteq<1,5,5>(ap_ST_st18_fsm_17, ap_CS_fsm.read()) || 
                esl_seteq<1,5,5>(ap_ST_st19_fsm_18, ap_CS_fsm.read()) || 
                esl_seteq<1,5,5>(ap_ST_st20_fsm_19, ap_CS_fsm.read()) || 
                esl_seteq<1,5,5>(ap_ST_st21_fsm_20, ap_CS_fsm.read()) || 
                esl_seteq<1,5,5>(ap_ST_st22_fsm_21, ap_CS_fsm.read()))) {
        indices_begin_req_write = grp_sample_iterator_next_fu_194_indices_begin_req_write.read();
    } else {
        indices_begin_req_write = sc_logic('X');
    }
}

void nfa_accept_samples_generic_hw::thread_indices_begin_rsp_read() {
    if ((esl_seteq<1,5,5>(ap_ST_st13_fsm_12, ap_CS_fsm.read()) || 
         esl_seteq<1,5,5>(ap_ST_st4_fsm_3, ap_CS_fsm.read()) || 
         esl_seteq<1,5,5>(ap_ST_st5_fsm_4, ap_CS_fsm.read()) || 
         esl_seteq<1,5,5>(ap_ST_st6_fsm_5, ap_CS_fsm.read()) || 
         esl_seteq<1,5,5>(ap_ST_st7_fsm_6, ap_CS_fsm.read()) || 
         esl_seteq<1,5,5>(ap_ST_st8_fsm_7, ap_CS_fsm.read()) || 
         esl_seteq<1,5,5>(ap_ST_st9_fsm_8, ap_CS_fsm.read()) || 
         esl_seteq<1,5,5>(ap_ST_st10_fsm_9, ap_CS_fsm.read()) || 
         esl_seteq<1,5,5>(ap_ST_st11_fsm_10, ap_CS_fsm.read()) || 
         esl_seteq<1,5,5>(ap_ST_st12_fsm_11, ap_CS_fsm.read()))) {
        indices_begin_rsp_read = grp_sample_iterator_get_offset_fu_208_indices_begin_rsp_read.read();
    } else if ((esl_seteq<1,5,5>(ap_ST_st23_fsm_22, ap_CS_fsm.read()) || 
                esl_seteq<1,5,5>(ap_ST_st15_fsm_14, ap_CS_fsm.read()) || 
                esl_seteq<1,5,5>(ap_ST_st16_fsm_15, ap_CS_fsm.read()) || 
                esl_seteq<1,5,5>(ap_ST_st17_fsm_16, ap_CS_fsm.read()) || 
                esl_seteq<1,5,5>(ap_ST_st18_fsm_17, ap_CS_fsm.read()) || 
                esl_seteq<1,5,5>(ap_ST_st19_fsm_18, ap_CS_fsm.read()) || 
                esl_seteq<1,5,5>(ap_ST_st20_fsm_19, ap_CS_fsm.read()) || 
                esl_seteq<1,5,5>(ap_ST_st21_fsm_20, ap_CS_fsm.read()) || 
                esl_seteq<1,5,5>(ap_ST_st22_fsm_21, ap_CS_fsm.read()))) {
        indices_begin_rsp_read = grp_sample_iterator_next_fu_194_indices_begin_rsp_read.read();
    } else {
        indices_begin_rsp_read = sc_logic('X');
    }
}

void nfa_accept_samples_generic_hw::thread_indices_begin_size() {
    if ((esl_seteq<1,5,5>(ap_ST_st13_fsm_12, ap_CS_fsm.read()) || 
         esl_seteq<1,5,5>(ap_ST_st4_fsm_3, ap_CS_fsm.read()) || 
         esl_seteq<1,5,5>(ap_ST_st5_fsm_4, ap_CS_fsm.read()) || 
         esl_seteq<1,5,5>(ap_ST_st6_fsm_5, ap_CS_fsm.read()) || 
         esl_seteq<1,5,5>(ap_ST_st7_fsm_6, ap_CS_fsm.read()) || 
         esl_seteq<1,5,5>(ap_ST_st8_fsm_7, ap_CS_fsm.read()) || 
         esl_seteq<1,5,5>(ap_ST_st9_fsm_8, ap_CS_fsm.read()) || 
         esl_seteq<1,5,5>(ap_ST_st10_fsm_9, ap_CS_fsm.read()) || 
         esl_seteq<1,5,5>(ap_ST_st11_fsm_10, ap_CS_fsm.read()) || 
         esl_seteq<1,5,5>(ap_ST_st12_fsm_11, ap_CS_fsm.read()))) {
        indices_begin_size = grp_sample_iterator_get_offset_fu_208_indices_begin_size.read();
    } else if ((esl_seteq<1,5,5>(ap_ST_st23_fsm_22, ap_CS_fsm.read()) || 
                esl_seteq<1,5,5>(ap_ST_st15_fsm_14, ap_CS_fsm.read()) || 
                esl_seteq<1,5,5>(ap_ST_st16_fsm_15, ap_CS_fsm.read()) || 
                esl_seteq<1,5,5>(ap_ST_st17_fsm_16, ap_CS_fsm.read()) || 
                esl_seteq<1,5,5>(ap_ST_st18_fsm_17, ap_CS_fsm.read()) || 
                esl_seteq<1,5,5>(ap_ST_st19_fsm_18, ap_CS_fsm.read()) || 
                esl_seteq<1,5,5>(ap_ST_st20_fsm_19, ap_CS_fsm.read()) || 
                esl_seteq<1,5,5>(ap_ST_st21_fsm_20, ap_CS_fsm.read()) || 
                esl_seteq<1,5,5>(ap_ST_st22_fsm_21, ap_CS_fsm.read()))) {
        indices_begin_size = grp_sample_iterator_next_fu_194_indices_begin_size.read();
    } else {
        indices_begin_size = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    }
}

void nfa_accept_samples_generic_hw::thread_indices_samples_address() {
    if ((esl_seteq<1,5,5>(ap_ST_st13_fsm_12, ap_CS_fsm.read()) || 
         esl_seteq<1,5,5>(ap_ST_st4_fsm_3, ap_CS_fsm.read()) || 
         esl_seteq<1,5,5>(ap_ST_st5_fsm_4, ap_CS_fsm.read()) || 
         esl_seteq<1,5,5>(ap_ST_st6_fsm_5, ap_CS_fsm.read()) || 
         esl_seteq<1,5,5>(ap_ST_st7_fsm_6, ap_CS_fsm.read()) || 
         esl_seteq<1,5,5>(ap_ST_st8_fsm_7, ap_CS_fsm.read()) || 
         esl_seteq<1,5,5>(ap_ST_st9_fsm_8, ap_CS_fsm.read()) || 
         esl_seteq<1,5,5>(ap_ST_st10_fsm_9, ap_CS_fsm.read()) || 
         esl_seteq<1,5,5>(ap_ST_st11_fsm_10, ap_CS_fsm.read()) || 
         esl_seteq<1,5,5>(ap_ST_st12_fsm_11, ap_CS_fsm.read()))) {
        indices_samples_address = grp_sample_iterator_get_offset_fu_208_indices_samples_address.read();
    } else if ((esl_seteq<1,5,5>(ap_ST_st23_fsm_22, ap_CS_fsm.read()) || 
                esl_seteq<1,5,5>(ap_ST_st15_fsm_14, ap_CS_fsm.read()) || 
                esl_seteq<1,5,5>(ap_ST_st16_fsm_15, ap_CS_fsm.read()) || 
                esl_seteq<1,5,5>(ap_ST_st17_fsm_16, ap_CS_fsm.read()) || 
                esl_seteq<1,5,5>(ap_ST_st18_fsm_17, ap_CS_fsm.read()) || 
                esl_seteq<1,5,5>(ap_ST_st19_fsm_18, ap_CS_fsm.read()) || 
                esl_seteq<1,5,5>(ap_ST_st20_fsm_19, ap_CS_fsm.read()) || 
                esl_seteq<1,5,5>(ap_ST_st21_fsm_20, ap_CS_fsm.read()) || 
                esl_seteq<1,5,5>(ap_ST_st22_fsm_21, ap_CS_fsm.read()))) {
        indices_samples_address = grp_sample_iterator_next_fu_194_indices_samples_address.read();
    } else {
        indices_samples_address = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    }
}

void nfa_accept_samples_generic_hw::thread_indices_samples_dataout() {
    if ((esl_seteq<1,5,5>(ap_ST_st13_fsm_12, ap_CS_fsm.read()) || 
         esl_seteq<1,5,5>(ap_ST_st4_fsm_3, ap_CS_fsm.read()) || 
         esl_seteq<1,5,5>(ap_ST_st5_fsm_4, ap_CS_fsm.read()) || 
         esl_seteq<1,5,5>(ap_ST_st6_fsm_5, ap_CS_fsm.read()) || 
         esl_seteq<1,5,5>(ap_ST_st7_fsm_6, ap_CS_fsm.read()) || 
         esl_seteq<1,5,5>(ap_ST_st8_fsm_7, ap_CS_fsm.read()) || 
         esl_seteq<1,5,5>(ap_ST_st9_fsm_8, ap_CS_fsm.read()) || 
         esl_seteq<1,5,5>(ap_ST_st10_fsm_9, ap_CS_fsm.read()) || 
         esl_seteq<1,5,5>(ap_ST_st11_fsm_10, ap_CS_fsm.read()) || 
         esl_seteq<1,5,5>(ap_ST_st12_fsm_11, ap_CS_fsm.read()))) {
        indices_samples_dataout = grp_sample_iterator_get_offset_fu_208_indices_samples_dataout.read();
    } else if ((esl_seteq<1,5,5>(ap_ST_st23_fsm_22, ap_CS_fsm.read()) || 
                esl_seteq<1,5,5>(ap_ST_st15_fsm_14, ap_CS_fsm.read()) || 
                esl_seteq<1,5,5>(ap_ST_st16_fsm_15, ap_CS_fsm.read()) || 
                esl_seteq<1,5,5>(ap_ST_st17_fsm_16, ap_CS_fsm.read()) || 
                esl_seteq<1,5,5>(ap_ST_st18_fsm_17, ap_CS_fsm.read()) || 
                esl_seteq<1,5,5>(ap_ST_st19_fsm_18, ap_CS_fsm.read()) || 
                esl_seteq<1,5,5>(ap_ST_st20_fsm_19, ap_CS_fsm.read()) || 
                esl_seteq<1,5,5>(ap_ST_st21_fsm_20, ap_CS_fsm.read()) || 
                esl_seteq<1,5,5>(ap_ST_st22_fsm_21, ap_CS_fsm.read()))) {
        indices_samples_dataout = grp_sample_iterator_next_fu_194_indices_samples_dataout.read();
    } else {
        indices_samples_dataout =  (sc_lv<16>) ("XXXXXXXXXXXXXXXX");
    }
}

void nfa_accept_samples_generic_hw::thread_indices_samples_req_din() {
    if ((esl_seteq<1,5,5>(ap_ST_st13_fsm_12, ap_CS_fsm.read()) || 
         esl_seteq<1,5,5>(ap_ST_st4_fsm_3, ap_CS_fsm.read()) || 
         esl_seteq<1,5,5>(ap_ST_st5_fsm_4, ap_CS_fsm.read()) || 
         esl_seteq<1,5,5>(ap_ST_st6_fsm_5, ap_CS_fsm.read()) || 
         esl_seteq<1,5,5>(ap_ST_st7_fsm_6, ap_CS_fsm.read()) || 
         esl_seteq<1,5,5>(ap_ST_st8_fsm_7, ap_CS_fsm.read()) || 
         esl_seteq<1,5,5>(ap_ST_st9_fsm_8, ap_CS_fsm.read()) || 
         esl_seteq<1,5,5>(ap_ST_st10_fsm_9, ap_CS_fsm.read()) || 
         esl_seteq<1,5,5>(ap_ST_st11_fsm_10, ap_CS_fsm.read()) || 
         esl_seteq<1,5,5>(ap_ST_st12_fsm_11, ap_CS_fsm.read()))) {
        indices_samples_req_din = grp_sample_iterator_get_offset_fu_208_indices_samples_req_din.read();
    } else if ((esl_seteq<1,5,5>(ap_ST_st23_fsm_22, ap_CS_fsm.read()) || 
                esl_seteq<1,5,5>(ap_ST_st15_fsm_14, ap_CS_fsm.read()) || 
                esl_seteq<1,5,5>(ap_ST_st16_fsm_15, ap_CS_fsm.read()) || 
                esl_seteq<1,5,5>(ap_ST_st17_fsm_16, ap_CS_fsm.read()) || 
                esl_seteq<1,5,5>(ap_ST_st18_fsm_17, ap_CS_fsm.read()) || 
                esl_seteq<1,5,5>(ap_ST_st19_fsm_18, ap_CS_fsm.read()) || 
                esl_seteq<1,5,5>(ap_ST_st20_fsm_19, ap_CS_fsm.read()) || 
                esl_seteq<1,5,5>(ap_ST_st21_fsm_20, ap_CS_fsm.read()) || 
                esl_seteq<1,5,5>(ap_ST_st22_fsm_21, ap_CS_fsm.read()))) {
        indices_samples_req_din = grp_sample_iterator_next_fu_194_indices_samples_req_din.read();
    } else {
        indices_samples_req_din = sc_logic('X');
    }
}

void nfa_accept_samples_generic_hw::thread_indices_samples_req_write() {
    if ((esl_seteq<1,5,5>(ap_ST_st13_fsm_12, ap_CS_fsm.read()) || 
         esl_seteq<1,5,5>(ap_ST_st4_fsm_3, ap_CS_fsm.read()) || 
         esl_seteq<1,5,5>(ap_ST_st5_fsm_4, ap_CS_fsm.read()) || 
         esl_seteq<1,5,5>(ap_ST_st6_fsm_5, ap_CS_fsm.read()) || 
         esl_seteq<1,5,5>(ap_ST_st7_fsm_6, ap_CS_fsm.read()) || 
         esl_seteq<1,5,5>(ap_ST_st8_fsm_7, ap_CS_fsm.read()) || 
         esl_seteq<1,5,5>(ap_ST_st9_fsm_8, ap_CS_fsm.read()) || 
         esl_seteq<1,5,5>(ap_ST_st10_fsm_9, ap_CS_fsm.read()) || 
         esl_seteq<1,5,5>(ap_ST_st11_fsm_10, ap_CS_fsm.read()) || 
         esl_seteq<1,5,5>(ap_ST_st12_fsm_11, ap_CS_fsm.read()))) {
        indices_samples_req_write = grp_sample_iterator_get_offset_fu_208_indices_samples_req_write.read();
    } else if ((esl_seteq<1,5,5>(ap_ST_st23_fsm_22, ap_CS_fsm.read()) || 
                esl_seteq<1,5,5>(ap_ST_st15_fsm_14, ap_CS_fsm.read()) || 
                esl_seteq<1,5,5>(ap_ST_st16_fsm_15, ap_CS_fsm.read()) || 
                esl_seteq<1,5,5>(ap_ST_st17_fsm_16, ap_CS_fsm.read()) || 
                esl_seteq<1,5,5>(ap_ST_st18_fsm_17, ap_CS_fsm.read()) || 
                esl_seteq<1,5,5>(ap_ST_st19_fsm_18, ap_CS_fsm.read()) || 
                esl_seteq<1,5,5>(ap_ST_st20_fsm_19, ap_CS_fsm.read()) || 
                esl_seteq<1,5,5>(ap_ST_st21_fsm_20, ap_CS_fsm.read()) || 
                esl_seteq<1,5,5>(ap_ST_st22_fsm_21, ap_CS_fsm.read()))) {
        indices_samples_req_write = grp_sample_iterator_next_fu_194_indices_samples_req_write.read();
    } else {
        indices_samples_req_write = sc_logic('X');
    }
}

void nfa_accept_samples_generic_hw::thread_indices_samples_rsp_read() {
    if ((esl_seteq<1,5,5>(ap_ST_st13_fsm_12, ap_CS_fsm.read()) || 
         esl_seteq<1,5,5>(ap_ST_st4_fsm_3, ap_CS_fsm.read()) || 
         esl_seteq<1,5,5>(ap_ST_st5_fsm_4, ap_CS_fsm.read()) || 
         esl_seteq<1,5,5>(ap_ST_st6_fsm_5, ap_CS_fsm.read()) || 
         esl_seteq<1,5,5>(ap_ST_st7_fsm_6, ap_CS_fsm.read()) || 
         esl_seteq<1,5,5>(ap_ST_st8_fsm_7, ap_CS_fsm.read()) || 
         esl_seteq<1,5,5>(ap_ST_st9_fsm_8, ap_CS_fsm.read()) || 
         esl_seteq<1,5,5>(ap_ST_st10_fsm_9, ap_CS_fsm.read()) || 
         esl_seteq<1,5,5>(ap_ST_st11_fsm_10, ap_CS_fsm.read()) || 
         esl_seteq<1,5,5>(ap_ST_st12_fsm_11, ap_CS_fsm.read()))) {
        indices_samples_rsp_read = grp_sample_iterator_get_offset_fu_208_indices_samples_rsp_read.read();
    } else if ((esl_seteq<1,5,5>(ap_ST_st23_fsm_22, ap_CS_fsm.read()) || 
                esl_seteq<1,5,5>(ap_ST_st15_fsm_14, ap_CS_fsm.read()) || 
                esl_seteq<1,5,5>(ap_ST_st16_fsm_15, ap_CS_fsm.read()) || 
                esl_seteq<1,5,5>(ap_ST_st17_fsm_16, ap_CS_fsm.read()) || 
                esl_seteq<1,5,5>(ap_ST_st18_fsm_17, ap_CS_fsm.read()) || 
                esl_seteq<1,5,5>(ap_ST_st19_fsm_18, ap_CS_fsm.read()) || 
                esl_seteq<1,5,5>(ap_ST_st20_fsm_19, ap_CS_fsm.read()) || 
                esl_seteq<1,5,5>(ap_ST_st21_fsm_20, ap_CS_fsm.read()) || 
                esl_seteq<1,5,5>(ap_ST_st22_fsm_21, ap_CS_fsm.read()))) {
        indices_samples_rsp_read = grp_sample_iterator_next_fu_194_indices_samples_rsp_read.read();
    } else {
        indices_samples_rsp_read = sc_logic('X');
    }
}

void nfa_accept_samples_generic_hw::thread_indices_samples_size() {
    if ((esl_seteq<1,5,5>(ap_ST_st13_fsm_12, ap_CS_fsm.read()) || 
         esl_seteq<1,5,5>(ap_ST_st4_fsm_3, ap_CS_fsm.read()) || 
         esl_seteq<1,5,5>(ap_ST_st5_fsm_4, ap_CS_fsm.read()) || 
         esl_seteq<1,5,5>(ap_ST_st6_fsm_5, ap_CS_fsm.read()) || 
         esl_seteq<1,5,5>(ap_ST_st7_fsm_6, ap_CS_fsm.read()) || 
         esl_seteq<1,5,5>(ap_ST_st8_fsm_7, ap_CS_fsm.read()) || 
         esl_seteq<1,5,5>(ap_ST_st9_fsm_8, ap_CS_fsm.read()) || 
         esl_seteq<1,5,5>(ap_ST_st10_fsm_9, ap_CS_fsm.read()) || 
         esl_seteq<1,5,5>(ap_ST_st11_fsm_10, ap_CS_fsm.read()) || 
         esl_seteq<1,5,5>(ap_ST_st12_fsm_11, ap_CS_fsm.read()))) {
        indices_samples_size = grp_sample_iterator_get_offset_fu_208_indices_samples_size.read();
    } else if ((esl_seteq<1,5,5>(ap_ST_st23_fsm_22, ap_CS_fsm.read()) || 
                esl_seteq<1,5,5>(ap_ST_st15_fsm_14, ap_CS_fsm.read()) || 
                esl_seteq<1,5,5>(ap_ST_st16_fsm_15, ap_CS_fsm.read()) || 
                esl_seteq<1,5,5>(ap_ST_st17_fsm_16, ap_CS_fsm.read()) || 
                esl_seteq<1,5,5>(ap_ST_st18_fsm_17, ap_CS_fsm.read()) || 
                esl_seteq<1,5,5>(ap_ST_st19_fsm_18, ap_CS_fsm.read()) || 
                esl_seteq<1,5,5>(ap_ST_st20_fsm_19, ap_CS_fsm.read()) || 
                esl_seteq<1,5,5>(ap_ST_st21_fsm_20, ap_CS_fsm.read()) || 
                esl_seteq<1,5,5>(ap_ST_st22_fsm_21, ap_CS_fsm.read()))) {
        indices_samples_size = grp_sample_iterator_next_fu_194_indices_samples_size.read();
    } else {
        indices_samples_size = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    }
}

void nfa_accept_samples_generic_hw::thread_indices_stride_address() {
    if ((esl_seteq<1,5,5>(ap_ST_st13_fsm_12, ap_CS_fsm.read()) || 
         esl_seteq<1,5,5>(ap_ST_st4_fsm_3, ap_CS_fsm.read()) || 
         esl_seteq<1,5,5>(ap_ST_st5_fsm_4, ap_CS_fsm.read()) || 
         esl_seteq<1,5,5>(ap_ST_st6_fsm_5, ap_CS_fsm.read()) || 
         esl_seteq<1,5,5>(ap_ST_st7_fsm_6, ap_CS_fsm.read()) || 
         esl_seteq<1,5,5>(ap_ST_st8_fsm_7, ap_CS_fsm.read()) || 
         esl_seteq<1,5,5>(ap_ST_st9_fsm_8, ap_CS_fsm.read()) || 
         esl_seteq<1,5,5>(ap_ST_st10_fsm_9, ap_CS_fsm.read()) || 
         esl_seteq<1,5,5>(ap_ST_st11_fsm_10, ap_CS_fsm.read()) || 
         esl_seteq<1,5,5>(ap_ST_st12_fsm_11, ap_CS_fsm.read()))) {
        indices_stride_address = grp_sample_iterator_get_offset_fu_208_indices_stride_address.read();
    } else if ((esl_seteq<1,5,5>(ap_ST_st23_fsm_22, ap_CS_fsm.read()) || 
                esl_seteq<1,5,5>(ap_ST_st15_fsm_14, ap_CS_fsm.read()) || 
                esl_seteq<1,5,5>(ap_ST_st16_fsm_15, ap_CS_fsm.read()) || 
                esl_seteq<1,5,5>(ap_ST_st17_fsm_16, ap_CS_fsm.read()) || 
                esl_seteq<1,5,5>(ap_ST_st18_fsm_17, ap_CS_fsm.read()) || 
                esl_seteq<1,5,5>(ap_ST_st19_fsm_18, ap_CS_fsm.read()) || 
                esl_seteq<1,5,5>(ap_ST_st20_fsm_19, ap_CS_fsm.read()) || 
                esl_seteq<1,5,5>(ap_ST_st21_fsm_20, ap_CS_fsm.read()) || 
                esl_seteq<1,5,5>(ap_ST_st22_fsm_21, ap_CS_fsm.read()))) {
        indices_stride_address = grp_sample_iterator_next_fu_194_indices_stride_address.read();
    } else {
        indices_stride_address = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    }
}

void nfa_accept_samples_generic_hw::thread_indices_stride_dataout() {
    if ((esl_seteq<1,5,5>(ap_ST_st13_fsm_12, ap_CS_fsm.read()) || 
         esl_seteq<1,5,5>(ap_ST_st4_fsm_3, ap_CS_fsm.read()) || 
         esl_seteq<1,5,5>(ap_ST_st5_fsm_4, ap_CS_fsm.read()) || 
         esl_seteq<1,5,5>(ap_ST_st6_fsm_5, ap_CS_fsm.read()) || 
         esl_seteq<1,5,5>(ap_ST_st7_fsm_6, ap_CS_fsm.read()) || 
         esl_seteq<1,5,5>(ap_ST_st8_fsm_7, ap_CS_fsm.read()) || 
         esl_seteq<1,5,5>(ap_ST_st9_fsm_8, ap_CS_fsm.read()) || 
         esl_seteq<1,5,5>(ap_ST_st10_fsm_9, ap_CS_fsm.read()) || 
         esl_seteq<1,5,5>(ap_ST_st11_fsm_10, ap_CS_fsm.read()) || 
         esl_seteq<1,5,5>(ap_ST_st12_fsm_11, ap_CS_fsm.read()))) {
        indices_stride_dataout = grp_sample_iterator_get_offset_fu_208_indices_stride_dataout.read();
    } else if ((esl_seteq<1,5,5>(ap_ST_st23_fsm_22, ap_CS_fsm.read()) || 
                esl_seteq<1,5,5>(ap_ST_st15_fsm_14, ap_CS_fsm.read()) || 
                esl_seteq<1,5,5>(ap_ST_st16_fsm_15, ap_CS_fsm.read()) || 
                esl_seteq<1,5,5>(ap_ST_st17_fsm_16, ap_CS_fsm.read()) || 
                esl_seteq<1,5,5>(ap_ST_st18_fsm_17, ap_CS_fsm.read()) || 
                esl_seteq<1,5,5>(ap_ST_st19_fsm_18, ap_CS_fsm.read()) || 
                esl_seteq<1,5,5>(ap_ST_st20_fsm_19, ap_CS_fsm.read()) || 
                esl_seteq<1,5,5>(ap_ST_st21_fsm_20, ap_CS_fsm.read()) || 
                esl_seteq<1,5,5>(ap_ST_st22_fsm_21, ap_CS_fsm.read()))) {
        indices_stride_dataout = grp_sample_iterator_next_fu_194_indices_stride_dataout.read();
    } else {
        indices_stride_dataout =  (sc_lv<8>) ("XXXXXXXX");
    }
}

void nfa_accept_samples_generic_hw::thread_indices_stride_req_din() {
    if ((esl_seteq<1,5,5>(ap_ST_st13_fsm_12, ap_CS_fsm.read()) || 
         esl_seteq<1,5,5>(ap_ST_st4_fsm_3, ap_CS_fsm.read()) || 
         esl_seteq<1,5,5>(ap_ST_st5_fsm_4, ap_CS_fsm.read()) || 
         esl_seteq<1,5,5>(ap_ST_st6_fsm_5, ap_CS_fsm.read()) || 
         esl_seteq<1,5,5>(ap_ST_st7_fsm_6, ap_CS_fsm.read()) || 
         esl_seteq<1,5,5>(ap_ST_st8_fsm_7, ap_CS_fsm.read()) || 
         esl_seteq<1,5,5>(ap_ST_st9_fsm_8, ap_CS_fsm.read()) || 
         esl_seteq<1,5,5>(ap_ST_st10_fsm_9, ap_CS_fsm.read()) || 
         esl_seteq<1,5,5>(ap_ST_st11_fsm_10, ap_CS_fsm.read()) || 
         esl_seteq<1,5,5>(ap_ST_st12_fsm_11, ap_CS_fsm.read()))) {
        indices_stride_req_din = grp_sample_iterator_get_offset_fu_208_indices_stride_req_din.read();
    } else if ((esl_seteq<1,5,5>(ap_ST_st23_fsm_22, ap_CS_fsm.read()) || 
                esl_seteq<1,5,5>(ap_ST_st15_fsm_14, ap_CS_fsm.read()) || 
                esl_seteq<1,5,5>(ap_ST_st16_fsm_15, ap_CS_fsm.read()) || 
                esl_seteq<1,5,5>(ap_ST_st17_fsm_16, ap_CS_fsm.read()) || 
                esl_seteq<1,5,5>(ap_ST_st18_fsm_17, ap_CS_fsm.read()) || 
                esl_seteq<1,5,5>(ap_ST_st19_fsm_18, ap_CS_fsm.read()) || 
                esl_seteq<1,5,5>(ap_ST_st20_fsm_19, ap_CS_fsm.read()) || 
                esl_seteq<1,5,5>(ap_ST_st21_fsm_20, ap_CS_fsm.read()) || 
                esl_seteq<1,5,5>(ap_ST_st22_fsm_21, ap_CS_fsm.read()))) {
        indices_stride_req_din = grp_sample_iterator_next_fu_194_indices_stride_req_din.read();
    } else {
        indices_stride_req_din = sc_logic('X');
    }
}

void nfa_accept_samples_generic_hw::thread_indices_stride_req_write() {
    if ((esl_seteq<1,5,5>(ap_ST_st13_fsm_12, ap_CS_fsm.read()) || 
         esl_seteq<1,5,5>(ap_ST_st4_fsm_3, ap_CS_fsm.read()) || 
         esl_seteq<1,5,5>(ap_ST_st5_fsm_4, ap_CS_fsm.read()) || 
         esl_seteq<1,5,5>(ap_ST_st6_fsm_5, ap_CS_fsm.read()) || 
         esl_seteq<1,5,5>(ap_ST_st7_fsm_6, ap_CS_fsm.read()) || 
         esl_seteq<1,5,5>(ap_ST_st8_fsm_7, ap_CS_fsm.read()) || 
         esl_seteq<1,5,5>(ap_ST_st9_fsm_8, ap_CS_fsm.read()) || 
         esl_seteq<1,5,5>(ap_ST_st10_fsm_9, ap_CS_fsm.read()) || 
         esl_seteq<1,5,5>(ap_ST_st11_fsm_10, ap_CS_fsm.read()) || 
         esl_seteq<1,5,5>(ap_ST_st12_fsm_11, ap_CS_fsm.read()))) {
        indices_stride_req_write = grp_sample_iterator_get_offset_fu_208_indices_stride_req_write.read();
    } else if ((esl_seteq<1,5,5>(ap_ST_st23_fsm_22, ap_CS_fsm.read()) || 
                esl_seteq<1,5,5>(ap_ST_st15_fsm_14, ap_CS_fsm.read()) || 
                esl_seteq<1,5,5>(ap_ST_st16_fsm_15, ap_CS_fsm.read()) || 
                esl_seteq<1,5,5>(ap_ST_st17_fsm_16, ap_CS_fsm.read()) || 
                esl_seteq<1,5,5>(ap_ST_st18_fsm_17, ap_CS_fsm.read()) || 
                esl_seteq<1,5,5>(ap_ST_st19_fsm_18, ap_CS_fsm.read()) || 
                esl_seteq<1,5,5>(ap_ST_st20_fsm_19, ap_CS_fsm.read()) || 
                esl_seteq<1,5,5>(ap_ST_st21_fsm_20, ap_CS_fsm.read()) || 
                esl_seteq<1,5,5>(ap_ST_st22_fsm_21, ap_CS_fsm.read()))) {
        indices_stride_req_write = grp_sample_iterator_next_fu_194_indices_stride_req_write.read();
    } else {
        indices_stride_req_write = sc_logic('X');
    }
}

void nfa_accept_samples_generic_hw::thread_indices_stride_rsp_read() {
    if ((esl_seteq<1,5,5>(ap_ST_st13_fsm_12, ap_CS_fsm.read()) || 
         esl_seteq<1,5,5>(ap_ST_st4_fsm_3, ap_CS_fsm.read()) || 
         esl_seteq<1,5,5>(ap_ST_st5_fsm_4, ap_CS_fsm.read()) || 
         esl_seteq<1,5,5>(ap_ST_st6_fsm_5, ap_CS_fsm.read()) || 
         esl_seteq<1,5,5>(ap_ST_st7_fsm_6, ap_CS_fsm.read()) || 
         esl_seteq<1,5,5>(ap_ST_st8_fsm_7, ap_CS_fsm.read()) || 
         esl_seteq<1,5,5>(ap_ST_st9_fsm_8, ap_CS_fsm.read()) || 
         esl_seteq<1,5,5>(ap_ST_st10_fsm_9, ap_CS_fsm.read()) || 
         esl_seteq<1,5,5>(ap_ST_st11_fsm_10, ap_CS_fsm.read()) || 
         esl_seteq<1,5,5>(ap_ST_st12_fsm_11, ap_CS_fsm.read()))) {
        indices_stride_rsp_read = grp_sample_iterator_get_offset_fu_208_indices_stride_rsp_read.read();
    } else if ((esl_seteq<1,5,5>(ap_ST_st23_fsm_22, ap_CS_fsm.read()) || 
                esl_seteq<1,5,5>(ap_ST_st15_fsm_14, ap_CS_fsm.read()) || 
                esl_seteq<1,5,5>(ap_ST_st16_fsm_15, ap_CS_fsm.read()) || 
                esl_seteq<1,5,5>(ap_ST_st17_fsm_16, ap_CS_fsm.read()) || 
                esl_seteq<1,5,5>(ap_ST_st18_fsm_17, ap_CS_fsm.read()) || 
                esl_seteq<1,5,5>(ap_ST_st19_fsm_18, ap_CS_fsm.read()) || 
                esl_seteq<1,5,5>(ap_ST_st20_fsm_19, ap_CS_fsm.read()) || 
                esl_seteq<1,5,5>(ap_ST_st21_fsm_20, ap_CS_fsm.read()) || 
                esl_seteq<1,5,5>(ap_ST_st22_fsm_21, ap_CS_fsm.read()))) {
        indices_stride_rsp_read = grp_sample_iterator_next_fu_194_indices_stride_rsp_read.read();
    } else {
        indices_stride_rsp_read = sc_logic('X');
    }
}

void nfa_accept_samples_generic_hw::thread_indices_stride_size() {
    if ((esl_seteq<1,5,5>(ap_ST_st13_fsm_12, ap_CS_fsm.read()) || 
         esl_seteq<1,5,5>(ap_ST_st4_fsm_3, ap_CS_fsm.read()) || 
         esl_seteq<1,5,5>(ap_ST_st5_fsm_4, ap_CS_fsm.read()) || 
         esl_seteq<1,5,5>(ap_ST_st6_fsm_5, ap_CS_fsm.read()) || 
         esl_seteq<1,5,5>(ap_ST_st7_fsm_6, ap_CS_fsm.read()) || 
         esl_seteq<1,5,5>(ap_ST_st8_fsm_7, ap_CS_fsm.read()) || 
         esl_seteq<1,5,5>(ap_ST_st9_fsm_8, ap_CS_fsm.read()) || 
         esl_seteq<1,5,5>(ap_ST_st10_fsm_9, ap_CS_fsm.read()) || 
         esl_seteq<1,5,5>(ap_ST_st11_fsm_10, ap_CS_fsm.read()) || 
         esl_seteq<1,5,5>(ap_ST_st12_fsm_11, ap_CS_fsm.read()))) {
        indices_stride_size = grp_sample_iterator_get_offset_fu_208_indices_stride_size.read();
    } else if ((esl_seteq<1,5,5>(ap_ST_st23_fsm_22, ap_CS_fsm.read()) || 
                esl_seteq<1,5,5>(ap_ST_st15_fsm_14, ap_CS_fsm.read()) || 
                esl_seteq<1,5,5>(ap_ST_st16_fsm_15, ap_CS_fsm.read()) || 
                esl_seteq<1,5,5>(ap_ST_st17_fsm_16, ap_CS_fsm.read()) || 
                esl_seteq<1,5,5>(ap_ST_st18_fsm_17, ap_CS_fsm.read()) || 
                esl_seteq<1,5,5>(ap_ST_st19_fsm_18, ap_CS_fsm.read()) || 
                esl_seteq<1,5,5>(ap_ST_st20_fsm_19, ap_CS_fsm.read()) || 
                esl_seteq<1,5,5>(ap_ST_st21_fsm_20, ap_CS_fsm.read()) || 
                esl_seteq<1,5,5>(ap_ST_st22_fsm_21, ap_CS_fsm.read()))) {
        indices_stride_size = grp_sample_iterator_next_fu_194_indices_stride_size.read();
    } else {
        indices_stride_size = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    }
}

void nfa_accept_samples_generic_hw::thread_nfa_finals_buckets_address() {
    nfa_finals_buckets_address = grp_nfa_accept_sample_fu_178_nfa_finals_buckets_address.read();
}

void nfa_accept_samples_generic_hw::thread_nfa_finals_buckets_dataout() {
    nfa_finals_buckets_dataout = grp_nfa_accept_sample_fu_178_nfa_finals_buckets_dataout.read();
}

void nfa_accept_samples_generic_hw::thread_nfa_finals_buckets_req_din() {
    nfa_finals_buckets_req_din = grp_nfa_accept_sample_fu_178_nfa_finals_buckets_req_din.read();
}

void nfa_accept_samples_generic_hw::thread_nfa_finals_buckets_req_write() {
    nfa_finals_buckets_req_write = grp_nfa_accept_sample_fu_178_nfa_finals_buckets_req_write.read();
}

void nfa_accept_samples_generic_hw::thread_nfa_finals_buckets_rsp_read() {
    nfa_finals_buckets_rsp_read = grp_nfa_accept_sample_fu_178_nfa_finals_buckets_rsp_read.read();
}

void nfa_accept_samples_generic_hw::thread_nfa_finals_buckets_size() {
    nfa_finals_buckets_size = grp_nfa_accept_sample_fu_178_nfa_finals_buckets_size.read();
}

void nfa_accept_samples_generic_hw::thread_nfa_forward_buckets_address() {
    nfa_forward_buckets_address = grp_nfa_accept_sample_fu_178_nfa_forward_buckets_address.read();
}

void nfa_accept_samples_generic_hw::thread_nfa_forward_buckets_dataout() {
    nfa_forward_buckets_dataout = grp_nfa_accept_sample_fu_178_nfa_forward_buckets_dataout.read();
}

void nfa_accept_samples_generic_hw::thread_nfa_forward_buckets_req_din() {
    nfa_forward_buckets_req_din = grp_nfa_accept_sample_fu_178_nfa_forward_buckets_req_din.read();
}

void nfa_accept_samples_generic_hw::thread_nfa_forward_buckets_req_write() {
    nfa_forward_buckets_req_write = grp_nfa_accept_sample_fu_178_nfa_forward_buckets_req_write.read();
}

void nfa_accept_samples_generic_hw::thread_nfa_forward_buckets_rsp_read() {
    nfa_forward_buckets_rsp_read = grp_nfa_accept_sample_fu_178_nfa_forward_buckets_rsp_read.read();
}

void nfa_accept_samples_generic_hw::thread_nfa_forward_buckets_size() {
    nfa_forward_buckets_size = grp_nfa_accept_sample_fu_178_nfa_forward_buckets_size.read();
}

void nfa_accept_samples_generic_hw::thread_nfa_initials_buckets_address() {
    nfa_initials_buckets_address = grp_nfa_accept_sample_fu_178_nfa_initials_buckets_address.read();
}

void nfa_accept_samples_generic_hw::thread_nfa_initials_buckets_dataout() {
    nfa_initials_buckets_dataout = grp_nfa_accept_sample_fu_178_nfa_initials_buckets_dataout.read();
}

void nfa_accept_samples_generic_hw::thread_nfa_initials_buckets_req_din() {
    nfa_initials_buckets_req_din = grp_nfa_accept_sample_fu_178_nfa_initials_buckets_req_din.read();
}

void nfa_accept_samples_generic_hw::thread_nfa_initials_buckets_req_write() {
    nfa_initials_buckets_req_write = grp_nfa_accept_sample_fu_178_nfa_initials_buckets_req_write.read();
}

void nfa_accept_samples_generic_hw::thread_nfa_initials_buckets_rsp_read() {
    nfa_initials_buckets_rsp_read = grp_nfa_accept_sample_fu_178_nfa_initials_buckets_rsp_read.read();
}

void nfa_accept_samples_generic_hw::thread_nfa_initials_buckets_size() {
    nfa_initials_buckets_size = grp_nfa_accept_sample_fu_178_nfa_initials_buckets_size.read();
}

void nfa_accept_samples_generic_hw::thread_or_cond_fu_247_p2() {
    or_cond_fu_247_p2 = (grp_nfa_accept_sample_fu_178_ap_return.read() ^ accept.read());
}

void nfa_accept_samples_generic_hw::thread_sample_buffer_address() {
    sample_buffer_address = grp_nfa_accept_sample_fu_178_sample_address.read();
}

void nfa_accept_samples_generic_hw::thread_sample_buffer_dataout() {
    sample_buffer_dataout = grp_nfa_accept_sample_fu_178_sample_dataout.read();
}

void nfa_accept_samples_generic_hw::thread_sample_buffer_req_din() {
    sample_buffer_req_din = grp_nfa_accept_sample_fu_178_sample_req_din.read();
}

void nfa_accept_samples_generic_hw::thread_sample_buffer_req_write() {
    sample_buffer_req_write = grp_nfa_accept_sample_fu_178_sample_req_write.read();
}

void nfa_accept_samples_generic_hw::thread_sample_buffer_rsp_read() {
    sample_buffer_rsp_read = grp_nfa_accept_sample_fu_178_sample_rsp_read.read();
}

void nfa_accept_samples_generic_hw::thread_sample_buffer_size() {
    sample_buffer_size = grp_nfa_accept_sample_fu_178_sample_size.read();
}

void nfa_accept_samples_generic_hw::thread_stop_on_first_read_read_fu_104_p2() {
    stop_on_first_read_read_fu_104_p2 = stop_on_first.read();
}

void nfa_accept_samples_generic_hw::thread_tmp_i_10_fu_235_p2() {
    tmp_i_10_fu_235_p2 = (!i_index_reg_146.read().is_01() || !end_index.read().is_01())? sc_lv<1>(): sc_lv<1>(i_index_reg_146.read() == end_index.read());
}

void nfa_accept_samples_generic_hw::thread_tmp_i_11_fu_243_p2() {
    tmp_i_11_fu_243_p2 = (tmp_i_reg_316.read() & tmp_i_10_reg_321.read());
}

void nfa_accept_samples_generic_hw::thread_tmp_i_fu_230_p2() {
    tmp_i_fu_230_p2 = (!i_sample_reg_156.read().is_01() || !end_sample.read().is_01())? sc_lv<1>(): sc_lv<1>(i_sample_reg_156.read() == end_sample.read());
}

void nfa_accept_samples_generic_hw::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint()) {
        case 0 : 
            if (!esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0)) {
                ap_NS_fsm = ap_ST_st2_fsm_1;
            } else {
                ap_NS_fsm = ap_ST_st1_fsm_0;
            }
            break;
        case 1 : 
            ap_NS_fsm = ap_ST_st3_fsm_2;
            break;
        case 2 : 
            if (!esl_seteq<1,1,1>(ap_const_lv1_0, tmp_i_11_fu_243_p2.read())) {
                ap_NS_fsm = ap_ST_st24_fsm_23;
            } else {
                ap_NS_fsm = ap_ST_st4_fsm_3;
            }
            break;
        case 3 : 
            ap_NS_fsm = ap_ST_st5_fsm_4;
            break;
        case 4 : 
            ap_NS_fsm = ap_ST_st6_fsm_5;
            break;
        case 5 : 
            ap_NS_fsm = ap_ST_st7_fsm_6;
            break;
        case 6 : 
            ap_NS_fsm = ap_ST_st8_fsm_7;
            break;
        case 7 : 
            ap_NS_fsm = ap_ST_st9_fsm_8;
            break;
        case 8 : 
            ap_NS_fsm = ap_ST_st10_fsm_9;
            break;
        case 9 : 
            ap_NS_fsm = ap_ST_st11_fsm_10;
            break;
        case 10 : 
            ap_NS_fsm = ap_ST_st12_fsm_11;
            break;
        case 11 : 
            ap_NS_fsm = ap_ST_st13_fsm_12;
            break;
        case 12 : 
            ap_NS_fsm = ap_ST_st14_fsm_13;
            break;
        case 13 : 
            if ((!esl_seteq<1,1,1>(ap_const_logic_0, grp_nfa_accept_sample_fu_178_ap_done.read()) && esl_seteq<1,1,1>(or_cond_fu_247_p2.read(), ap_const_lv1_0) && !esl_seteq<1,1,1>(stop_on_first_read_read_fu_104_p2.read(), ap_const_lv1_0))) {
                ap_NS_fsm = ap_ST_st24_fsm_23;
            } else if ((!esl_seteq<1,1,1>(ap_const_logic_0, grp_nfa_accept_sample_fu_178_ap_done.read()) && (esl_seteq<1,1,1>(stop_on_first_read_read_fu_104_p2.read(), ap_const_lv1_0) || 
  !esl_seteq<1,1,1>(or_cond_fu_247_p2.read(), ap_const_lv1_0)))) {
                ap_NS_fsm = ap_ST_st15_fsm_14;
            } else {
                ap_NS_fsm = ap_ST_st14_fsm_13;
            }
            break;
        case 14 : 
            ap_NS_fsm = ap_ST_st16_fsm_15;
            break;
        case 15 : 
            ap_NS_fsm = ap_ST_st17_fsm_16;
            break;
        case 16 : 
            ap_NS_fsm = ap_ST_st18_fsm_17;
            break;
        case 17 : 
            ap_NS_fsm = ap_ST_st19_fsm_18;
            break;
        case 18 : 
            ap_NS_fsm = ap_ST_st20_fsm_19;
            break;
        case 19 : 
            ap_NS_fsm = ap_ST_st21_fsm_20;
            break;
        case 20 : 
            ap_NS_fsm = ap_ST_st22_fsm_21;
            break;
        case 21 : 
            ap_NS_fsm = ap_ST_st23_fsm_22;
            break;
        case 22 : 
            ap_NS_fsm = ap_ST_st2_fsm_1;
            break;
        case 23 : 
            ap_NS_fsm = ap_ST_st1_fsm_0;
            break;
        default : 
            ap_NS_fsm =  (sc_lv<5>) ("XXXXX");
            break;
    }
}
void nfa_accept_samples_generic_hw::thread_hdltv_gen() {
    const char* dump_tv = std::getenv("AP_WRITE_TV");
    if (!(dump_tv && string(dump_tv) == "on")) return;

    wait();

    mHdltvinHandle << "[ " << endl;
    mHdltvoutHandle << "[ " << endl;
    int ap_cycleNo = 0;
    while (1) {
        wait();
        const char* mComma = ap_cycleNo == 0 ? " " : ", " ;
        mHdltvinHandle << mComma << "{"  <<  " \"ap_rst\" :  \"" << ap_rst.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"ap_start\" :  \"" << ap_start.read() << "\" ";
        mHdltvoutHandle << mComma << "{"  <<  " \"ap_done\" :  \"" << ap_done.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ap_idle\" :  \"" << ap_idle.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ap_ready\" :  \"" << ap_ready.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"nfa_initials_buckets_req_din\" :  \"" << nfa_initials_buckets_req_din.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"nfa_initials_buckets_req_full_n\" :  \"" << nfa_initials_buckets_req_full_n.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"nfa_initials_buckets_req_write\" :  \"" << nfa_initials_buckets_req_write.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"nfa_initials_buckets_rsp_empty_n\" :  \"" << nfa_initials_buckets_rsp_empty_n.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"nfa_initials_buckets_rsp_read\" :  \"" << nfa_initials_buckets_rsp_read.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"nfa_initials_buckets_address\" :  \"" << nfa_initials_buckets_address.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"nfa_initials_buckets_datain\" :  \"" << nfa_initials_buckets_datain.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"nfa_initials_buckets_dataout\" :  \"" << nfa_initials_buckets_dataout.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"nfa_initials_buckets_size\" :  \"" << nfa_initials_buckets_size.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"nfa_finals_buckets_req_din\" :  \"" << nfa_finals_buckets_req_din.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"nfa_finals_buckets_req_full_n\" :  \"" << nfa_finals_buckets_req_full_n.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"nfa_finals_buckets_req_write\" :  \"" << nfa_finals_buckets_req_write.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"nfa_finals_buckets_rsp_empty_n\" :  \"" << nfa_finals_buckets_rsp_empty_n.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"nfa_finals_buckets_rsp_read\" :  \"" << nfa_finals_buckets_rsp_read.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"nfa_finals_buckets_address\" :  \"" << nfa_finals_buckets_address.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"nfa_finals_buckets_datain\" :  \"" << nfa_finals_buckets_datain.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"nfa_finals_buckets_dataout\" :  \"" << nfa_finals_buckets_dataout.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"nfa_finals_buckets_size\" :  \"" << nfa_finals_buckets_size.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"nfa_forward_buckets_req_din\" :  \"" << nfa_forward_buckets_req_din.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"nfa_forward_buckets_req_full_n\" :  \"" << nfa_forward_buckets_req_full_n.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"nfa_forward_buckets_req_write\" :  \"" << nfa_forward_buckets_req_write.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"nfa_forward_buckets_rsp_empty_n\" :  \"" << nfa_forward_buckets_rsp_empty_n.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"nfa_forward_buckets_rsp_read\" :  \"" << nfa_forward_buckets_rsp_read.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"nfa_forward_buckets_address\" :  \"" << nfa_forward_buckets_address.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"nfa_forward_buckets_datain\" :  \"" << nfa_forward_buckets_datain.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"nfa_forward_buckets_dataout\" :  \"" << nfa_forward_buckets_dataout.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"nfa_forward_buckets_size\" :  \"" << nfa_forward_buckets_size.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"nfa_symbols\" :  \"" << nfa_symbols.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"sample_buffer_req_din\" :  \"" << sample_buffer_req_din.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"sample_buffer_req_full_n\" :  \"" << sample_buffer_req_full_n.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"sample_buffer_req_write\" :  \"" << sample_buffer_req_write.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"sample_buffer_rsp_empty_n\" :  \"" << sample_buffer_rsp_empty_n.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"sample_buffer_rsp_read\" :  \"" << sample_buffer_rsp_read.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"sample_buffer_address\" :  \"" << sample_buffer_address.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"sample_buffer_datain\" :  \"" << sample_buffer_datain.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"sample_buffer_dataout\" :  \"" << sample_buffer_dataout.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"sample_buffer_size\" :  \"" << sample_buffer_size.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"sample_buffer_length\" :  \"" << sample_buffer_length.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"sample_length\" :  \"" << sample_length.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"indices_begin_req_din\" :  \"" << indices_begin_req_din.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"indices_begin_req_full_n\" :  \"" << indices_begin_req_full_n.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"indices_begin_req_write\" :  \"" << indices_begin_req_write.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"indices_begin_rsp_empty_n\" :  \"" << indices_begin_rsp_empty_n.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"indices_begin_rsp_read\" :  \"" << indices_begin_rsp_read.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"indices_begin_address\" :  \"" << indices_begin_address.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"indices_begin_datain\" :  \"" << indices_begin_datain.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"indices_begin_dataout\" :  \"" << indices_begin_dataout.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"indices_begin_size\" :  \"" << indices_begin_size.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"indices_samples_req_din\" :  \"" << indices_samples_req_din.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"indices_samples_req_full_n\" :  \"" << indices_samples_req_full_n.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"indices_samples_req_write\" :  \"" << indices_samples_req_write.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"indices_samples_rsp_empty_n\" :  \"" << indices_samples_rsp_empty_n.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"indices_samples_rsp_read\" :  \"" << indices_samples_rsp_read.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"indices_samples_address\" :  \"" << indices_samples_address.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"indices_samples_datain\" :  \"" << indices_samples_datain.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"indices_samples_dataout\" :  \"" << indices_samples_dataout.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"indices_samples_size\" :  \"" << indices_samples_size.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"indices_stride_req_din\" :  \"" << indices_stride_req_din.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"indices_stride_req_full_n\" :  \"" << indices_stride_req_full_n.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"indices_stride_req_write\" :  \"" << indices_stride_req_write.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"indices_stride_rsp_empty_n\" :  \"" << indices_stride_rsp_empty_n.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"indices_stride_rsp_read\" :  \"" << indices_stride_rsp_read.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"indices_stride_address\" :  \"" << indices_stride_address.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"indices_stride_datain\" :  \"" << indices_stride_datain.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"indices_stride_dataout\" :  \"" << indices_stride_dataout.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"indices_stride_size\" :  \"" << indices_stride_size.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"i_size\" :  \"" << i_size.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"begin_index\" :  \"" << begin_index.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"begin_sample\" :  \"" << begin_sample.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"end_index\" :  \"" << end_index.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"end_sample\" :  \"" << end_sample.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"stop_on_first\" :  \"" << stop_on_first.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"accept\" :  \"" << accept.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ap_return\" :  \"" << ap_return.read() << "\" ";
        mHdltvinHandle << "}" << std::endl;
        mHdltvoutHandle << "}" << std::endl;
        ap_cycleNo++;
    }
}

}

