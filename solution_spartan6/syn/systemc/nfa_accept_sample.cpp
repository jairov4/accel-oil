// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2013.4
// Copyright (C) 2013 Xilinx Inc. All rights reserved.
// 
// ===========================================================

#include "nfa_accept_sample.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic nfa_accept_sample::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic nfa_accept_sample::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<6> nfa_accept_sample::ap_ST_st1_fsm_0 = "000000";
const sc_lv<6> nfa_accept_sample::ap_ST_st2_fsm_1 = "1";
const sc_lv<6> nfa_accept_sample::ap_ST_st3_fsm_2 = "10";
const sc_lv<6> nfa_accept_sample::ap_ST_st4_fsm_3 = "11";
const sc_lv<6> nfa_accept_sample::ap_ST_st5_fsm_4 = "100";
const sc_lv<6> nfa_accept_sample::ap_ST_st6_fsm_5 = "101";
const sc_lv<6> nfa_accept_sample::ap_ST_st7_fsm_6 = "110";
const sc_lv<6> nfa_accept_sample::ap_ST_st8_fsm_7 = "111";
const sc_lv<6> nfa_accept_sample::ap_ST_st9_fsm_8 = "1000";
const sc_lv<6> nfa_accept_sample::ap_ST_st10_fsm_9 = "1001";
const sc_lv<6> nfa_accept_sample::ap_ST_st11_fsm_10 = "1010";
const sc_lv<6> nfa_accept_sample::ap_ST_st12_fsm_11 = "1011";
const sc_lv<6> nfa_accept_sample::ap_ST_st13_fsm_12 = "1100";
const sc_lv<6> nfa_accept_sample::ap_ST_st14_fsm_13 = "1101";
const sc_lv<6> nfa_accept_sample::ap_ST_st15_fsm_14 = "1110";
const sc_lv<6> nfa_accept_sample::ap_ST_st16_fsm_15 = "1111";
const sc_lv<6> nfa_accept_sample::ap_ST_st17_fsm_16 = "10000";
const sc_lv<6> nfa_accept_sample::ap_ST_st18_fsm_17 = "10001";
const sc_lv<6> nfa_accept_sample::ap_ST_st19_fsm_18 = "10010";
const sc_lv<6> nfa_accept_sample::ap_ST_st20_fsm_19 = "10011";
const sc_lv<6> nfa_accept_sample::ap_ST_st21_fsm_20 = "10100";
const sc_lv<6> nfa_accept_sample::ap_ST_st22_fsm_21 = "10101";
const sc_lv<6> nfa_accept_sample::ap_ST_st23_fsm_22 = "10110";
const sc_lv<6> nfa_accept_sample::ap_ST_st24_fsm_23 = "10111";
const sc_lv<6> nfa_accept_sample::ap_ST_st25_fsm_24 = "11000";
const sc_lv<6> nfa_accept_sample::ap_ST_st26_fsm_25 = "11001";
const sc_lv<6> nfa_accept_sample::ap_ST_st27_fsm_26 = "11010";
const sc_lv<6> nfa_accept_sample::ap_ST_st28_fsm_27 = "11011";
const sc_lv<6> nfa_accept_sample::ap_ST_st29_fsm_28 = "11100";
const sc_lv<6> nfa_accept_sample::ap_ST_st30_fsm_29 = "11101";
const sc_lv<6> nfa_accept_sample::ap_ST_st31_fsm_30 = "11110";
const sc_lv<6> nfa_accept_sample::ap_ST_st32_fsm_31 = "11111";
const sc_lv<6> nfa_accept_sample::ap_ST_st33_fsm_32 = "100000";
const sc_lv<6> nfa_accept_sample::ap_ST_st34_fsm_33 = "100001";
const sc_lv<6> nfa_accept_sample::ap_ST_st35_fsm_34 = "100010";
const sc_lv<6> nfa_accept_sample::ap_ST_st36_fsm_35 = "100011";
const sc_lv<6> nfa_accept_sample::ap_ST_st37_fsm_36 = "100100";
const sc_lv<6> nfa_accept_sample::ap_ST_st38_fsm_37 = "100101";
const sc_lv<6> nfa_accept_sample::ap_ST_st39_fsm_38 = "100110";
const sc_lv<6> nfa_accept_sample::ap_ST_st40_fsm_39 = "100111";
const sc_lv<6> nfa_accept_sample::ap_ST_st41_fsm_40 = "101000";
const sc_lv<6> nfa_accept_sample::ap_ST_st42_fsm_41 = "101001";
const sc_lv<6> nfa_accept_sample::ap_ST_st43_fsm_42 = "101010";
const sc_lv<6> nfa_accept_sample::ap_ST_st44_fsm_43 = "101011";
const sc_lv<6> nfa_accept_sample::ap_ST_st45_fsm_44 = "101100";
const sc_lv<1> nfa_accept_sample::ap_const_lv1_0 = "0";
const sc_lv<16> nfa_accept_sample::ap_const_lv16_0 = "0000000000000000";
const sc_lv<32> nfa_accept_sample::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<1> nfa_accept_sample::ap_const_lv1_1 = "1";
const sc_lv<2> nfa_accept_sample::ap_const_lv2_2 = "10";
const sc_lv<32> nfa_accept_sample::ap_const_lv32_1 = "1";
const sc_lv<16> nfa_accept_sample::ap_const_lv16_1 = "1";
const sc_lv<5> nfa_accept_sample::ap_const_lv5_0 = "00000";
const sc_lv<8> nfa_accept_sample::ap_const_lv8_0 = "00000000";

nfa_accept_sample::nfa_accept_sample(sc_module_name name) : sc_module(name), mVcdFile(0) {
    grp_bitset_next_fu_344 = new bitset_next("grp_bitset_next_fu_344");
    grp_bitset_next_fu_344->ap_clk(ap_clk);
    grp_bitset_next_fu_344->ap_rst(ap_rst);
    grp_bitset_next_fu_344->p_read(grp_bitset_next_fu_344_p_read);
    grp_bitset_next_fu_344->r_bit(grp_bitset_next_fu_344_r_bit);
    grp_bitset_next_fu_344->r_bucket_index(grp_bitset_next_fu_344_r_bucket_index);
    grp_bitset_next_fu_344->r_bucket(grp_bitset_next_fu_344_r_bucket);
    grp_bitset_next_fu_344->ap_return_0(grp_bitset_next_fu_344_ap_return_0);
    grp_bitset_next_fu_344->ap_return_1(grp_bitset_next_fu_344_ap_return_1);
    grp_bitset_next_fu_344->ap_return_2(grp_bitset_next_fu_344_ap_return_2);
    grp_bitset_next_fu_344->ap_return_3(grp_bitset_next_fu_344_ap_return_3);
    grp_bitset_next_fu_344->ap_ce(grp_bitset_next_fu_344_ap_ce);
    grp_nfa_get_initials_fu_356 = new nfa_get_initials("grp_nfa_get_initials_fu_356");
    grp_nfa_get_initials_fu_356->ap_clk(ap_clk);
    grp_nfa_get_initials_fu_356->ap_rst(ap_rst);
    grp_nfa_get_initials_fu_356->ap_start(grp_nfa_get_initials_fu_356_ap_start);
    grp_nfa_get_initials_fu_356->ap_done(grp_nfa_get_initials_fu_356_ap_done);
    grp_nfa_get_initials_fu_356->ap_idle(grp_nfa_get_initials_fu_356_ap_idle);
    grp_nfa_get_initials_fu_356->ap_ready(grp_nfa_get_initials_fu_356_ap_ready);
    grp_nfa_get_initials_fu_356->nfa_initials_buckets_req_din(grp_nfa_get_initials_fu_356_nfa_initials_buckets_req_din);
    grp_nfa_get_initials_fu_356->nfa_initials_buckets_req_full_n(grp_nfa_get_initials_fu_356_nfa_initials_buckets_req_full_n);
    grp_nfa_get_initials_fu_356->nfa_initials_buckets_req_write(grp_nfa_get_initials_fu_356_nfa_initials_buckets_req_write);
    grp_nfa_get_initials_fu_356->nfa_initials_buckets_rsp_empty_n(grp_nfa_get_initials_fu_356_nfa_initials_buckets_rsp_empty_n);
    grp_nfa_get_initials_fu_356->nfa_initials_buckets_rsp_read(grp_nfa_get_initials_fu_356_nfa_initials_buckets_rsp_read);
    grp_nfa_get_initials_fu_356->nfa_initials_buckets_address(grp_nfa_get_initials_fu_356_nfa_initials_buckets_address);
    grp_nfa_get_initials_fu_356->nfa_initials_buckets_datain(grp_nfa_get_initials_fu_356_nfa_initials_buckets_datain);
    grp_nfa_get_initials_fu_356->nfa_initials_buckets_dataout(grp_nfa_get_initials_fu_356_nfa_initials_buckets_dataout);
    grp_nfa_get_initials_fu_356->nfa_initials_buckets_size(grp_nfa_get_initials_fu_356_nfa_initials_buckets_size);
    grp_nfa_get_initials_fu_356->ap_ce(grp_nfa_get_initials_fu_356_ap_ce);
    grp_nfa_get_initials_fu_356->ap_return_0(grp_nfa_get_initials_fu_356_ap_return_0);
    grp_nfa_get_initials_fu_356->ap_return_1(grp_nfa_get_initials_fu_356_ap_return_1);
    grp_nfa_get_finals_fu_362 = new nfa_get_finals("grp_nfa_get_finals_fu_362");
    grp_nfa_get_finals_fu_362->ap_clk(ap_clk);
    grp_nfa_get_finals_fu_362->ap_rst(ap_rst);
    grp_nfa_get_finals_fu_362->ap_start(grp_nfa_get_finals_fu_362_ap_start);
    grp_nfa_get_finals_fu_362->ap_done(grp_nfa_get_finals_fu_362_ap_done);
    grp_nfa_get_finals_fu_362->ap_idle(grp_nfa_get_finals_fu_362_ap_idle);
    grp_nfa_get_finals_fu_362->ap_ready(grp_nfa_get_finals_fu_362_ap_ready);
    grp_nfa_get_finals_fu_362->nfa_finals_buckets_req_din(grp_nfa_get_finals_fu_362_nfa_finals_buckets_req_din);
    grp_nfa_get_finals_fu_362->nfa_finals_buckets_req_full_n(grp_nfa_get_finals_fu_362_nfa_finals_buckets_req_full_n);
    grp_nfa_get_finals_fu_362->nfa_finals_buckets_req_write(grp_nfa_get_finals_fu_362_nfa_finals_buckets_req_write);
    grp_nfa_get_finals_fu_362->nfa_finals_buckets_rsp_empty_n(grp_nfa_get_finals_fu_362_nfa_finals_buckets_rsp_empty_n);
    grp_nfa_get_finals_fu_362->nfa_finals_buckets_rsp_read(grp_nfa_get_finals_fu_362_nfa_finals_buckets_rsp_read);
    grp_nfa_get_finals_fu_362->nfa_finals_buckets_address(grp_nfa_get_finals_fu_362_nfa_finals_buckets_address);
    grp_nfa_get_finals_fu_362->nfa_finals_buckets_datain(grp_nfa_get_finals_fu_362_nfa_finals_buckets_datain);
    grp_nfa_get_finals_fu_362->nfa_finals_buckets_dataout(grp_nfa_get_finals_fu_362_nfa_finals_buckets_dataout);
    grp_nfa_get_finals_fu_362->nfa_finals_buckets_size(grp_nfa_get_finals_fu_362_nfa_finals_buckets_size);
    grp_nfa_get_finals_fu_362->ap_ce(grp_nfa_get_finals_fu_362_ap_ce);
    grp_nfa_get_finals_fu_362->ap_return_0(grp_nfa_get_finals_fu_362_ap_return_0);
    grp_nfa_get_finals_fu_362->ap_return_1(grp_nfa_get_finals_fu_362_ap_return_1);
    grp_p_bsf32_hw_fu_368 = new p_bsf32_hw("grp_p_bsf32_hw_fu_368");
    grp_p_bsf32_hw_fu_368->ap_clk(ap_clk);
    grp_p_bsf32_hw_fu_368->ap_rst(ap_rst);
    grp_p_bsf32_hw_fu_368->bus_r(grp_p_bsf32_hw_fu_368_bus_r);
    grp_p_bsf32_hw_fu_368->ap_return(grp_p_bsf32_hw_fu_368_ap_return);
    grp_p_bsf32_hw_fu_368->ap_ce(grp_p_bsf32_hw_fu_368_ap_ce);
    nfa_accept_samples_generic_hw_add_32ns_32ns_32_8_U17 = new nfa_accept_samples_generic_hw_add_32ns_32ns_32_8<17,8,32,32,32>("nfa_accept_samples_generic_hw_add_32ns_32ns_32_8_U17");
    nfa_accept_samples_generic_hw_add_32ns_32ns_32_8_U17->clk(ap_clk);
    nfa_accept_samples_generic_hw_add_32ns_32ns_32_8_U17->reset(ap_rst);
    nfa_accept_samples_generic_hw_add_32ns_32ns_32_8_U17->din0(grp_fu_392_p0);
    nfa_accept_samples_generic_hw_add_32ns_32ns_32_8_U17->din1(grp_fu_392_p1);
    nfa_accept_samples_generic_hw_add_32ns_32ns_32_8_U17->ce(grp_fu_392_ce);
    nfa_accept_samples_generic_hw_add_32ns_32ns_32_8_U17->dout(grp_fu_392_p2);
    nfa_accept_samples_generic_hw_add_16ns_16ns_16_4_U18 = new nfa_accept_samples_generic_hw_add_16ns_16ns_16_4<18,4,16,16,16>("nfa_accept_samples_generic_hw_add_16ns_16ns_16_4_U18");
    nfa_accept_samples_generic_hw_add_16ns_16ns_16_4_U18->clk(ap_clk);
    nfa_accept_samples_generic_hw_add_16ns_16ns_16_4_U18->reset(ap_rst);
    nfa_accept_samples_generic_hw_add_16ns_16ns_16_4_U18->din0(grp_fu_402_p0);
    nfa_accept_samples_generic_hw_add_16ns_16ns_16_4_U18->din1(grp_fu_402_p1);
    nfa_accept_samples_generic_hw_add_16ns_16ns_16_4_U18->ce(grp_fu_402_ce);
    nfa_accept_samples_generic_hw_add_16ns_16ns_16_4_U18->dout(grp_fu_402_p2);
    nfa_accept_samples_generic_hw_add_32ns_32ns_32_8_U19 = new nfa_accept_samples_generic_hw_add_32ns_32ns_32_8<19,8,32,32,32>("nfa_accept_samples_generic_hw_add_32ns_32ns_32_8_U19");
    nfa_accept_samples_generic_hw_add_32ns_32ns_32_8_U19->clk(ap_clk);
    nfa_accept_samples_generic_hw_add_32ns_32ns_32_8_U19->reset(ap_rst);
    nfa_accept_samples_generic_hw_add_32ns_32ns_32_8_U19->din0(grp_fu_414_p0);
    nfa_accept_samples_generic_hw_add_32ns_32ns_32_8_U19->din1(grp_fu_414_p1);
    nfa_accept_samples_generic_hw_add_32ns_32ns_32_8_U19->ce(grp_fu_414_ce);
    nfa_accept_samples_generic_hw_add_32ns_32ns_32_8_U19->dout(grp_fu_414_p2);
    nfa_accept_samples_generic_hw_add_6ns_6ns_6_2_U20 = new nfa_accept_samples_generic_hw_add_6ns_6ns_6_2<20,2,6,6,6>("nfa_accept_samples_generic_hw_add_6ns_6ns_6_2_U20");
    nfa_accept_samples_generic_hw_add_6ns_6ns_6_2_U20->clk(ap_clk);
    nfa_accept_samples_generic_hw_add_6ns_6ns_6_2_U20->reset(ap_rst);
    nfa_accept_samples_generic_hw_add_6ns_6ns_6_2_U20->din0(grp_fu_463_p0);
    nfa_accept_samples_generic_hw_add_6ns_6ns_6_2_U20->din1(grp_fu_463_p1);
    nfa_accept_samples_generic_hw_add_6ns_6ns_6_2_U20->ce(grp_fu_463_ce);
    nfa_accept_samples_generic_hw_add_6ns_6ns_6_2_U20->dout(grp_fu_463_p2);
    nfa_accept_samples_generic_hw_mul_8ns_6ns_14_4_U21 = new nfa_accept_samples_generic_hw_mul_8ns_6ns_14_4<21,4,8,6,14>("nfa_accept_samples_generic_hw_mul_8ns_6ns_14_4_U21");
    nfa_accept_samples_generic_hw_mul_8ns_6ns_14_4_U21->clk(ap_clk);
    nfa_accept_samples_generic_hw_mul_8ns_6ns_14_4_U21->reset(ap_rst);
    nfa_accept_samples_generic_hw_mul_8ns_6ns_14_4_U21->din0(grp_fu_476_p0);
    nfa_accept_samples_generic_hw_mul_8ns_6ns_14_4_U21->din1(grp_fu_476_p1);
    nfa_accept_samples_generic_hw_mul_8ns_6ns_14_4_U21->ce(grp_fu_476_ce);
    nfa_accept_samples_generic_hw_mul_8ns_6ns_14_4_U21->dout(grp_fu_476_p2);
    nfa_accept_samples_generic_hw_add_14ns_14ns_14_4_U22 = new nfa_accept_samples_generic_hw_add_14ns_14ns_14_4<22,4,14,14,14>("nfa_accept_samples_generic_hw_add_14ns_14ns_14_4_U22");
    nfa_accept_samples_generic_hw_add_14ns_14ns_14_4_U22->clk(ap_clk);
    nfa_accept_samples_generic_hw_add_14ns_14ns_14_4_U22->reset(ap_rst);
    nfa_accept_samples_generic_hw_add_14ns_14ns_14_4_U22->din0(grp_fu_482_p0);
    nfa_accept_samples_generic_hw_add_14ns_14ns_14_4_U22->din1(grp_fu_482_p1);
    nfa_accept_samples_generic_hw_add_14ns_14ns_14_4_U22->ce(grp_fu_482_ce);
    nfa_accept_samples_generic_hw_add_14ns_14ns_14_4_U22->dout(grp_fu_482_p2);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_agg_result_bucket_index_0_lcssa4_i_cast_cast_fu_432_p1);
    sensitive << ( agg_result_bucket_index_0_lcssa4_i_reg_190 );

    SC_METHOD(thread_any_phi_fu_324_p4);
    sensitive << ( any_reg_319 );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_return);
    sensitive << ( ap_CS_fsm );
    sensitive << ( p_0_reg_332 );
    sensitive << ( ap_return_preg );

    SC_METHOD(thread_current_buckets_0_1_fu_558_p2);
    sensitive << ( tmp_buckets_0_reg_731 );
    sensitive << ( next_buckets_0_reg_168 );

    SC_METHOD(thread_current_buckets_1_1_fu_563_p2);
    sensitive << ( tmp_buckets_1_reg_736 );
    sensitive << ( next_buckets_1_reg_158 );

    SC_METHOD(thread_grp_bitset_next_fu_344_ap_ce);
    sensitive << ( ap_CS_fsm );
    sensitive << ( nfa_forward_buckets_rsp_empty_n );
    sensitive << ( j_end_phi_fu_312_p4 );

    SC_METHOD(thread_grp_bitset_next_fu_344_p_read);
    sensitive << ( ap_CS_fsm );
    sensitive << ( j_end_phi_fu_312_p4 );
    sensitive << ( next_buckets_1_reg_158 );

    SC_METHOD(thread_grp_bitset_next_fu_344_r_bit);
    sensitive << ( ap_CS_fsm );
    sensitive << ( j_end_phi_fu_312_p4 );
    sensitive << ( j_bit1_reg_299 );

    SC_METHOD(thread_grp_bitset_next_fu_344_r_bucket);
    sensitive << ( ap_CS_fsm );
    sensitive << ( j_end_phi_fu_312_p4 );
    sensitive << ( j_bucket1_reg_278 );

    SC_METHOD(thread_grp_bitset_next_fu_344_r_bucket_index);
    sensitive << ( ap_CS_fsm );
    sensitive << ( j_end_phi_fu_312_p4 );
    sensitive << ( j_bucket_index1_reg_289 );

    SC_METHOD(thread_grp_fu_392_ce);

    SC_METHOD(thread_grp_fu_392_p0);
    sensitive << ( ap_CS_fsm );
    sensitive << ( p_01_rec_reg_146 );

    SC_METHOD(thread_grp_fu_392_p1);
    sensitive << ( ap_CS_fsm );
    sensitive << ( empty );

    SC_METHOD(thread_grp_fu_402_ce);

    SC_METHOD(thread_grp_fu_402_p0);
    sensitive << ( ap_CS_fsm );
    sensitive << ( i_reg_134 );

    SC_METHOD(thread_grp_fu_402_p1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_grp_fu_414_ce);
    sensitive << ( ap_CS_fsm );
    sensitive << ( sample_rsp_empty_n );
    sensitive << ( tmp_s_reg_597 );

    SC_METHOD(thread_grp_fu_414_p0);
    sensitive << ( ap_CS_fsm );
    sensitive << ( p_01_rec_reg_146 );

    SC_METHOD(thread_grp_fu_414_p1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_grp_fu_463_ce);

    SC_METHOD(thread_grp_fu_463_p0);
    sensitive << ( ap_CS_fsm );
    sensitive << ( tmp_5_fu_447_p1 );

    SC_METHOD(thread_grp_fu_463_p1);
    sensitive << ( ap_CS_fsm );
    sensitive << ( j_bit1_reg_299 );

    SC_METHOD(thread_grp_fu_476_ce);

    SC_METHOD(thread_grp_fu_476_p0);
    sensitive << ( ap_CS_fsm );
    sensitive << ( grp_fu_476_p00 );

    SC_METHOD(thread_grp_fu_476_p00);
    sensitive << ( nfa_symbols );

    SC_METHOD(thread_grp_fu_476_p1);
    sensitive << ( ap_CS_fsm );
    sensitive << ( grp_fu_476_p10 );

    SC_METHOD(thread_grp_fu_476_p10);
    sensitive << ( state_reg_665 );

    SC_METHOD(thread_grp_fu_482_ce);

    SC_METHOD(thread_grp_fu_482_p0);
    sensitive << ( ap_CS_fsm );
    sensitive << ( tmp_17_i_reg_680 );

    SC_METHOD(thread_grp_fu_482_p1);
    sensitive << ( ap_CS_fsm );
    sensitive << ( tmp_18_i_cast_reg_650 );

    SC_METHOD(thread_grp_nfa_get_finals_fu_362_ap_ce);

    SC_METHOD(thread_grp_nfa_get_finals_fu_362_ap_start);
    sensitive << ( grp_nfa_get_finals_fu_362_ap_start_ap_start_reg );

    SC_METHOD(thread_grp_nfa_get_finals_fu_362_nfa_finals_buckets_datain);
    sensitive << ( ap_CS_fsm );
    sensitive << ( nfa_finals_buckets_datain );
    sensitive << ( tmp_s_reg_597 );

    SC_METHOD(thread_grp_nfa_get_finals_fu_362_nfa_finals_buckets_req_full_n);
    sensitive << ( ap_CS_fsm );
    sensitive << ( nfa_finals_buckets_req_full_n );
    sensitive << ( tmp_s_reg_597 );

    SC_METHOD(thread_grp_nfa_get_finals_fu_362_nfa_finals_buckets_rsp_empty_n);
    sensitive << ( ap_CS_fsm );
    sensitive << ( nfa_finals_buckets_rsp_empty_n );
    sensitive << ( tmp_s_reg_597 );

    SC_METHOD(thread_grp_nfa_get_initials_fu_356_ap_ce);

    SC_METHOD(thread_grp_nfa_get_initials_fu_356_ap_start);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_grp_nfa_get_initials_fu_356_nfa_initials_buckets_datain);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( nfa_initials_buckets_datain );

    SC_METHOD(thread_grp_nfa_get_initials_fu_356_nfa_initials_buckets_req_full_n);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( nfa_initials_buckets_req_full_n );

    SC_METHOD(thread_grp_nfa_get_initials_fu_356_nfa_initials_buckets_rsp_empty_n);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( nfa_initials_buckets_rsp_empty_n );

    SC_METHOD(thread_grp_p_bsf32_hw_fu_368_ap_ce);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_grp_p_bsf32_hw_fu_368_bus_r);
    sensitive << ( ap_CS_fsm );
    sensitive << ( bus_assign_reg_178 );

    SC_METHOD(thread_j_bit1_ph_cast_fu_440_p1);
    sensitive << ( j_bit1_ph_reg_227 );

    SC_METHOD(thread_j_bucket_index1_ph_cast_fu_436_p1);
    sensitive << ( j_bucket_index1_ph_reg_216 );

    SC_METHOD(thread_j_end_phi_fu_312_p4);
    sensitive << ( j_end_reg_309 );

    SC_METHOD(thread_next_buckets_0_1_fu_538_p2);
    sensitive << ( reg_374 );
    sensitive << ( tmp_buckets_0_3_reg_265 );

    SC_METHOD(thread_next_buckets_1_1_fu_544_p2);
    sensitive << ( reg_374 );
    sensitive << ( tmp_buckets_1_3_reg_252 );

    SC_METHOD(thread_nfa_finals_buckets_address);
    sensitive << ( ap_CS_fsm );
    sensitive << ( tmp_s_reg_597 );
    sensitive << ( grp_nfa_get_finals_fu_362_nfa_finals_buckets_address );

    SC_METHOD(thread_nfa_finals_buckets_dataout);
    sensitive << ( ap_CS_fsm );
    sensitive << ( tmp_s_reg_597 );
    sensitive << ( grp_nfa_get_finals_fu_362_nfa_finals_buckets_dataout );

    SC_METHOD(thread_nfa_finals_buckets_req_din);
    sensitive << ( ap_CS_fsm );
    sensitive << ( tmp_s_reg_597 );
    sensitive << ( grp_nfa_get_finals_fu_362_nfa_finals_buckets_req_din );

    SC_METHOD(thread_nfa_finals_buckets_req_write);
    sensitive << ( ap_CS_fsm );
    sensitive << ( tmp_s_reg_597 );
    sensitive << ( grp_nfa_get_finals_fu_362_nfa_finals_buckets_req_write );

    SC_METHOD(thread_nfa_finals_buckets_rsp_read);
    sensitive << ( ap_CS_fsm );
    sensitive << ( tmp_s_reg_597 );
    sensitive << ( grp_nfa_get_finals_fu_362_nfa_finals_buckets_rsp_read );

    SC_METHOD(thread_nfa_finals_buckets_size);
    sensitive << ( ap_CS_fsm );
    sensitive << ( tmp_s_reg_597 );
    sensitive << ( grp_nfa_get_finals_fu_362_nfa_finals_buckets_size );

    SC_METHOD(thread_nfa_forward_buckets_address);
    sensitive << ( ap_CS_fsm );
    sensitive << ( nfa_forward_buckets_rsp_empty_n );
    sensitive << ( tmp_5_i_cast_fu_493_p1 );
    sensitive << ( tmp_6_i_cast_fu_511_p1 );

    SC_METHOD(thread_nfa_forward_buckets_dataout);

    SC_METHOD(thread_nfa_forward_buckets_req_din);
    sensitive << ( ap_CS_fsm );
    sensitive << ( nfa_forward_buckets_rsp_empty_n );

    SC_METHOD(thread_nfa_forward_buckets_req_write);
    sensitive << ( ap_CS_fsm );
    sensitive << ( nfa_forward_buckets_rsp_empty_n );

    SC_METHOD(thread_nfa_forward_buckets_rsp_read);
    sensitive << ( ap_CS_fsm );
    sensitive << ( nfa_forward_buckets_rsp_empty_n );

    SC_METHOD(thread_nfa_forward_buckets_size);
    sensitive << ( ap_CS_fsm );
    sensitive << ( nfa_forward_buckets_rsp_empty_n );

    SC_METHOD(thread_nfa_initials_buckets_address);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( grp_nfa_get_initials_fu_356_nfa_initials_buckets_address );

    SC_METHOD(thread_nfa_initials_buckets_dataout);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( grp_nfa_get_initials_fu_356_nfa_initials_buckets_dataout );

    SC_METHOD(thread_nfa_initials_buckets_req_din);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( grp_nfa_get_initials_fu_356_nfa_initials_buckets_req_din );

    SC_METHOD(thread_nfa_initials_buckets_req_write);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( grp_nfa_get_initials_fu_356_nfa_initials_buckets_req_write );

    SC_METHOD(thread_nfa_initials_buckets_rsp_read);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( grp_nfa_get_initials_fu_356_nfa_initials_buckets_rsp_read );

    SC_METHOD(thread_nfa_initials_buckets_size);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( grp_nfa_get_initials_fu_356_nfa_initials_buckets_size );

    SC_METHOD(thread_sample_address);
    sensitive << ( ap_CS_fsm );
    sensitive << ( sample_addr_1_reg_606 );

    SC_METHOD(thread_sample_dataout);

    SC_METHOD(thread_sample_req_din);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_sample_req_write);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_sample_rsp_read);
    sensitive << ( ap_CS_fsm );
    sensitive << ( sample_rsp_empty_n );

    SC_METHOD(thread_sample_size);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_tmp_18_i_cast_fu_444_p1);
    sensitive << ( sym_reg_621 );

    SC_METHOD(thread_tmp_1_fu_568_p2);
    sensitive << ( current_buckets_0_1_reg_741 );
    sensitive << ( current_buckets_1_1_reg_746 );

    SC_METHOD(thread_tmp_2_1_i_fu_426_p2);
    sensitive << ( ap_CS_fsm );
    sensitive << ( sample_rsp_empty_n );
    sensitive << ( tmp_2_i_reg_612 );
    sensitive << ( next_buckets_1_reg_158 );

    SC_METHOD(thread_tmp_2_fu_572_p2);
    sensitive << ( ap_CS_fsm );
    sensitive << ( tmp_1_reg_751 );

    SC_METHOD(thread_tmp_2_i_fu_420_p2);
    sensitive << ( ap_CS_fsm );
    sensitive << ( next_buckets_0_reg_168 );

    SC_METHOD(thread_tmp_5_fu_447_p1);
    sensitive << ( j_bucket_index1_reg_289 );

    SC_METHOD(thread_tmp_5_i_cast_fu_493_p1);
    sensitive << ( tmp_5_i_fu_486_p3 );

    SC_METHOD(thread_tmp_5_i_fu_486_p3);
    sensitive << ( offset_i_reg_685 );

    SC_METHOD(thread_tmp_6_i_cast_fu_511_p1);
    sensitive << ( tmp_6_i_fu_504_p3 );

    SC_METHOD(thread_tmp_6_i_fu_504_p3);
    sensitive << ( offset_i_reg_685 );

    SC_METHOD(thread_tmp_s_fu_397_p2);
    sensitive << ( ap_CS_fsm );
    sensitive << ( length_r );
    sensitive << ( i_reg_134 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( nfa_forward_buckets_rsp_empty_n );
    sensitive << ( sample_rsp_empty_n );
    sensitive << ( tmp_s_reg_597 );
    sensitive << ( tmp_2_i_reg_612 );
    sensitive << ( tmp_2_1_i_reg_626 );
    sensitive << ( j_end_phi_fu_312_p4 );
    sensitive << ( any_phi_fu_324_p4 );

    ap_CS_fsm = "000000";
    grp_nfa_get_finals_fu_362_ap_start_ap_start_reg = SC_LOGIC_0;
    ap_return_preg = "0";
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "nfa_accept_sample_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, nfa_initials_buckets_req_din, "(port)nfa_initials_buckets_req_din");
    sc_trace(mVcdFile, nfa_initials_buckets_req_full_n, "(port)nfa_initials_buckets_req_full_n");
    sc_trace(mVcdFile, nfa_initials_buckets_req_write, "(port)nfa_initials_buckets_req_write");
    sc_trace(mVcdFile, nfa_initials_buckets_rsp_empty_n, "(port)nfa_initials_buckets_rsp_empty_n");
    sc_trace(mVcdFile, nfa_initials_buckets_rsp_read, "(port)nfa_initials_buckets_rsp_read");
    sc_trace(mVcdFile, nfa_initials_buckets_address, "(port)nfa_initials_buckets_address");
    sc_trace(mVcdFile, nfa_initials_buckets_datain, "(port)nfa_initials_buckets_datain");
    sc_trace(mVcdFile, nfa_initials_buckets_dataout, "(port)nfa_initials_buckets_dataout");
    sc_trace(mVcdFile, nfa_initials_buckets_size, "(port)nfa_initials_buckets_size");
    sc_trace(mVcdFile, nfa_finals_buckets_req_din, "(port)nfa_finals_buckets_req_din");
    sc_trace(mVcdFile, nfa_finals_buckets_req_full_n, "(port)nfa_finals_buckets_req_full_n");
    sc_trace(mVcdFile, nfa_finals_buckets_req_write, "(port)nfa_finals_buckets_req_write");
    sc_trace(mVcdFile, nfa_finals_buckets_rsp_empty_n, "(port)nfa_finals_buckets_rsp_empty_n");
    sc_trace(mVcdFile, nfa_finals_buckets_rsp_read, "(port)nfa_finals_buckets_rsp_read");
    sc_trace(mVcdFile, nfa_finals_buckets_address, "(port)nfa_finals_buckets_address");
    sc_trace(mVcdFile, nfa_finals_buckets_datain, "(port)nfa_finals_buckets_datain");
    sc_trace(mVcdFile, nfa_finals_buckets_dataout, "(port)nfa_finals_buckets_dataout");
    sc_trace(mVcdFile, nfa_finals_buckets_size, "(port)nfa_finals_buckets_size");
    sc_trace(mVcdFile, nfa_forward_buckets_req_din, "(port)nfa_forward_buckets_req_din");
    sc_trace(mVcdFile, nfa_forward_buckets_req_full_n, "(port)nfa_forward_buckets_req_full_n");
    sc_trace(mVcdFile, nfa_forward_buckets_req_write, "(port)nfa_forward_buckets_req_write");
    sc_trace(mVcdFile, nfa_forward_buckets_rsp_empty_n, "(port)nfa_forward_buckets_rsp_empty_n");
    sc_trace(mVcdFile, nfa_forward_buckets_rsp_read, "(port)nfa_forward_buckets_rsp_read");
    sc_trace(mVcdFile, nfa_forward_buckets_address, "(port)nfa_forward_buckets_address");
    sc_trace(mVcdFile, nfa_forward_buckets_datain, "(port)nfa_forward_buckets_datain");
    sc_trace(mVcdFile, nfa_forward_buckets_dataout, "(port)nfa_forward_buckets_dataout");
    sc_trace(mVcdFile, nfa_forward_buckets_size, "(port)nfa_forward_buckets_size");
    sc_trace(mVcdFile, nfa_symbols, "(port)nfa_symbols");
    sc_trace(mVcdFile, sample_req_din, "(port)sample_req_din");
    sc_trace(mVcdFile, sample_req_full_n, "(port)sample_req_full_n");
    sc_trace(mVcdFile, sample_req_write, "(port)sample_req_write");
    sc_trace(mVcdFile, sample_rsp_empty_n, "(port)sample_rsp_empty_n");
    sc_trace(mVcdFile, sample_rsp_read, "(port)sample_rsp_read");
    sc_trace(mVcdFile, sample_address, "(port)sample_address");
    sc_trace(mVcdFile, sample_datain, "(port)sample_datain");
    sc_trace(mVcdFile, sample_dataout, "(port)sample_dataout");
    sc_trace(mVcdFile, sample_size, "(port)sample_size");
    sc_trace(mVcdFile, empty, "(port)empty");
    sc_trace(mVcdFile, length_r, "(port)length_r");
    sc_trace(mVcdFile, ap_return, "(port)ap_return");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, reg_374, "reg_374");
    sc_trace(mVcdFile, current_buckets_0_reg_577, "current_buckets_0_reg_577");
    sc_trace(mVcdFile, current_buckets_1_reg_582, "current_buckets_1_reg_582");
    sc_trace(mVcdFile, tmp_s_fu_397_p2, "tmp_s_fu_397_p2");
    sc_trace(mVcdFile, tmp_s_reg_597, "tmp_s_reg_597");
    sc_trace(mVcdFile, grp_fu_402_p2, "grp_fu_402_p2");
    sc_trace(mVcdFile, i_1_reg_601, "i_1_reg_601");
    sc_trace(mVcdFile, sample_addr_1_reg_606, "sample_addr_1_reg_606");
    sc_trace(mVcdFile, tmp_2_i_fu_420_p2, "tmp_2_i_fu_420_p2");
    sc_trace(mVcdFile, tmp_2_i_reg_612, "tmp_2_i_reg_612");
    sc_trace(mVcdFile, grp_fu_414_p2, "grp_fu_414_p2");
    sc_trace(mVcdFile, p_rec_reg_616, "p_rec_reg_616");
    sc_trace(mVcdFile, sym_reg_621, "sym_reg_621");
    sc_trace(mVcdFile, tmp_2_1_i_fu_426_p2, "tmp_2_1_i_fu_426_p2");
    sc_trace(mVcdFile, tmp_2_1_i_reg_626, "tmp_2_1_i_reg_626");
    sc_trace(mVcdFile, grp_p_bsf32_hw_fu_368_ap_return, "grp_p_bsf32_hw_fu_368_ap_return");
    sc_trace(mVcdFile, r_bit_reg_630, "r_bit_reg_630");
    sc_trace(mVcdFile, agg_result_bucket_index_0_lcssa4_i_cast_cast_fu_432_p1, "agg_result_bucket_index_0_lcssa4_i_cast_cast_fu_432_p1");
    sc_trace(mVcdFile, j_bucket_index1_ph_cast_fu_436_p1, "j_bucket_index1_ph_cast_fu_436_p1");
    sc_trace(mVcdFile, j_bit1_ph_cast_fu_440_p1, "j_bit1_ph_cast_fu_440_p1");
    sc_trace(mVcdFile, tmp_18_i_cast_fu_444_p1, "tmp_18_i_cast_fu_444_p1");
    sc_trace(mVcdFile, tmp_18_i_cast_reg_650, "tmp_18_i_cast_reg_650");
    sc_trace(mVcdFile, j_end_phi_fu_312_p4, "j_end_phi_fu_312_p4");
    sc_trace(mVcdFile, grp_fu_463_p2, "grp_fu_463_p2");
    sc_trace(mVcdFile, state_reg_665, "state_reg_665");
    sc_trace(mVcdFile, grp_fu_476_p2, "grp_fu_476_p2");
    sc_trace(mVcdFile, tmp_17_i_reg_680, "tmp_17_i_reg_680");
    sc_trace(mVcdFile, grp_fu_482_p2, "grp_fu_482_p2");
    sc_trace(mVcdFile, offset_i_reg_685, "offset_i_reg_685");
    sc_trace(mVcdFile, j_bit_reg_701, "j_bit_reg_701");
    sc_trace(mVcdFile, j_bucket_index_reg_706, "j_bucket_index_reg_706");
    sc_trace(mVcdFile, j_bucket_reg_711, "j_bucket_reg_711");
    sc_trace(mVcdFile, p_s_reg_716, "p_s_reg_716");
    sc_trace(mVcdFile, next_buckets_0_1_fu_538_p2, "next_buckets_0_1_fu_538_p2");
    sc_trace(mVcdFile, next_buckets_0_1_reg_721, "next_buckets_0_1_reg_721");
    sc_trace(mVcdFile, next_buckets_1_1_fu_544_p2, "next_buckets_1_1_fu_544_p2");
    sc_trace(mVcdFile, tmp_buckets_0_reg_731, "tmp_buckets_0_reg_731");
    sc_trace(mVcdFile, tmp_buckets_1_reg_736, "tmp_buckets_1_reg_736");
    sc_trace(mVcdFile, current_buckets_0_1_fu_558_p2, "current_buckets_0_1_fu_558_p2");
    sc_trace(mVcdFile, current_buckets_0_1_reg_741, "current_buckets_0_1_reg_741");
    sc_trace(mVcdFile, current_buckets_1_1_fu_563_p2, "current_buckets_1_1_fu_563_p2");
    sc_trace(mVcdFile, current_buckets_1_1_reg_746, "current_buckets_1_1_reg_746");
    sc_trace(mVcdFile, tmp_1_fu_568_p2, "tmp_1_fu_568_p2");
    sc_trace(mVcdFile, tmp_1_reg_751, "tmp_1_reg_751");
    sc_trace(mVcdFile, tmp_2_fu_572_p2, "tmp_2_fu_572_p2");
    sc_trace(mVcdFile, tmp_2_reg_756, "tmp_2_reg_756");
    sc_trace(mVcdFile, grp_bitset_next_fu_344_p_read, "grp_bitset_next_fu_344_p_read");
    sc_trace(mVcdFile, grp_bitset_next_fu_344_r_bit, "grp_bitset_next_fu_344_r_bit");
    sc_trace(mVcdFile, grp_bitset_next_fu_344_r_bucket_index, "grp_bitset_next_fu_344_r_bucket_index");
    sc_trace(mVcdFile, grp_bitset_next_fu_344_r_bucket, "grp_bitset_next_fu_344_r_bucket");
    sc_trace(mVcdFile, grp_bitset_next_fu_344_ap_return_0, "grp_bitset_next_fu_344_ap_return_0");
    sc_trace(mVcdFile, grp_bitset_next_fu_344_ap_return_1, "grp_bitset_next_fu_344_ap_return_1");
    sc_trace(mVcdFile, grp_bitset_next_fu_344_ap_return_2, "grp_bitset_next_fu_344_ap_return_2");
    sc_trace(mVcdFile, grp_bitset_next_fu_344_ap_return_3, "grp_bitset_next_fu_344_ap_return_3");
    sc_trace(mVcdFile, grp_bitset_next_fu_344_ap_ce, "grp_bitset_next_fu_344_ap_ce");
    sc_trace(mVcdFile, grp_nfa_get_initials_fu_356_ap_start, "grp_nfa_get_initials_fu_356_ap_start");
    sc_trace(mVcdFile, grp_nfa_get_initials_fu_356_ap_done, "grp_nfa_get_initials_fu_356_ap_done");
    sc_trace(mVcdFile, grp_nfa_get_initials_fu_356_ap_idle, "grp_nfa_get_initials_fu_356_ap_idle");
    sc_trace(mVcdFile, grp_nfa_get_initials_fu_356_ap_ready, "grp_nfa_get_initials_fu_356_ap_ready");
    sc_trace(mVcdFile, grp_nfa_get_initials_fu_356_nfa_initials_buckets_req_din, "grp_nfa_get_initials_fu_356_nfa_initials_buckets_req_din");
    sc_trace(mVcdFile, grp_nfa_get_initials_fu_356_nfa_initials_buckets_req_full_n, "grp_nfa_get_initials_fu_356_nfa_initials_buckets_req_full_n");
    sc_trace(mVcdFile, grp_nfa_get_initials_fu_356_nfa_initials_buckets_req_write, "grp_nfa_get_initials_fu_356_nfa_initials_buckets_req_write");
    sc_trace(mVcdFile, grp_nfa_get_initials_fu_356_nfa_initials_buckets_rsp_empty_n, "grp_nfa_get_initials_fu_356_nfa_initials_buckets_rsp_empty_n");
    sc_trace(mVcdFile, grp_nfa_get_initials_fu_356_nfa_initials_buckets_rsp_read, "grp_nfa_get_initials_fu_356_nfa_initials_buckets_rsp_read");
    sc_trace(mVcdFile, grp_nfa_get_initials_fu_356_nfa_initials_buckets_address, "grp_nfa_get_initials_fu_356_nfa_initials_buckets_address");
    sc_trace(mVcdFile, grp_nfa_get_initials_fu_356_nfa_initials_buckets_datain, "grp_nfa_get_initials_fu_356_nfa_initials_buckets_datain");
    sc_trace(mVcdFile, grp_nfa_get_initials_fu_356_nfa_initials_buckets_dataout, "grp_nfa_get_initials_fu_356_nfa_initials_buckets_dataout");
    sc_trace(mVcdFile, grp_nfa_get_initials_fu_356_nfa_initials_buckets_size, "grp_nfa_get_initials_fu_356_nfa_initials_buckets_size");
    sc_trace(mVcdFile, grp_nfa_get_initials_fu_356_ap_ce, "grp_nfa_get_initials_fu_356_ap_ce");
    sc_trace(mVcdFile, grp_nfa_get_initials_fu_356_ap_return_0, "grp_nfa_get_initials_fu_356_ap_return_0");
    sc_trace(mVcdFile, grp_nfa_get_initials_fu_356_ap_return_1, "grp_nfa_get_initials_fu_356_ap_return_1");
    sc_trace(mVcdFile, grp_nfa_get_finals_fu_362_ap_start, "grp_nfa_get_finals_fu_362_ap_start");
    sc_trace(mVcdFile, grp_nfa_get_finals_fu_362_ap_done, "grp_nfa_get_finals_fu_362_ap_done");
    sc_trace(mVcdFile, grp_nfa_get_finals_fu_362_ap_idle, "grp_nfa_get_finals_fu_362_ap_idle");
    sc_trace(mVcdFile, grp_nfa_get_finals_fu_362_ap_ready, "grp_nfa_get_finals_fu_362_ap_ready");
    sc_trace(mVcdFile, grp_nfa_get_finals_fu_362_nfa_finals_buckets_req_din, "grp_nfa_get_finals_fu_362_nfa_finals_buckets_req_din");
    sc_trace(mVcdFile, grp_nfa_get_finals_fu_362_nfa_finals_buckets_req_full_n, "grp_nfa_get_finals_fu_362_nfa_finals_buckets_req_full_n");
    sc_trace(mVcdFile, grp_nfa_get_finals_fu_362_nfa_finals_buckets_req_write, "grp_nfa_get_finals_fu_362_nfa_finals_buckets_req_write");
    sc_trace(mVcdFile, grp_nfa_get_finals_fu_362_nfa_finals_buckets_rsp_empty_n, "grp_nfa_get_finals_fu_362_nfa_finals_buckets_rsp_empty_n");
    sc_trace(mVcdFile, grp_nfa_get_finals_fu_362_nfa_finals_buckets_rsp_read, "grp_nfa_get_finals_fu_362_nfa_finals_buckets_rsp_read");
    sc_trace(mVcdFile, grp_nfa_get_finals_fu_362_nfa_finals_buckets_address, "grp_nfa_get_finals_fu_362_nfa_finals_buckets_address");
    sc_trace(mVcdFile, grp_nfa_get_finals_fu_362_nfa_finals_buckets_datain, "grp_nfa_get_finals_fu_362_nfa_finals_buckets_datain");
    sc_trace(mVcdFile, grp_nfa_get_finals_fu_362_nfa_finals_buckets_dataout, "grp_nfa_get_finals_fu_362_nfa_finals_buckets_dataout");
    sc_trace(mVcdFile, grp_nfa_get_finals_fu_362_nfa_finals_buckets_size, "grp_nfa_get_finals_fu_362_nfa_finals_buckets_size");
    sc_trace(mVcdFile, grp_nfa_get_finals_fu_362_ap_ce, "grp_nfa_get_finals_fu_362_ap_ce");
    sc_trace(mVcdFile, grp_nfa_get_finals_fu_362_ap_return_0, "grp_nfa_get_finals_fu_362_ap_return_0");
    sc_trace(mVcdFile, grp_nfa_get_finals_fu_362_ap_return_1, "grp_nfa_get_finals_fu_362_ap_return_1");
    sc_trace(mVcdFile, grp_p_bsf32_hw_fu_368_bus_r, "grp_p_bsf32_hw_fu_368_bus_r");
    sc_trace(mVcdFile, grp_p_bsf32_hw_fu_368_ap_ce, "grp_p_bsf32_hw_fu_368_ap_ce");
    sc_trace(mVcdFile, i_reg_134, "i_reg_134");
    sc_trace(mVcdFile, any_phi_fu_324_p4, "any_phi_fu_324_p4");
    sc_trace(mVcdFile, p_01_rec_reg_146, "p_01_rec_reg_146");
    sc_trace(mVcdFile, next_buckets_1_reg_158, "next_buckets_1_reg_158");
    sc_trace(mVcdFile, next_buckets_0_reg_168, "next_buckets_0_reg_168");
    sc_trace(mVcdFile, bus_assign_reg_178, "bus_assign_reg_178");
    sc_trace(mVcdFile, agg_result_bucket_index_0_lcssa4_i_reg_190, "agg_result_bucket_index_0_lcssa4_i_reg_190");
    sc_trace(mVcdFile, j_bucket1_ph_reg_203, "j_bucket1_ph_reg_203");
    sc_trace(mVcdFile, j_bucket_index1_ph_reg_216, "j_bucket_index1_ph_reg_216");
    sc_trace(mVcdFile, j_bit1_ph_reg_227, "j_bit1_ph_reg_227");
    sc_trace(mVcdFile, j_end_ph_reg_238, "j_end_ph_reg_238");
    sc_trace(mVcdFile, tmp_buckets_1_3_reg_252, "tmp_buckets_1_3_reg_252");
    sc_trace(mVcdFile, tmp_buckets_0_3_reg_265, "tmp_buckets_0_3_reg_265");
    sc_trace(mVcdFile, j_bucket1_reg_278, "j_bucket1_reg_278");
    sc_trace(mVcdFile, j_bucket_index1_reg_289, "j_bucket_index1_reg_289");
    sc_trace(mVcdFile, j_bit1_reg_299, "j_bit1_reg_299");
    sc_trace(mVcdFile, j_end_reg_309, "j_end_reg_309");
    sc_trace(mVcdFile, any_reg_319, "any_reg_319");
    sc_trace(mVcdFile, p_0_reg_332, "p_0_reg_332");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
    sc_trace(mVcdFile, grp_nfa_get_finals_fu_362_ap_start_ap_start_reg, "grp_nfa_get_finals_fu_362_ap_start_ap_start_reg");
    sc_trace(mVcdFile, grp_fu_392_p2, "grp_fu_392_p2");
    sc_trace(mVcdFile, tmp_5_i_cast_fu_493_p1, "tmp_5_i_cast_fu_493_p1");
    sc_trace(mVcdFile, tmp_6_i_cast_fu_511_p1, "tmp_6_i_cast_fu_511_p1");
    sc_trace(mVcdFile, grp_fu_392_p0, "grp_fu_392_p0");
    sc_trace(mVcdFile, grp_fu_392_p1, "grp_fu_392_p1");
    sc_trace(mVcdFile, grp_fu_402_p0, "grp_fu_402_p0");
    sc_trace(mVcdFile, grp_fu_402_p1, "grp_fu_402_p1");
    sc_trace(mVcdFile, grp_fu_414_p0, "grp_fu_414_p0");
    sc_trace(mVcdFile, grp_fu_414_p1, "grp_fu_414_p1");
    sc_trace(mVcdFile, tmp_5_fu_447_p1, "tmp_5_fu_447_p1");
    sc_trace(mVcdFile, grp_fu_463_p0, "grp_fu_463_p0");
    sc_trace(mVcdFile, grp_fu_463_p1, "grp_fu_463_p1");
    sc_trace(mVcdFile, grp_fu_476_p0, "grp_fu_476_p0");
    sc_trace(mVcdFile, grp_fu_476_p1, "grp_fu_476_p1");
    sc_trace(mVcdFile, grp_fu_482_p0, "grp_fu_482_p0");
    sc_trace(mVcdFile, grp_fu_482_p1, "grp_fu_482_p1");
    sc_trace(mVcdFile, tmp_5_i_fu_486_p3, "tmp_5_i_fu_486_p3");
    sc_trace(mVcdFile, tmp_6_i_fu_504_p3, "tmp_6_i_fu_504_p3");
    sc_trace(mVcdFile, grp_fu_392_ce, "grp_fu_392_ce");
    sc_trace(mVcdFile, grp_fu_402_ce, "grp_fu_402_ce");
    sc_trace(mVcdFile, grp_fu_414_ce, "grp_fu_414_ce");
    sc_trace(mVcdFile, grp_fu_463_ce, "grp_fu_463_ce");
    sc_trace(mVcdFile, grp_fu_476_ce, "grp_fu_476_ce");
    sc_trace(mVcdFile, grp_fu_482_ce, "grp_fu_482_ce");
    sc_trace(mVcdFile, ap_return_preg, "ap_return_preg");
    sc_trace(mVcdFile, grp_fu_476_p00, "grp_fu_476_p00");
    sc_trace(mVcdFile, grp_fu_476_p10, "grp_fu_476_p10");
#endif

    }
}

nfa_accept_sample::~nfa_accept_sample() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    delete grp_bitset_next_fu_344;
    delete grp_nfa_get_initials_fu_356;
    delete grp_nfa_get_finals_fu_362;
    delete grp_p_bsf32_hw_fu_368;
    delete nfa_accept_samples_generic_hw_add_32ns_32ns_32_8_U17;
    delete nfa_accept_samples_generic_hw_add_16ns_16ns_16_4_U18;
    delete nfa_accept_samples_generic_hw_add_32ns_32ns_32_8_U19;
    delete nfa_accept_samples_generic_hw_add_6ns_6ns_6_2_U20;
    delete nfa_accept_samples_generic_hw_mul_8ns_6ns_14_4_U21;
    delete nfa_accept_samples_generic_hw_add_14ns_14ns_14_4_U22;
}

void nfa_accept_sample::thread_ap_clk_no_reset_() {
    if ((esl_seteq<1,6,6>(ap_ST_st20_fsm_19, ap_CS_fsm.read()) && 
         esl_seteq<1,1,1>(tmp_2_1_i_reg_626.read(), ap_const_lv1_0))) {
        agg_result_bucket_index_0_lcssa4_i_reg_190 = ap_const_lv1_1;
    } else if ((esl_seteq<1,6,6>(ap_ST_st19_fsm_18, ap_CS_fsm.read()) && 
                !esl_seteq<1,1,1>(sample_rsp_empty_n.read(), ap_const_logic_0) && 
                esl_seteq<1,1,1>(tmp_2_i_reg_612.read(), ap_const_lv1_0))) {
        agg_result_bucket_index_0_lcssa4_i_reg_190 = ap_const_lv1_0;
    }
    if (esl_seteq<1,6,6>(ap_ST_st24_fsm_23, ap_CS_fsm.read())) {
        any_reg_319 = ap_const_lv1_0;
    } else if (esl_seteq<1,6,6>(ap_ST_st38_fsm_37, ap_CS_fsm.read())) {
        any_reg_319 = ap_const_lv1_1;
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_st1_fsm_0;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_return_preg = ap_const_lv1_0;
    } else {
        if (esl_seteq<1,6,6>(ap_ST_st45_fsm_44, ap_CS_fsm.read())) {
            ap_return_preg = p_0_reg_332.read();
        }
    }
    if ((esl_seteq<1,6,6>(ap_ST_st20_fsm_19, ap_CS_fsm.read()) && 
         esl_seteq<1,1,1>(tmp_2_1_i_reg_626.read(), ap_const_lv1_0))) {
        bus_assign_reg_178 = next_buckets_1_reg_158.read();
    } else if ((esl_seteq<1,6,6>(ap_ST_st19_fsm_18, ap_CS_fsm.read()) && 
                !esl_seteq<1,1,1>(sample_rsp_empty_n.read(), ap_const_logic_0) && 
                esl_seteq<1,1,1>(tmp_2_i_reg_612.read(), ap_const_lv1_0))) {
        bus_assign_reg_178 = next_buckets_0_reg_168.read();
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        grp_nfa_get_finals_fu_362_ap_start_ap_start_reg = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,6,6>(ap_ST_st12_fsm_11, ap_NS_fsm.read()) && 
             esl_seteq<1,6,6>(ap_ST_st11_fsm_10, ap_CS_fsm.read()) && 
             esl_seteq<1,1,1>(tmp_s_reg_597.read(), ap_const_lv1_0))) {
            grp_nfa_get_finals_fu_362_ap_start_ap_start_reg = ap_const_logic_1;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, grp_nfa_get_finals_fu_362_ap_ready.read())) {
            grp_nfa_get_finals_fu_362_ap_start_ap_start_reg = ap_const_logic_0;
        }
    }
    if ((esl_seteq<1,6,6>(ap_ST_st25_fsm_24, ap_CS_fsm.read()) && 
         !esl_seteq<1,1,1>(ap_const_lv1_0, j_end_phi_fu_312_p4.read()) && 
         !esl_seteq<1,1,1>(ap_const_lv1_0, any_phi_fu_324_p4.read()))) {
        i_reg_134 = i_1_reg_601.read();
    } else if (esl_seteq<1,6,6>(ap_ST_st4_fsm_3, ap_CS_fsm.read())) {
        i_reg_134 = ap_const_lv16_0;
    }
    if (esl_seteq<1,6,6>(ap_ST_st24_fsm_23, ap_CS_fsm.read())) {
        j_bit1_reg_299 = j_bit1_ph_cast_fu_440_p1.read();
    } else if (esl_seteq<1,6,6>(ap_ST_st38_fsm_37, ap_CS_fsm.read())) {
        j_bit1_reg_299 = j_bit_reg_701.read();
    }
    if (esl_seteq<1,6,6>(ap_ST_st23_fsm_22, ap_CS_fsm.read())) {
        j_bucket1_ph_reg_203 = bus_assign_reg_178.read();
    } else if ((esl_seteq<1,6,6>(ap_ST_st20_fsm_19, ap_CS_fsm.read()) && 
                !esl_seteq<1,1,1>(tmp_2_1_i_reg_626.read(), ap_const_lv1_0))) {
        j_bucket1_ph_reg_203 = ap_const_lv32_0;
    }
    if (esl_seteq<1,6,6>(ap_ST_st24_fsm_23, ap_CS_fsm.read())) {
        j_bucket1_reg_278 = j_bucket1_ph_reg_203.read();
    } else if (esl_seteq<1,6,6>(ap_ST_st38_fsm_37, ap_CS_fsm.read())) {
        j_bucket1_reg_278 = j_bucket_reg_711.read();
    }
    if (esl_seteq<1,6,6>(ap_ST_st23_fsm_22, ap_CS_fsm.read())) {
        j_bucket_index1_ph_reg_216 = agg_result_bucket_index_0_lcssa4_i_cast_cast_fu_432_p1.read();
    } else if ((esl_seteq<1,6,6>(ap_ST_st20_fsm_19, ap_CS_fsm.read()) && 
                !esl_seteq<1,1,1>(tmp_2_1_i_reg_626.read(), ap_const_lv1_0))) {
        j_bucket_index1_ph_reg_216 = ap_const_lv2_2;
    }
    if (esl_seteq<1,6,6>(ap_ST_st24_fsm_23, ap_CS_fsm.read())) {
        j_bucket_index1_reg_289 = j_bucket_index1_ph_cast_fu_436_p1.read();
    } else if (esl_seteq<1,6,6>(ap_ST_st38_fsm_37, ap_CS_fsm.read())) {
        j_bucket_index1_reg_289 = j_bucket_index_reg_706.read();
    }
    if (esl_seteq<1,6,6>(ap_ST_st23_fsm_22, ap_CS_fsm.read())) {
        j_end_ph_reg_238 = ap_const_lv1_0;
    } else if ((esl_seteq<1,6,6>(ap_ST_st20_fsm_19, ap_CS_fsm.read()) && 
                !esl_seteq<1,1,1>(tmp_2_1_i_reg_626.read(), ap_const_lv1_0))) {
        j_end_ph_reg_238 = ap_const_lv1_1;
    }
    if (esl_seteq<1,6,6>(ap_ST_st24_fsm_23, ap_CS_fsm.read())) {
        j_end_reg_309 = j_end_ph_reg_238.read();
    } else if (esl_seteq<1,6,6>(ap_ST_st38_fsm_37, ap_CS_fsm.read())) {
        j_end_reg_309 = p_s_reg_716.read();
    }
    if ((esl_seteq<1,6,6>(ap_ST_st25_fsm_24, ap_CS_fsm.read()) && 
         !esl_seteq<1,1,1>(ap_const_lv1_0, j_end_phi_fu_312_p4.read()) && 
         !esl_seteq<1,1,1>(ap_const_lv1_0, any_phi_fu_324_p4.read()))) {
        next_buckets_0_reg_168 = tmp_buckets_0_3_reg_265.read();
    } else if (esl_seteq<1,6,6>(ap_ST_st4_fsm_3, ap_CS_fsm.read())) {
        next_buckets_0_reg_168 = current_buckets_0_reg_577.read();
    }
    if ((esl_seteq<1,6,6>(ap_ST_st25_fsm_24, ap_CS_fsm.read()) && 
         !esl_seteq<1,1,1>(ap_const_lv1_0, j_end_phi_fu_312_p4.read()) && 
         !esl_seteq<1,1,1>(ap_const_lv1_0, any_phi_fu_324_p4.read()))) {
        next_buckets_1_reg_158 = tmp_buckets_1_3_reg_252.read();
    } else if (esl_seteq<1,6,6>(ap_ST_st4_fsm_3, ap_CS_fsm.read())) {
        next_buckets_1_reg_158 = current_buckets_1_reg_582.read();
    }
    if ((esl_seteq<1,6,6>(ap_ST_st25_fsm_24, ap_CS_fsm.read()) && 
         !esl_seteq<1,1,1>(ap_const_lv1_0, j_end_phi_fu_312_p4.read()) && 
         !esl_seteq<1,1,1>(ap_const_lv1_0, any_phi_fu_324_p4.read()))) {
        p_01_rec_reg_146 = p_rec_reg_616.read();
    } else if (esl_seteq<1,6,6>(ap_ST_st4_fsm_3, ap_CS_fsm.read())) {
        p_01_rec_reg_146 = ap_const_lv32_0;
    }
    if ((esl_seteq<1,6,6>(ap_ST_st25_fsm_24, ap_CS_fsm.read()) && 
         !esl_seteq<1,1,1>(ap_const_lv1_0, j_end_phi_fu_312_p4.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, any_phi_fu_324_p4.read()))) {
        p_0_reg_332 = ap_const_lv1_0;
    } else if (esl_seteq<1,6,6>(ap_ST_st44_fsm_43, ap_CS_fsm.read())) {
        p_0_reg_332 = tmp_2_reg_756.read();
    }
    if (esl_seteq<1,6,6>(ap_ST_st24_fsm_23, ap_CS_fsm.read())) {
        tmp_buckets_0_3_reg_265 = ap_const_lv32_0;
    } else if (esl_seteq<1,6,6>(ap_ST_st38_fsm_37, ap_CS_fsm.read())) {
        tmp_buckets_0_3_reg_265 = next_buckets_0_1_reg_721.read();
    }
    if (esl_seteq<1,6,6>(ap_ST_st24_fsm_23, ap_CS_fsm.read())) {
        tmp_buckets_1_3_reg_252 = ap_const_lv32_0;
    } else if (esl_seteq<1,6,6>(ap_ST_st38_fsm_37, ap_CS_fsm.read())) {
        tmp_buckets_1_3_reg_252 = next_buckets_1_1_fu_544_p2.read();
    }
    if (esl_seteq<1,6,6>(ap_ST_st41_fsm_40, ap_CS_fsm.read())) {
        current_buckets_0_1_reg_741 = current_buckets_0_1_fu_558_p2.read();
        current_buckets_1_1_reg_746 = current_buckets_1_1_fu_563_p2.read();
    }
    if (esl_seteq<1,6,6>(ap_ST_st3_fsm_2, ap_CS_fsm.read())) {
        current_buckets_0_reg_577 = grp_nfa_get_initials_fu_356_ap_return_0.read();
        current_buckets_1_reg_582 = grp_nfa_get_initials_fu_356_ap_return_1.read();
    }
    if (esl_seteq<1,6,6>(ap_ST_st8_fsm_7, ap_CS_fsm.read())) {
        i_1_reg_601 = grp_fu_402_p2.read();
    }
    if (esl_seteq<1,6,6>(ap_ST_st23_fsm_22, ap_CS_fsm.read())) {
        j_bit1_ph_reg_227 = r_bit_reg_630.read();
    }
    if ((esl_seteq<1,6,6>(ap_ST_st36_fsm_35, ap_CS_fsm.read()) && !esl_seteq<1,1,1>(nfa_forward_buckets_rsp_empty_n.read(), ap_const_logic_0))) {
        j_bit_reg_701 = grp_bitset_next_fu_344_ap_return_0.read();
        j_bucket_index_reg_706 = grp_bitset_next_fu_344_ap_return_1.read();
        j_bucket_reg_711 = grp_bitset_next_fu_344_ap_return_2.read();
        p_s_reg_716 = grp_bitset_next_fu_344_ap_return_3.read();
    }
    if ((!esl_seteq<1,1,1>(nfa_forward_buckets_rsp_empty_n.read(), ap_const_logic_0) && esl_seteq<1,6,6>(ap_ST_st37_fsm_36, ap_CS_fsm.read()))) {
        next_buckets_0_1_reg_721 = next_buckets_0_1_fu_538_p2.read();
    }
    if (esl_seteq<1,6,6>(ap_ST_st34_fsm_33, ap_CS_fsm.read())) {
        offset_i_reg_685 = grp_fu_482_p2.read();
    }
    if ((esl_seteq<1,6,6>(ap_ST_st19_fsm_18, ap_CS_fsm.read()) && !esl_seteq<1,1,1>(sample_rsp_empty_n.read(), ap_const_logic_0))) {
        p_rec_reg_616 = grp_fu_414_p2.read();
        sym_reg_621 = sample_datain.read();
    }
    if (esl_seteq<1,6,6>(ap_ST_st22_fsm_21, ap_CS_fsm.read())) {
        r_bit_reg_630 = grp_p_bsf32_hw_fu_368_ap_return.read();
    }
    if (((esl_seteq<1,6,6>(ap_ST_st36_fsm_35, ap_CS_fsm.read()) && 
  !esl_seteq<1,1,1>(nfa_forward_buckets_rsp_empty_n.read(), ap_const_logic_0)) || (!esl_seteq<1,1,1>(nfa_forward_buckets_rsp_empty_n.read(), ap_const_logic_0) && 
  esl_seteq<1,6,6>(ap_ST_st37_fsm_36, ap_CS_fsm.read())))) {
        reg_374 = nfa_forward_buckets_datain.read();
    }
    if (esl_seteq<1,6,6>(ap_ST_st12_fsm_11, ap_CS_fsm.read())) {
        sample_addr_1_reg_606 = grp_fu_392_p2.read();
    }
    if (esl_seteq<1,6,6>(ap_ST_st26_fsm_25, ap_CS_fsm.read())) {
        state_reg_665 = grp_fu_463_p2.read();
    }
    if (esl_seteq<1,6,6>(ap_ST_st30_fsm_29, ap_CS_fsm.read())) {
        tmp_17_i_reg_680 = grp_fu_476_p2.read();
    }
    if (esl_seteq<1,6,6>(ap_ST_st24_fsm_23, ap_CS_fsm.read())) {
        tmp_18_i_cast_reg_650 = tmp_18_i_cast_fu_444_p1.read();
    }
    if (esl_seteq<1,6,6>(ap_ST_st42_fsm_41, ap_CS_fsm.read())) {
        tmp_1_reg_751 = tmp_1_fu_568_p2.read();
    }
    if ((esl_seteq<1,6,6>(ap_ST_st19_fsm_18, ap_CS_fsm.read()) && !esl_seteq<1,1,1>(sample_rsp_empty_n.read(), ap_const_logic_0) && !esl_seteq<1,1,1>(tmp_2_i_reg_612.read(), ap_const_lv1_0))) {
        tmp_2_1_i_reg_626 = tmp_2_1_i_fu_426_p2.read();
    }
    if (esl_seteq<1,6,6>(ap_ST_st18_fsm_17, ap_CS_fsm.read())) {
        tmp_2_i_reg_612 = tmp_2_i_fu_420_p2.read();
    }
    if (esl_seteq<1,6,6>(ap_ST_st43_fsm_42, ap_CS_fsm.read())) {
        tmp_2_reg_756 = tmp_2_fu_572_p2.read();
    }
    if (esl_seteq<1,6,6>(ap_ST_st40_fsm_39, ap_CS_fsm.read())) {
        tmp_buckets_0_reg_731 = grp_nfa_get_finals_fu_362_ap_return_0.read();
        tmp_buckets_1_reg_736 = grp_nfa_get_finals_fu_362_ap_return_1.read();
    }
    if (esl_seteq<1,6,6>(ap_ST_st5_fsm_4, ap_CS_fsm.read())) {
        tmp_s_reg_597 = tmp_s_fu_397_p2.read();
    }
}

void nfa_accept_sample::thread_agg_result_bucket_index_0_lcssa4_i_cast_cast_fu_432_p1() {
    agg_result_bucket_index_0_lcssa4_i_cast_cast_fu_432_p1 = esl_zext<2,1>(agg_result_bucket_index_0_lcssa4_i_reg_190.read());
}

void nfa_accept_sample::thread_any_phi_fu_324_p4() {
    any_phi_fu_324_p4 = any_reg_319.read();
}

void nfa_accept_sample::thread_ap_done() {
    if (((!esl_seteq<1,1,1>(ap_const_logic_1, ap_start.read()) && 
          esl_seteq<1,6,6>(ap_ST_st1_fsm_0, ap_CS_fsm.read())) || 
         esl_seteq<1,6,6>(ap_ST_st45_fsm_44, ap_CS_fsm.read()))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void nfa_accept_sample::thread_ap_idle() {
    if ((!esl_seteq<1,1,1>(ap_const_logic_1, ap_start.read()) && 
         esl_seteq<1,6,6>(ap_ST_st1_fsm_0, ap_CS_fsm.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void nfa_accept_sample::thread_ap_ready() {
    if (esl_seteq<1,6,6>(ap_ST_st45_fsm_44, ap_CS_fsm.read())) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void nfa_accept_sample::thread_ap_return() {
    if (esl_seteq<1,6,6>(ap_ST_st45_fsm_44, ap_CS_fsm.read())) {
        ap_return = p_0_reg_332.read();
    } else {
        ap_return = ap_return_preg.read();
    }
}

void nfa_accept_sample::thread_current_buckets_0_1_fu_558_p2() {
    current_buckets_0_1_fu_558_p2 = (next_buckets_0_reg_168.read() & tmp_buckets_0_reg_731.read());
}

void nfa_accept_sample::thread_current_buckets_1_1_fu_563_p2() {
    current_buckets_1_1_fu_563_p2 = (next_buckets_1_reg_158.read() & tmp_buckets_1_reg_736.read());
}

void nfa_accept_sample::thread_grp_bitset_next_fu_344_ap_ce() {
    if (((esl_seteq<1,6,6>(ap_ST_st36_fsm_35, ap_CS_fsm.read()) && 
          !esl_seteq<1,1,1>(nfa_forward_buckets_rsp_empty_n.read(), ap_const_logic_0)) || 
         (esl_seteq<1,6,6>(ap_ST_st25_fsm_24, ap_CS_fsm.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, j_end_phi_fu_312_p4.read())) || 
         esl_seteq<1,6,6>(ap_ST_st26_fsm_25, ap_CS_fsm.read()) || 
         esl_seteq<1,6,6>(ap_ST_st27_fsm_26, ap_CS_fsm.read()) || 
         esl_seteq<1,6,6>(ap_ST_st30_fsm_29, ap_CS_fsm.read()) || 
         esl_seteq<1,6,6>(ap_ST_st34_fsm_33, ap_CS_fsm.read()) || 
         esl_seteq<1,6,6>(ap_ST_st35_fsm_34, ap_CS_fsm.read()) || 
         esl_seteq<1,6,6>(ap_ST_st28_fsm_27, ap_CS_fsm.read()) || 
         esl_seteq<1,6,6>(ap_ST_st29_fsm_28, ap_CS_fsm.read()) || 
         esl_seteq<1,6,6>(ap_ST_st31_fsm_30, ap_CS_fsm.read()) || 
         esl_seteq<1,6,6>(ap_ST_st32_fsm_31, ap_CS_fsm.read()) || 
         esl_seteq<1,6,6>(ap_ST_st33_fsm_32, ap_CS_fsm.read()))) {
        grp_bitset_next_fu_344_ap_ce = ap_const_logic_1;
    } else {
        grp_bitset_next_fu_344_ap_ce = ap_const_logic_0;
    }
}

void nfa_accept_sample::thread_grp_bitset_next_fu_344_p_read() {
    grp_bitset_next_fu_344_p_read = next_buckets_1_reg_158.read();
}

void nfa_accept_sample::thread_grp_bitset_next_fu_344_r_bit() {
    grp_bitset_next_fu_344_r_bit = j_bit1_reg_299.read();
}

void nfa_accept_sample::thread_grp_bitset_next_fu_344_r_bucket() {
    grp_bitset_next_fu_344_r_bucket = j_bucket1_reg_278.read();
}

void nfa_accept_sample::thread_grp_bitset_next_fu_344_r_bucket_index() {
    grp_bitset_next_fu_344_r_bucket_index = j_bucket_index1_reg_289.read();
}

void nfa_accept_sample::thread_grp_fu_392_ce() {
    grp_fu_392_ce = ap_const_logic_1;
}

void nfa_accept_sample::thread_grp_fu_392_p0() {
    grp_fu_392_p0 = p_01_rec_reg_146.read();
}

void nfa_accept_sample::thread_grp_fu_392_p1() {
    grp_fu_392_p1 = empty.read();
}

void nfa_accept_sample::thread_grp_fu_402_ce() {
    grp_fu_402_ce = ap_const_logic_1;
}

void nfa_accept_sample::thread_grp_fu_402_p0() {
    grp_fu_402_p0 = i_reg_134.read();
}

void nfa_accept_sample::thread_grp_fu_402_p1() {
    grp_fu_402_p1 = ap_const_lv16_1;
}

void nfa_accept_sample::thread_grp_fu_414_ce() {
    if ((esl_seteq<1,6,6>(ap_ST_st18_fsm_17, ap_CS_fsm.read()) || 
         (esl_seteq<1,6,6>(ap_ST_st19_fsm_18, ap_CS_fsm.read()) && 
          !esl_seteq<1,1,1>(sample_rsp_empty_n.read(), ap_const_logic_0)) || 
         (esl_seteq<1,6,6>(ap_ST_st12_fsm_11, ap_CS_fsm.read()) && 
          !esl_seteq<1,1,1>(tmp_s_reg_597.read(), ap_const_lv1_0)) || 
         esl_seteq<1,6,6>(ap_ST_st13_fsm_12, ap_CS_fsm.read()) || 
         esl_seteq<1,6,6>(ap_ST_st14_fsm_13, ap_CS_fsm.read()) || 
         esl_seteq<1,6,6>(ap_ST_st15_fsm_14, ap_CS_fsm.read()) || 
         esl_seteq<1,6,6>(ap_ST_st16_fsm_15, ap_CS_fsm.read()) || 
         esl_seteq<1,6,6>(ap_ST_st17_fsm_16, ap_CS_fsm.read()))) {
        grp_fu_414_ce = ap_const_logic_1;
    } else {
        grp_fu_414_ce = ap_const_logic_0;
    }
}

void nfa_accept_sample::thread_grp_fu_414_p0() {
    grp_fu_414_p0 = p_01_rec_reg_146.read();
}

void nfa_accept_sample::thread_grp_fu_414_p1() {
    grp_fu_414_p1 = ap_const_lv32_1;
}

void nfa_accept_sample::thread_grp_fu_463_ce() {
    grp_fu_463_ce = ap_const_logic_1;
}

void nfa_accept_sample::thread_grp_fu_463_p0() {
    grp_fu_463_p0 = esl_concat<1,5>(tmp_5_fu_447_p1.read(), ap_const_lv5_0);
}

void nfa_accept_sample::thread_grp_fu_463_p1() {
    grp_fu_463_p1 = j_bit1_reg_299.read().range(6-1, 0);
}

void nfa_accept_sample::thread_grp_fu_476_ce() {
    grp_fu_476_ce = ap_const_logic_1;
}

void nfa_accept_sample::thread_grp_fu_476_p0() {
    grp_fu_476_p0 =  (sc_lv<8>) (grp_fu_476_p00.read());
}

void nfa_accept_sample::thread_grp_fu_476_p00() {
    grp_fu_476_p00 = esl_zext<14,8>(nfa_symbols.read());
}

void nfa_accept_sample::thread_grp_fu_476_p1() {
    grp_fu_476_p1 =  (sc_lv<6>) (grp_fu_476_p10.read());
}

void nfa_accept_sample::thread_grp_fu_476_p10() {
    grp_fu_476_p10 = esl_zext<14,6>(state_reg_665.read());
}

void nfa_accept_sample::thread_grp_fu_482_ce() {
    grp_fu_482_ce = ap_const_logic_1;
}

void nfa_accept_sample::thread_grp_fu_482_p0() {
    grp_fu_482_p0 = tmp_17_i_reg_680.read();
}

void nfa_accept_sample::thread_grp_fu_482_p1() {
    grp_fu_482_p1 = tmp_18_i_cast_reg_650.read();
}

void nfa_accept_sample::thread_grp_nfa_get_finals_fu_362_ap_ce() {
    grp_nfa_get_finals_fu_362_ap_ce = ap_const_logic_1;
}

void nfa_accept_sample::thread_grp_nfa_get_finals_fu_362_ap_start() {
    grp_nfa_get_finals_fu_362_ap_start = grp_nfa_get_finals_fu_362_ap_start_ap_start_reg.read();
}

void nfa_accept_sample::thread_grp_nfa_get_finals_fu_362_nfa_finals_buckets_datain() {
    grp_nfa_get_finals_fu_362_nfa_finals_buckets_datain = nfa_finals_buckets_datain.read();
}

void nfa_accept_sample::thread_grp_nfa_get_finals_fu_362_nfa_finals_buckets_req_full_n() {
    grp_nfa_get_finals_fu_362_nfa_finals_buckets_req_full_n = nfa_finals_buckets_req_full_n.read();
}

void nfa_accept_sample::thread_grp_nfa_get_finals_fu_362_nfa_finals_buckets_rsp_empty_n() {
    grp_nfa_get_finals_fu_362_nfa_finals_buckets_rsp_empty_n = nfa_finals_buckets_rsp_empty_n.read();
}

void nfa_accept_sample::thread_grp_nfa_get_initials_fu_356_ap_ce() {
    grp_nfa_get_initials_fu_356_ap_ce = ap_const_logic_1;
}

void nfa_accept_sample::thread_grp_nfa_get_initials_fu_356_ap_start() {
    if ((esl_seteq<1,6,6>(ap_ST_st1_fsm_0, ap_CS_fsm.read()) && 
         !esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0))) {
        grp_nfa_get_initials_fu_356_ap_start = ap_const_logic_1;
    } else {
        grp_nfa_get_initials_fu_356_ap_start = ap_const_logic_0;
    }
}

void nfa_accept_sample::thread_grp_nfa_get_initials_fu_356_nfa_initials_buckets_datain() {
    grp_nfa_get_initials_fu_356_nfa_initials_buckets_datain = nfa_initials_buckets_datain.read();
}

void nfa_accept_sample::thread_grp_nfa_get_initials_fu_356_nfa_initials_buckets_req_full_n() {
    grp_nfa_get_initials_fu_356_nfa_initials_buckets_req_full_n = nfa_initials_buckets_req_full_n.read();
}

void nfa_accept_sample::thread_grp_nfa_get_initials_fu_356_nfa_initials_buckets_rsp_empty_n() {
    grp_nfa_get_initials_fu_356_nfa_initials_buckets_rsp_empty_n = nfa_initials_buckets_rsp_empty_n.read();
}

void nfa_accept_sample::thread_grp_p_bsf32_hw_fu_368_ap_ce() {
    if ((esl_seteq<1,6,6>(ap_ST_st22_fsm_21, ap_CS_fsm.read()) || 
         esl_seteq<1,6,6>(ap_ST_st21_fsm_20, ap_CS_fsm.read()))) {
        grp_p_bsf32_hw_fu_368_ap_ce = ap_const_logic_1;
    } else {
        grp_p_bsf32_hw_fu_368_ap_ce = ap_const_logic_0;
    }
}

void nfa_accept_sample::thread_grp_p_bsf32_hw_fu_368_bus_r() {
    grp_p_bsf32_hw_fu_368_bus_r = bus_assign_reg_178.read();
}

void nfa_accept_sample::thread_j_bit1_ph_cast_fu_440_p1() {
    j_bit1_ph_cast_fu_440_p1 = esl_zext<8,5>(j_bit1_ph_reg_227.read());
}

void nfa_accept_sample::thread_j_bucket_index1_ph_cast_fu_436_p1() {
    j_bucket_index1_ph_cast_fu_436_p1 = esl_zext<8,2>(j_bucket_index1_ph_reg_216.read());
}

void nfa_accept_sample::thread_j_end_phi_fu_312_p4() {
    j_end_phi_fu_312_p4 = j_end_reg_309.read();
}

void nfa_accept_sample::thread_next_buckets_0_1_fu_538_p2() {
    next_buckets_0_1_fu_538_p2 = (tmp_buckets_0_3_reg_265.read() | reg_374.read());
}

void nfa_accept_sample::thread_next_buckets_1_1_fu_544_p2() {
    next_buckets_1_1_fu_544_p2 = (tmp_buckets_1_3_reg_252.read() | reg_374.read());
}

void nfa_accept_sample::thread_nfa_finals_buckets_address() {
    nfa_finals_buckets_address = grp_nfa_get_finals_fu_362_nfa_finals_buckets_address.read();
}

void nfa_accept_sample::thread_nfa_finals_buckets_dataout() {
    nfa_finals_buckets_dataout = grp_nfa_get_finals_fu_362_nfa_finals_buckets_dataout.read();
}

void nfa_accept_sample::thread_nfa_finals_buckets_req_din() {
    nfa_finals_buckets_req_din = grp_nfa_get_finals_fu_362_nfa_finals_buckets_req_din.read();
}

void nfa_accept_sample::thread_nfa_finals_buckets_req_write() {
    nfa_finals_buckets_req_write = grp_nfa_get_finals_fu_362_nfa_finals_buckets_req_write.read();
}

void nfa_accept_sample::thread_nfa_finals_buckets_rsp_read() {
    nfa_finals_buckets_rsp_read = grp_nfa_get_finals_fu_362_nfa_finals_buckets_rsp_read.read();
}

void nfa_accept_sample::thread_nfa_finals_buckets_size() {
    nfa_finals_buckets_size = grp_nfa_get_finals_fu_362_nfa_finals_buckets_size.read();
}

void nfa_accept_sample::thread_nfa_forward_buckets_address() {
    if ((esl_seteq<1,6,6>(ap_ST_st36_fsm_35, ap_CS_fsm.read()) && 
         !esl_seteq<1,1,1>(nfa_forward_buckets_rsp_empty_n.read(), ap_const_logic_0))) {
        nfa_forward_buckets_address = tmp_6_i_cast_fu_511_p1.read();
    } else if (esl_seteq<1,6,6>(ap_ST_st35_fsm_34, ap_CS_fsm.read())) {
        nfa_forward_buckets_address = tmp_5_i_cast_fu_493_p1.read();
    } else {
        nfa_forward_buckets_address = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    }
}

void nfa_accept_sample::thread_nfa_forward_buckets_dataout() {
    nfa_forward_buckets_dataout = ap_const_lv32_0;
}

void nfa_accept_sample::thread_nfa_forward_buckets_req_din() {
    nfa_forward_buckets_req_din = ap_const_logic_0;
}

void nfa_accept_sample::thread_nfa_forward_buckets_req_write() {
    if (((esl_seteq<1,6,6>(ap_ST_st36_fsm_35, ap_CS_fsm.read()) && 
          !esl_seteq<1,1,1>(nfa_forward_buckets_rsp_empty_n.read(), ap_const_logic_0)) || 
         esl_seteq<1,6,6>(ap_ST_st35_fsm_34, ap_CS_fsm.read()))) {
        nfa_forward_buckets_req_write = ap_const_logic_1;
    } else {
        nfa_forward_buckets_req_write = ap_const_logic_0;
    }
}

void nfa_accept_sample::thread_nfa_forward_buckets_rsp_read() {
    if (((esl_seteq<1,6,6>(ap_ST_st36_fsm_35, ap_CS_fsm.read()) && 
          !esl_seteq<1,1,1>(nfa_forward_buckets_rsp_empty_n.read(), ap_const_logic_0)) || 
         (!esl_seteq<1,1,1>(nfa_forward_buckets_rsp_empty_n.read(), ap_const_logic_0) && 
          esl_seteq<1,6,6>(ap_ST_st37_fsm_36, ap_CS_fsm.read())))) {
        nfa_forward_buckets_rsp_read = ap_const_logic_1;
    } else {
        nfa_forward_buckets_rsp_read = ap_const_logic_0;
    }
}

void nfa_accept_sample::thread_nfa_forward_buckets_size() {
    nfa_forward_buckets_size = ap_const_lv32_1;
}

void nfa_accept_sample::thread_nfa_initials_buckets_address() {
    nfa_initials_buckets_address = grp_nfa_get_initials_fu_356_nfa_initials_buckets_address.read();
}

void nfa_accept_sample::thread_nfa_initials_buckets_dataout() {
    nfa_initials_buckets_dataout = grp_nfa_get_initials_fu_356_nfa_initials_buckets_dataout.read();
}

void nfa_accept_sample::thread_nfa_initials_buckets_req_din() {
    nfa_initials_buckets_req_din = grp_nfa_get_initials_fu_356_nfa_initials_buckets_req_din.read();
}

void nfa_accept_sample::thread_nfa_initials_buckets_req_write() {
    nfa_initials_buckets_req_write = grp_nfa_get_initials_fu_356_nfa_initials_buckets_req_write.read();
}

void nfa_accept_sample::thread_nfa_initials_buckets_rsp_read() {
    nfa_initials_buckets_rsp_read = grp_nfa_get_initials_fu_356_nfa_initials_buckets_rsp_read.read();
}

void nfa_accept_sample::thread_nfa_initials_buckets_size() {
    nfa_initials_buckets_size = grp_nfa_get_initials_fu_356_nfa_initials_buckets_size.read();
}

void nfa_accept_sample::thread_sample_address() {
    sample_address = sample_addr_1_reg_606.read();
}

void nfa_accept_sample::thread_sample_dataout() {
    sample_dataout = ap_const_lv8_0;
}

void nfa_accept_sample::thread_sample_req_din() {
    sample_req_din = ap_const_logic_0;
}

void nfa_accept_sample::thread_sample_req_write() {
    if (esl_seteq<1,6,6>(ap_ST_st18_fsm_17, ap_CS_fsm.read())) {
        sample_req_write = ap_const_logic_1;
    } else {
        sample_req_write = ap_const_logic_0;
    }
}

void nfa_accept_sample::thread_sample_rsp_read() {
    if ((esl_seteq<1,6,6>(ap_ST_st19_fsm_18, ap_CS_fsm.read()) && 
         !esl_seteq<1,1,1>(sample_rsp_empty_n.read(), ap_const_logic_0))) {
        sample_rsp_read = ap_const_logic_1;
    } else {
        sample_rsp_read = ap_const_logic_0;
    }
}

void nfa_accept_sample::thread_sample_size() {
    sample_size = ap_const_lv32_1;
}

void nfa_accept_sample::thread_tmp_18_i_cast_fu_444_p1() {
    tmp_18_i_cast_fu_444_p1 = esl_zext<14,8>(sym_reg_621.read());
}

void nfa_accept_sample::thread_tmp_1_fu_568_p2() {
    tmp_1_fu_568_p2 = (current_buckets_1_1_reg_746.read() | current_buckets_0_1_reg_741.read());
}

void nfa_accept_sample::thread_tmp_2_1_i_fu_426_p2() {
    tmp_2_1_i_fu_426_p2 = (!next_buckets_1_reg_158.read().is_01() || !ap_const_lv32_0.is_01())? sc_lv<1>(): sc_lv<1>(next_buckets_1_reg_158.read() == ap_const_lv32_0);
}

void nfa_accept_sample::thread_tmp_2_fu_572_p2() {
    tmp_2_fu_572_p2 = (!tmp_1_reg_751.read().is_01() || !ap_const_lv32_0.is_01())? sc_lv<1>(): sc_lv<1>(tmp_1_reg_751.read() != ap_const_lv32_0);
}

void nfa_accept_sample::thread_tmp_2_i_fu_420_p2() {
    tmp_2_i_fu_420_p2 = (!next_buckets_0_reg_168.read().is_01() || !ap_const_lv32_0.is_01())? sc_lv<1>(): sc_lv<1>(next_buckets_0_reg_168.read() == ap_const_lv32_0);
}

void nfa_accept_sample::thread_tmp_5_fu_447_p1() {
    tmp_5_fu_447_p1 = j_bucket_index1_reg_289.read().range(1-1, 0);
}

void nfa_accept_sample::thread_tmp_5_i_cast_fu_493_p1() {
    tmp_5_i_cast_fu_493_p1 = esl_zext<32,15>(tmp_5_i_fu_486_p3.read());
}

void nfa_accept_sample::thread_tmp_5_i_fu_486_p3() {
    tmp_5_i_fu_486_p3 = esl_concat<14,1>(offset_i_reg_685.read(), ap_const_lv1_0);
}

void nfa_accept_sample::thread_tmp_6_i_cast_fu_511_p1() {
    tmp_6_i_cast_fu_511_p1 = esl_zext<32,15>(tmp_6_i_fu_504_p3.read());
}

void nfa_accept_sample::thread_tmp_6_i_fu_504_p3() {
    tmp_6_i_fu_504_p3 = esl_concat<14,1>(offset_i_reg_685.read(), ap_const_lv1_1);
}

void nfa_accept_sample::thread_tmp_s_fu_397_p2() {
    tmp_s_fu_397_p2 = (!i_reg_134.read().is_01() || !length_r.read().is_01())? sc_lv<1>(): (sc_biguint<16>(i_reg_134.read()) < sc_biguint<16>(length_r.read()));
}

void nfa_accept_sample::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint()) {
        case 0 : 
            if (!esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0)) {
                ap_NS_fsm = ap_ST_st2_fsm_1;
            } else {
                ap_NS_fsm = ap_ST_st1_fsm_0;
            }
            break;
        case 1 : 
            ap_NS_fsm = ap_ST_st3_fsm_2;
            break;
        case 2 : 
            ap_NS_fsm = ap_ST_st4_fsm_3;
            break;
        case 3 : 
            ap_NS_fsm = ap_ST_st5_fsm_4;
            break;
        case 4 : 
            ap_NS_fsm = ap_ST_st6_fsm_5;
            break;
        case 5 : 
            ap_NS_fsm = ap_ST_st7_fsm_6;
            break;
        case 6 : 
            ap_NS_fsm = ap_ST_st8_fsm_7;
            break;
        case 7 : 
            ap_NS_fsm = ap_ST_st9_fsm_8;
            break;
        case 8 : 
            ap_NS_fsm = ap_ST_st10_fsm_9;
            break;
        case 9 : 
            ap_NS_fsm = ap_ST_st11_fsm_10;
            break;
        case 10 : 
            ap_NS_fsm = ap_ST_st12_fsm_11;
            break;
        case 11 : 
            if (esl_seteq<1,1,1>(tmp_s_reg_597.read(), ap_const_lv1_0)) {
                ap_NS_fsm = ap_ST_st39_fsm_38;
            } else {
                ap_NS_fsm = ap_ST_st13_fsm_12;
            }
            break;
        case 12 : 
            ap_NS_fsm = ap_ST_st14_fsm_13;
            break;
        case 13 : 
            ap_NS_fsm = ap_ST_st15_fsm_14;
            break;
        case 14 : 
            ap_NS_fsm = ap_ST_st16_fsm_15;
            break;
        case 15 : 
            ap_NS_fsm = ap_ST_st17_fsm_16;
            break;
        case 16 : 
            ap_NS_fsm = ap_ST_st18_fsm_17;
            break;
        case 17 : 
            ap_NS_fsm = ap_ST_st19_fsm_18;
            break;
        case 18 : 
            if ((!esl_seteq<1,1,1>(sample_rsp_empty_n.read(), ap_const_logic_0) && esl_seteq<1,1,1>(tmp_2_i_reg_612.read(), ap_const_lv1_0))) {
                ap_NS_fsm = ap_ST_st21_fsm_20;
            } else if ((!esl_seteq<1,1,1>(sample_rsp_empty_n.read(), ap_const_logic_0) && !esl_seteq<1,1,1>(tmp_2_i_reg_612.read(), ap_const_lv1_0))) {
                ap_NS_fsm = ap_ST_st20_fsm_19;
            } else {
                ap_NS_fsm = ap_ST_st19_fsm_18;
            }
            break;
        case 19 : 
            if (!esl_seteq<1,1,1>(tmp_2_1_i_reg_626.read(), ap_const_lv1_0)) {
                ap_NS_fsm = ap_ST_st24_fsm_23;
            } else {
                ap_NS_fsm = ap_ST_st21_fsm_20;
            }
            break;
        case 20 : 
            ap_NS_fsm = ap_ST_st22_fsm_21;
            break;
        case 21 : 
            ap_NS_fsm = ap_ST_st23_fsm_22;
            break;
        case 22 : 
            ap_NS_fsm = ap_ST_st24_fsm_23;
            break;
        case 23 : 
            ap_NS_fsm = ap_ST_st25_fsm_24;
            break;
        case 24 : 
            if ((!esl_seteq<1,1,1>(ap_const_lv1_0, j_end_phi_fu_312_p4.read()) && !esl_seteq<1,1,1>(ap_const_lv1_0, any_phi_fu_324_p4.read()))) {
                ap_NS_fsm = ap_ST_st5_fsm_4;
            } else if ((!esl_seteq<1,1,1>(ap_const_lv1_0, j_end_phi_fu_312_p4.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, any_phi_fu_324_p4.read()))) {
                ap_NS_fsm = ap_ST_st45_fsm_44;
            } else {
                ap_NS_fsm = ap_ST_st26_fsm_25;
            }
            break;
        case 25 : 
            ap_NS_fsm = ap_ST_st27_fsm_26;
            break;
        case 26 : 
            ap_NS_fsm = ap_ST_st28_fsm_27;
            break;
        case 27 : 
            ap_NS_fsm = ap_ST_st29_fsm_28;
            break;
        case 28 : 
            ap_NS_fsm = ap_ST_st30_fsm_29;
            break;
        case 29 : 
            ap_NS_fsm = ap_ST_st31_fsm_30;
            break;
        case 30 : 
            ap_NS_fsm = ap_ST_st32_fsm_31;
            break;
        case 31 : 
            ap_NS_fsm = ap_ST_st33_fsm_32;
            break;
        case 32 : 
            ap_NS_fsm = ap_ST_st34_fsm_33;
            break;
        case 33 : 
            ap_NS_fsm = ap_ST_st35_fsm_34;
            break;
        case 34 : 
            ap_NS_fsm = ap_ST_st36_fsm_35;
            break;
        case 35 : 
            if (!esl_seteq<1,1,1>(nfa_forward_buckets_rsp_empty_n.read(), ap_const_logic_0)) {
                ap_NS_fsm = ap_ST_st37_fsm_36;
            } else {
                ap_NS_fsm = ap_ST_st36_fsm_35;
            }
            break;
        case 36 : 
            if (!esl_seteq<1,1,1>(nfa_forward_buckets_rsp_empty_n.read(), ap_const_logic_0)) {
                ap_NS_fsm = ap_ST_st38_fsm_37;
            } else {
                ap_NS_fsm = ap_ST_st37_fsm_36;
            }
            break;
        case 37 : 
            ap_NS_fsm = ap_ST_st25_fsm_24;
            break;
        case 38 : 
            ap_NS_fsm = ap_ST_st40_fsm_39;
            break;
        case 39 : 
            ap_NS_fsm = ap_ST_st41_fsm_40;
            break;
        case 40 : 
            ap_NS_fsm = ap_ST_st42_fsm_41;
            break;
        case 41 : 
            ap_NS_fsm = ap_ST_st43_fsm_42;
            break;
        case 42 : 
            ap_NS_fsm = ap_ST_st44_fsm_43;
            break;
        case 43 : 
            ap_NS_fsm = ap_ST_st45_fsm_44;
            break;
        case 44 : 
            ap_NS_fsm = ap_ST_st1_fsm_0;
            break;
        default : 
            ap_NS_fsm =  (sc_lv<6>) ("XXXXXX");
            break;
    }
}
}

