-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2013.4
-- Copyright (C) 2013 Xilinx Inc. All rights reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity nfa_accept_samples_generic_hw is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    nfa_initials_buckets_req_din : OUT STD_LOGIC;
    nfa_initials_buckets_req_full_n : IN STD_LOGIC;
    nfa_initials_buckets_req_write : OUT STD_LOGIC;
    nfa_initials_buckets_rsp_empty_n : IN STD_LOGIC;
    nfa_initials_buckets_rsp_read : OUT STD_LOGIC;
    nfa_initials_buckets_address : OUT STD_LOGIC_VECTOR (31 downto 0);
    nfa_initials_buckets_datain : IN STD_LOGIC_VECTOR (31 downto 0);
    nfa_initials_buckets_dataout : OUT STD_LOGIC_VECTOR (31 downto 0);
    nfa_initials_buckets_size : OUT STD_LOGIC_VECTOR (31 downto 0);
    nfa_finals_buckets_req_din : OUT STD_LOGIC;
    nfa_finals_buckets_req_full_n : IN STD_LOGIC;
    nfa_finals_buckets_req_write : OUT STD_LOGIC;
    nfa_finals_buckets_rsp_empty_n : IN STD_LOGIC;
    nfa_finals_buckets_rsp_read : OUT STD_LOGIC;
    nfa_finals_buckets_address : OUT STD_LOGIC_VECTOR (31 downto 0);
    nfa_finals_buckets_datain : IN STD_LOGIC_VECTOR (31 downto 0);
    nfa_finals_buckets_dataout : OUT STD_LOGIC_VECTOR (31 downto 0);
    nfa_finals_buckets_size : OUT STD_LOGIC_VECTOR (31 downto 0);
    nfa_forward_buckets_req_din : OUT STD_LOGIC;
    nfa_forward_buckets_req_full_n : IN STD_LOGIC;
    nfa_forward_buckets_req_write : OUT STD_LOGIC;
    nfa_forward_buckets_rsp_empty_n : IN STD_LOGIC;
    nfa_forward_buckets_rsp_read : OUT STD_LOGIC;
    nfa_forward_buckets_address : OUT STD_LOGIC_VECTOR (31 downto 0);
    nfa_forward_buckets_datain : IN STD_LOGIC_VECTOR (31 downto 0);
    nfa_forward_buckets_dataout : OUT STD_LOGIC_VECTOR (31 downto 0);
    nfa_forward_buckets_size : OUT STD_LOGIC_VECTOR (31 downto 0);
    nfa_symbols : IN STD_LOGIC_VECTOR (7 downto 0);
    sample_buffer_req_din : OUT STD_LOGIC;
    sample_buffer_req_full_n : IN STD_LOGIC;
    sample_buffer_req_write : OUT STD_LOGIC;
    sample_buffer_rsp_empty_n : IN STD_LOGIC;
    sample_buffer_rsp_read : OUT STD_LOGIC;
    sample_buffer_address : OUT STD_LOGIC_VECTOR (31 downto 0);
    sample_buffer_datain : IN STD_LOGIC_VECTOR (7 downto 0);
    sample_buffer_dataout : OUT STD_LOGIC_VECTOR (7 downto 0);
    sample_buffer_size : OUT STD_LOGIC_VECTOR (31 downto 0);
    sample_buffer_length : IN STD_LOGIC_VECTOR (31 downto 0);
    sample_length : IN STD_LOGIC_VECTOR (15 downto 0);
    indices_begin_req_din : OUT STD_LOGIC;
    indices_begin_req_full_n : IN STD_LOGIC;
    indices_begin_req_write : OUT STD_LOGIC;
    indices_begin_rsp_empty_n : IN STD_LOGIC;
    indices_begin_rsp_read : OUT STD_LOGIC;
    indices_begin_address : OUT STD_LOGIC_VECTOR (31 downto 0);
    indices_begin_datain : IN STD_LOGIC_VECTOR (31 downto 0);
    indices_begin_dataout : OUT STD_LOGIC_VECTOR (31 downto 0);
    indices_begin_size : OUT STD_LOGIC_VECTOR (31 downto 0);
    indices_samples_req_din : OUT STD_LOGIC;
    indices_samples_req_full_n : IN STD_LOGIC;
    indices_samples_req_write : OUT STD_LOGIC;
    indices_samples_rsp_empty_n : IN STD_LOGIC;
    indices_samples_rsp_read : OUT STD_LOGIC;
    indices_samples_address : OUT STD_LOGIC_VECTOR (31 downto 0);
    indices_samples_datain : IN STD_LOGIC_VECTOR (15 downto 0);
    indices_samples_dataout : OUT STD_LOGIC_VECTOR (15 downto 0);
    indices_samples_size : OUT STD_LOGIC_VECTOR (31 downto 0);
    indices_stride_req_din : OUT STD_LOGIC;
    indices_stride_req_full_n : IN STD_LOGIC;
    indices_stride_req_write : OUT STD_LOGIC;
    indices_stride_rsp_empty_n : IN STD_LOGIC;
    indices_stride_rsp_read : OUT STD_LOGIC;
    indices_stride_address : OUT STD_LOGIC_VECTOR (31 downto 0);
    indices_stride_datain : IN STD_LOGIC_VECTOR (7 downto 0);
    indices_stride_dataout : OUT STD_LOGIC_VECTOR (7 downto 0);
    indices_stride_size : OUT STD_LOGIC_VECTOR (31 downto 0);
    i_size : IN STD_LOGIC_VECTOR (15 downto 0);
    begin_index : IN STD_LOGIC_VECTOR (15 downto 0);
    begin_sample : IN STD_LOGIC_VECTOR (15 downto 0);
    end_index : IN STD_LOGIC_VECTOR (15 downto 0);
    end_sample : IN STD_LOGIC_VECTOR (15 downto 0);
    stop_on_first : IN STD_LOGIC_VECTOR (0 downto 0);
    accept : IN STD_LOGIC_VECTOR (0 downto 0);
    ap_return : OUT STD_LOGIC_VECTOR (31 downto 0) );
end;


architecture behav of nfa_accept_samples_generic_hw is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "nfa_accept_samples_generic_hw,hls_ip_2013_4,{HLS_INPUT_TYPE=c,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc6slx9ftg256-3,HLS_INPUT_CLOCK=1.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=3.000000,HLS_SYN_LAT=129180014,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=0,HLS_SYN_LUT=0}";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_st1_fsm_0 : STD_LOGIC_VECTOR (5 downto 0) := "000000";
    constant ap_ST_st2_fsm_1 : STD_LOGIC_VECTOR (5 downto 0) := "000001";
    constant ap_ST_st3_fsm_2 : STD_LOGIC_VECTOR (5 downto 0) := "000010";
    constant ap_ST_st4_fsm_3 : STD_LOGIC_VECTOR (5 downto 0) := "000011";
    constant ap_ST_st5_fsm_4 : STD_LOGIC_VECTOR (5 downto 0) := "000100";
    constant ap_ST_st6_fsm_5 : STD_LOGIC_VECTOR (5 downto 0) := "000101";
    constant ap_ST_st7_fsm_6 : STD_LOGIC_VECTOR (5 downto 0) := "000110";
    constant ap_ST_st8_fsm_7 : STD_LOGIC_VECTOR (5 downto 0) := "000111";
    constant ap_ST_st9_fsm_8 : STD_LOGIC_VECTOR (5 downto 0) := "001000";
    constant ap_ST_st10_fsm_9 : STD_LOGIC_VECTOR (5 downto 0) := "001001";
    constant ap_ST_st11_fsm_10 : STD_LOGIC_VECTOR (5 downto 0) := "001010";
    constant ap_ST_st12_fsm_11 : STD_LOGIC_VECTOR (5 downto 0) := "001011";
    constant ap_ST_st13_fsm_12 : STD_LOGIC_VECTOR (5 downto 0) := "001100";
    constant ap_ST_st14_fsm_13 : STD_LOGIC_VECTOR (5 downto 0) := "001101";
    constant ap_ST_st15_fsm_14 : STD_LOGIC_VECTOR (5 downto 0) := "001110";
    constant ap_ST_st16_fsm_15 : STD_LOGIC_VECTOR (5 downto 0) := "001111";
    constant ap_ST_st17_fsm_16 : STD_LOGIC_VECTOR (5 downto 0) := "010000";
    constant ap_ST_st18_fsm_17 : STD_LOGIC_VECTOR (5 downto 0) := "010001";
    constant ap_ST_st19_fsm_18 : STD_LOGIC_VECTOR (5 downto 0) := "010010";
    constant ap_ST_st20_fsm_19 : STD_LOGIC_VECTOR (5 downto 0) := "010011";
    constant ap_ST_st21_fsm_20 : STD_LOGIC_VECTOR (5 downto 0) := "010100";
    constant ap_ST_st22_fsm_21 : STD_LOGIC_VECTOR (5 downto 0) := "010101";
    constant ap_ST_st23_fsm_22 : STD_LOGIC_VECTOR (5 downto 0) := "010110";
    constant ap_ST_st24_fsm_23 : STD_LOGIC_VECTOR (5 downto 0) := "010111";
    constant ap_ST_st25_fsm_24 : STD_LOGIC_VECTOR (5 downto 0) := "011000";
    constant ap_ST_st26_fsm_25 : STD_LOGIC_VECTOR (5 downto 0) := "011001";
    constant ap_ST_st27_fsm_26 : STD_LOGIC_VECTOR (5 downto 0) := "011010";
    constant ap_ST_st28_fsm_27 : STD_LOGIC_VECTOR (5 downto 0) := "011011";
    constant ap_ST_st29_fsm_28 : STD_LOGIC_VECTOR (5 downto 0) := "011100";
    constant ap_ST_st30_fsm_29 : STD_LOGIC_VECTOR (5 downto 0) := "011101";
    constant ap_ST_st31_fsm_30 : STD_LOGIC_VECTOR (5 downto 0) := "011110";
    constant ap_ST_st32_fsm_31 : STD_LOGIC_VECTOR (5 downto 0) := "011111";
    constant ap_ST_st33_fsm_32 : STD_LOGIC_VECTOR (5 downto 0) := "100000";
    constant ap_ST_st34_fsm_33 : STD_LOGIC_VECTOR (5 downto 0) := "100001";
    constant ap_ST_st35_fsm_34 : STD_LOGIC_VECTOR (5 downto 0) := "100010";
    constant ap_ST_st36_fsm_35 : STD_LOGIC_VECTOR (5 downto 0) := "100011";
    constant ap_ST_st37_fsm_36 : STD_LOGIC_VECTOR (5 downto 0) := "100100";
    constant ap_ST_st38_fsm_37 : STD_LOGIC_VECTOR (5 downto 0) := "100101";
    constant ap_ST_st39_fsm_38 : STD_LOGIC_VECTOR (5 downto 0) := "100110";
    constant ap_ST_st40_fsm_39 : STD_LOGIC_VECTOR (5 downto 0) := "100111";
    constant ap_ST_st41_fsm_40 : STD_LOGIC_VECTOR (5 downto 0) := "101000";
    constant ap_ST_st42_fsm_41 : STD_LOGIC_VECTOR (5 downto 0) := "101001";
    constant ap_ST_st43_fsm_42 : STD_LOGIC_VECTOR (5 downto 0) := "101010";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";

    signal ap_CS_fsm : STD_LOGIC_VECTOR (5 downto 0) := "000000";
    signal stop_on_first_read_read_fu_104_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_i_fu_230_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_i_reg_315 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_i_10_fu_235_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_i_10_reg_320 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_i_11_fu_240_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_i_11_reg_325 : STD_LOGIC_VECTOR (0 downto 0);
    signal c_load_reg_329 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_sample_iterator_get_offset_fu_194_ap_return : STD_LOGIC_VECTOR (31 downto 0);
    signal offset_reg_335 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_nfa_accept_sample_fu_178_ap_return : STD_LOGIC_VECTOR (0 downto 0);
    signal r_reg_340 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_nfa_accept_sample_fu_178_ap_done : STD_LOGIC;
    signal or_cond_fu_247_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond_reg_345 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_251_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal c_1_reg_349 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_nfa_accept_sample_fu_178_ap_start : STD_LOGIC;
    signal grp_nfa_accept_sample_fu_178_ap_idle : STD_LOGIC;
    signal grp_nfa_accept_sample_fu_178_ap_ready : STD_LOGIC;
    signal grp_nfa_accept_sample_fu_178_nfa_initials_buckets_req_din : STD_LOGIC;
    signal grp_nfa_accept_sample_fu_178_nfa_initials_buckets_req_full_n : STD_LOGIC;
    signal grp_nfa_accept_sample_fu_178_nfa_initials_buckets_req_write : STD_LOGIC;
    signal grp_nfa_accept_sample_fu_178_nfa_initials_buckets_rsp_empty_n : STD_LOGIC;
    signal grp_nfa_accept_sample_fu_178_nfa_initials_buckets_rsp_read : STD_LOGIC;
    signal grp_nfa_accept_sample_fu_178_nfa_initials_buckets_address : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_nfa_accept_sample_fu_178_nfa_initials_buckets_datain : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_nfa_accept_sample_fu_178_nfa_initials_buckets_dataout : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_nfa_accept_sample_fu_178_nfa_initials_buckets_size : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_nfa_accept_sample_fu_178_nfa_finals_buckets_req_din : STD_LOGIC;
    signal grp_nfa_accept_sample_fu_178_nfa_finals_buckets_req_full_n : STD_LOGIC;
    signal grp_nfa_accept_sample_fu_178_nfa_finals_buckets_req_write : STD_LOGIC;
    signal grp_nfa_accept_sample_fu_178_nfa_finals_buckets_rsp_empty_n : STD_LOGIC;
    signal grp_nfa_accept_sample_fu_178_nfa_finals_buckets_rsp_read : STD_LOGIC;
    signal grp_nfa_accept_sample_fu_178_nfa_finals_buckets_address : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_nfa_accept_sample_fu_178_nfa_finals_buckets_datain : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_nfa_accept_sample_fu_178_nfa_finals_buckets_dataout : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_nfa_accept_sample_fu_178_nfa_finals_buckets_size : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_nfa_accept_sample_fu_178_nfa_forward_buckets_req_din : STD_LOGIC;
    signal grp_nfa_accept_sample_fu_178_nfa_forward_buckets_req_full_n : STD_LOGIC;
    signal grp_nfa_accept_sample_fu_178_nfa_forward_buckets_req_write : STD_LOGIC;
    signal grp_nfa_accept_sample_fu_178_nfa_forward_buckets_rsp_empty_n : STD_LOGIC;
    signal grp_nfa_accept_sample_fu_178_nfa_forward_buckets_rsp_read : STD_LOGIC;
    signal grp_nfa_accept_sample_fu_178_nfa_forward_buckets_address : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_nfa_accept_sample_fu_178_nfa_forward_buckets_datain : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_nfa_accept_sample_fu_178_nfa_forward_buckets_dataout : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_nfa_accept_sample_fu_178_nfa_forward_buckets_size : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_nfa_accept_sample_fu_178_nfa_symbols : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_nfa_accept_sample_fu_178_sample_req_din : STD_LOGIC;
    signal grp_nfa_accept_sample_fu_178_sample_req_full_n : STD_LOGIC;
    signal grp_nfa_accept_sample_fu_178_sample_req_write : STD_LOGIC;
    signal grp_nfa_accept_sample_fu_178_sample_rsp_empty_n : STD_LOGIC;
    signal grp_nfa_accept_sample_fu_178_sample_rsp_read : STD_LOGIC;
    signal grp_nfa_accept_sample_fu_178_sample_address : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_nfa_accept_sample_fu_178_sample_datain : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_nfa_accept_sample_fu_178_sample_dataout : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_nfa_accept_sample_fu_178_sample_size : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_nfa_accept_sample_fu_178_tmp_36 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_nfa_accept_sample_fu_178_length_r : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_sample_iterator_get_offset_fu_194_ap_start : STD_LOGIC;
    signal grp_sample_iterator_get_offset_fu_194_ap_done : STD_LOGIC;
    signal grp_sample_iterator_get_offset_fu_194_ap_idle : STD_LOGIC;
    signal grp_sample_iterator_get_offset_fu_194_ap_ready : STD_LOGIC;
    signal grp_sample_iterator_get_offset_fu_194_indices_stride_req_din : STD_LOGIC;
    signal grp_sample_iterator_get_offset_fu_194_indices_stride_req_full_n : STD_LOGIC;
    signal grp_sample_iterator_get_offset_fu_194_indices_stride_req_write : STD_LOGIC;
    signal grp_sample_iterator_get_offset_fu_194_indices_stride_rsp_empty_n : STD_LOGIC;
    signal grp_sample_iterator_get_offset_fu_194_indices_stride_rsp_read : STD_LOGIC;
    signal grp_sample_iterator_get_offset_fu_194_indices_stride_address : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_sample_iterator_get_offset_fu_194_indices_stride_datain : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_sample_iterator_get_offset_fu_194_indices_stride_dataout : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_sample_iterator_get_offset_fu_194_indices_stride_size : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_sample_iterator_get_offset_fu_194_indices_begin_req_din : STD_LOGIC;
    signal grp_sample_iterator_get_offset_fu_194_indices_begin_req_full_n : STD_LOGIC;
    signal grp_sample_iterator_get_offset_fu_194_indices_begin_req_write : STD_LOGIC;
    signal grp_sample_iterator_get_offset_fu_194_indices_begin_rsp_empty_n : STD_LOGIC;
    signal grp_sample_iterator_get_offset_fu_194_indices_begin_rsp_read : STD_LOGIC;
    signal grp_sample_iterator_get_offset_fu_194_indices_begin_address : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_sample_iterator_get_offset_fu_194_indices_begin_datain : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_sample_iterator_get_offset_fu_194_indices_begin_dataout : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_sample_iterator_get_offset_fu_194_indices_begin_size : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_sample_iterator_get_offset_fu_194_ap_ce : STD_LOGIC;
    signal grp_sample_iterator_get_offset_fu_194_i_index : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_sample_iterator_get_offset_fu_194_i_sample : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_sample_iterator_get_offset_fu_194_indices_samples_req_din : STD_LOGIC;
    signal grp_sample_iterator_get_offset_fu_194_indices_samples_req_full_n : STD_LOGIC;
    signal grp_sample_iterator_get_offset_fu_194_indices_samples_req_write : STD_LOGIC;
    signal grp_sample_iterator_get_offset_fu_194_indices_samples_rsp_empty_n : STD_LOGIC;
    signal grp_sample_iterator_get_offset_fu_194_indices_samples_rsp_read : STD_LOGIC;
    signal grp_sample_iterator_get_offset_fu_194_indices_samples_address : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_sample_iterator_get_offset_fu_194_indices_samples_datain : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_sample_iterator_get_offset_fu_194_indices_samples_dataout : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_sample_iterator_get_offset_fu_194_indices_samples_size : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_sample_iterator_get_offset_fu_194_sample_buffer_size : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_sample_iterator_get_offset_fu_194_sample_length : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_sample_iterator_next_fu_211_ap_start : STD_LOGIC;
    signal grp_sample_iterator_next_fu_211_ap_done : STD_LOGIC;
    signal grp_sample_iterator_next_fu_211_ap_idle : STD_LOGIC;
    signal grp_sample_iterator_next_fu_211_ap_ready : STD_LOGIC;
    signal grp_sample_iterator_next_fu_211_indices_samples_req_din : STD_LOGIC;
    signal grp_sample_iterator_next_fu_211_indices_samples_req_full_n : STD_LOGIC;
    signal grp_sample_iterator_next_fu_211_indices_samples_req_write : STD_LOGIC;
    signal grp_sample_iterator_next_fu_211_indices_samples_rsp_empty_n : STD_LOGIC;
    signal grp_sample_iterator_next_fu_211_indices_samples_rsp_read : STD_LOGIC;
    signal grp_sample_iterator_next_fu_211_indices_samples_address : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_sample_iterator_next_fu_211_indices_samples_datain : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_sample_iterator_next_fu_211_indices_samples_dataout : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_sample_iterator_next_fu_211_indices_samples_size : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_sample_iterator_next_fu_211_ap_ce : STD_LOGIC;
    signal grp_sample_iterator_next_fu_211_indices_begin_req_din : STD_LOGIC;
    signal grp_sample_iterator_next_fu_211_indices_begin_req_full_n : STD_LOGIC;
    signal grp_sample_iterator_next_fu_211_indices_begin_req_write : STD_LOGIC;
    signal grp_sample_iterator_next_fu_211_indices_begin_rsp_empty_n : STD_LOGIC;
    signal grp_sample_iterator_next_fu_211_indices_begin_rsp_read : STD_LOGIC;
    signal grp_sample_iterator_next_fu_211_indices_begin_address : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_sample_iterator_next_fu_211_indices_begin_datain : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_sample_iterator_next_fu_211_indices_begin_dataout : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_sample_iterator_next_fu_211_indices_begin_size : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_sample_iterator_next_fu_211_indices_stride_req_din : STD_LOGIC;
    signal grp_sample_iterator_next_fu_211_indices_stride_req_full_n : STD_LOGIC;
    signal grp_sample_iterator_next_fu_211_indices_stride_req_write : STD_LOGIC;
    signal grp_sample_iterator_next_fu_211_indices_stride_rsp_empty_n : STD_LOGIC;
    signal grp_sample_iterator_next_fu_211_indices_stride_rsp_read : STD_LOGIC;
    signal grp_sample_iterator_next_fu_211_indices_stride_address : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_sample_iterator_next_fu_211_indices_stride_datain : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_sample_iterator_next_fu_211_indices_stride_dataout : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_sample_iterator_next_fu_211_indices_stride_size : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_sample_iterator_next_fu_211_i_index : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_sample_iterator_next_fu_211_i_sample : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_sample_iterator_next_fu_211_ap_return_0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_sample_iterator_next_fu_211_ap_return_1 : STD_LOGIC_VECTOR (15 downto 0);
    signal i_index_reg_146 : STD_LOGIC_VECTOR (15 downto 0);
    signal i_sample_reg_156 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_0_reg_166 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_nfa_accept_sample_fu_178_ap_start_ap_start_reg : STD_LOGIC := '0';
    signal grp_sample_iterator_get_offset_fu_194_ap_start_ap_start_reg : STD_LOGIC := '0';
    signal ap_NS_fsm : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_sample_iterator_next_fu_211_ap_start_ap_start_reg : STD_LOGIC := '0';
    signal c_fu_94 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_251_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_251_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_251_ce : STD_LOGIC;

    component nfa_accept_sample IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        nfa_initials_buckets_req_din : OUT STD_LOGIC;
        nfa_initials_buckets_req_full_n : IN STD_LOGIC;
        nfa_initials_buckets_req_write : OUT STD_LOGIC;
        nfa_initials_buckets_rsp_empty_n : IN STD_LOGIC;
        nfa_initials_buckets_rsp_read : OUT STD_LOGIC;
        nfa_initials_buckets_address : OUT STD_LOGIC_VECTOR (31 downto 0);
        nfa_initials_buckets_datain : IN STD_LOGIC_VECTOR (31 downto 0);
        nfa_initials_buckets_dataout : OUT STD_LOGIC_VECTOR (31 downto 0);
        nfa_initials_buckets_size : OUT STD_LOGIC_VECTOR (31 downto 0);
        nfa_finals_buckets_req_din : OUT STD_LOGIC;
        nfa_finals_buckets_req_full_n : IN STD_LOGIC;
        nfa_finals_buckets_req_write : OUT STD_LOGIC;
        nfa_finals_buckets_rsp_empty_n : IN STD_LOGIC;
        nfa_finals_buckets_rsp_read : OUT STD_LOGIC;
        nfa_finals_buckets_address : OUT STD_LOGIC_VECTOR (31 downto 0);
        nfa_finals_buckets_datain : IN STD_LOGIC_VECTOR (31 downto 0);
        nfa_finals_buckets_dataout : OUT STD_LOGIC_VECTOR (31 downto 0);
        nfa_finals_buckets_size : OUT STD_LOGIC_VECTOR (31 downto 0);
        nfa_forward_buckets_req_din : OUT STD_LOGIC;
        nfa_forward_buckets_req_full_n : IN STD_LOGIC;
        nfa_forward_buckets_req_write : OUT STD_LOGIC;
        nfa_forward_buckets_rsp_empty_n : IN STD_LOGIC;
        nfa_forward_buckets_rsp_read : OUT STD_LOGIC;
        nfa_forward_buckets_address : OUT STD_LOGIC_VECTOR (31 downto 0);
        nfa_forward_buckets_datain : IN STD_LOGIC_VECTOR (31 downto 0);
        nfa_forward_buckets_dataout : OUT STD_LOGIC_VECTOR (31 downto 0);
        nfa_forward_buckets_size : OUT STD_LOGIC_VECTOR (31 downto 0);
        nfa_symbols : IN STD_LOGIC_VECTOR (7 downto 0);
        sample_req_din : OUT STD_LOGIC;
        sample_req_full_n : IN STD_LOGIC;
        sample_req_write : OUT STD_LOGIC;
        sample_rsp_empty_n : IN STD_LOGIC;
        sample_rsp_read : OUT STD_LOGIC;
        sample_address : OUT STD_LOGIC_VECTOR (31 downto 0);
        sample_datain : IN STD_LOGIC_VECTOR (7 downto 0);
        sample_dataout : OUT STD_LOGIC_VECTOR (7 downto 0);
        sample_size : OUT STD_LOGIC_VECTOR (31 downto 0);
        tmp_36 : IN STD_LOGIC_VECTOR (31 downto 0);
        length_r : IN STD_LOGIC_VECTOR (15 downto 0);
        ap_return : OUT STD_LOGIC_VECTOR (0 downto 0) );
    end component;


    component sample_iterator_get_offset IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        indices_stride_req_din : OUT STD_LOGIC;
        indices_stride_req_full_n : IN STD_LOGIC;
        indices_stride_req_write : OUT STD_LOGIC;
        indices_stride_rsp_empty_n : IN STD_LOGIC;
        indices_stride_rsp_read : OUT STD_LOGIC;
        indices_stride_address : OUT STD_LOGIC_VECTOR (31 downto 0);
        indices_stride_datain : IN STD_LOGIC_VECTOR (7 downto 0);
        indices_stride_dataout : OUT STD_LOGIC_VECTOR (7 downto 0);
        indices_stride_size : OUT STD_LOGIC_VECTOR (31 downto 0);
        indices_begin_req_din : OUT STD_LOGIC;
        indices_begin_req_full_n : IN STD_LOGIC;
        indices_begin_req_write : OUT STD_LOGIC;
        indices_begin_rsp_empty_n : IN STD_LOGIC;
        indices_begin_rsp_read : OUT STD_LOGIC;
        indices_begin_address : OUT STD_LOGIC_VECTOR (31 downto 0);
        indices_begin_datain : IN STD_LOGIC_VECTOR (31 downto 0);
        indices_begin_dataout : OUT STD_LOGIC_VECTOR (31 downto 0);
        indices_begin_size : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_ce : IN STD_LOGIC;
        i_index : IN STD_LOGIC_VECTOR (15 downto 0);
        i_sample : IN STD_LOGIC_VECTOR (15 downto 0);
        indices_samples_req_din : OUT STD_LOGIC;
        indices_samples_req_full_n : IN STD_LOGIC;
        indices_samples_req_write : OUT STD_LOGIC;
        indices_samples_rsp_empty_n : IN STD_LOGIC;
        indices_samples_rsp_read : OUT STD_LOGIC;
        indices_samples_address : OUT STD_LOGIC_VECTOR (31 downto 0);
        indices_samples_datain : IN STD_LOGIC_VECTOR (15 downto 0);
        indices_samples_dataout : OUT STD_LOGIC_VECTOR (15 downto 0);
        indices_samples_size : OUT STD_LOGIC_VECTOR (31 downto 0);
        sample_buffer_size : IN STD_LOGIC_VECTOR (31 downto 0);
        sample_length : IN STD_LOGIC_VECTOR (15 downto 0);
        ap_return : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component sample_iterator_next IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        indices_samples_req_din : OUT STD_LOGIC;
        indices_samples_req_full_n : IN STD_LOGIC;
        indices_samples_req_write : OUT STD_LOGIC;
        indices_samples_rsp_empty_n : IN STD_LOGIC;
        indices_samples_rsp_read : OUT STD_LOGIC;
        indices_samples_address : OUT STD_LOGIC_VECTOR (31 downto 0);
        indices_samples_datain : IN STD_LOGIC_VECTOR (15 downto 0);
        indices_samples_dataout : OUT STD_LOGIC_VECTOR (15 downto 0);
        indices_samples_size : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_ce : IN STD_LOGIC;
        indices_begin_req_din : OUT STD_LOGIC;
        indices_begin_req_full_n : IN STD_LOGIC;
        indices_begin_req_write : OUT STD_LOGIC;
        indices_begin_rsp_empty_n : IN STD_LOGIC;
        indices_begin_rsp_read : OUT STD_LOGIC;
        indices_begin_address : OUT STD_LOGIC_VECTOR (31 downto 0);
        indices_begin_datain : IN STD_LOGIC_VECTOR (31 downto 0);
        indices_begin_dataout : OUT STD_LOGIC_VECTOR (31 downto 0);
        indices_begin_size : OUT STD_LOGIC_VECTOR (31 downto 0);
        indices_stride_req_din : OUT STD_LOGIC;
        indices_stride_req_full_n : IN STD_LOGIC;
        indices_stride_req_write : OUT STD_LOGIC;
        indices_stride_rsp_empty_n : IN STD_LOGIC;
        indices_stride_rsp_read : OUT STD_LOGIC;
        indices_stride_address : OUT STD_LOGIC_VECTOR (31 downto 0);
        indices_stride_datain : IN STD_LOGIC_VECTOR (7 downto 0);
        indices_stride_dataout : OUT STD_LOGIC_VECTOR (7 downto 0);
        indices_stride_size : OUT STD_LOGIC_VECTOR (31 downto 0);
        i_index : IN STD_LOGIC_VECTOR (15 downto 0);
        i_sample : IN STD_LOGIC_VECTOR (15 downto 0);
        ap_return_0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_1 : OUT STD_LOGIC_VECTOR (15 downto 0) );
    end component;


    component nfa_accept_samples_generic_hw_add_32ns_32ns_32_8 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;



begin
    grp_nfa_accept_sample_fu_178 : component nfa_accept_sample
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_nfa_accept_sample_fu_178_ap_start,
        ap_done => grp_nfa_accept_sample_fu_178_ap_done,
        ap_idle => grp_nfa_accept_sample_fu_178_ap_idle,
        ap_ready => grp_nfa_accept_sample_fu_178_ap_ready,
        nfa_initials_buckets_req_din => grp_nfa_accept_sample_fu_178_nfa_initials_buckets_req_din,
        nfa_initials_buckets_req_full_n => grp_nfa_accept_sample_fu_178_nfa_initials_buckets_req_full_n,
        nfa_initials_buckets_req_write => grp_nfa_accept_sample_fu_178_nfa_initials_buckets_req_write,
        nfa_initials_buckets_rsp_empty_n => grp_nfa_accept_sample_fu_178_nfa_initials_buckets_rsp_empty_n,
        nfa_initials_buckets_rsp_read => grp_nfa_accept_sample_fu_178_nfa_initials_buckets_rsp_read,
        nfa_initials_buckets_address => grp_nfa_accept_sample_fu_178_nfa_initials_buckets_address,
        nfa_initials_buckets_datain => grp_nfa_accept_sample_fu_178_nfa_initials_buckets_datain,
        nfa_initials_buckets_dataout => grp_nfa_accept_sample_fu_178_nfa_initials_buckets_dataout,
        nfa_initials_buckets_size => grp_nfa_accept_sample_fu_178_nfa_initials_buckets_size,
        nfa_finals_buckets_req_din => grp_nfa_accept_sample_fu_178_nfa_finals_buckets_req_din,
        nfa_finals_buckets_req_full_n => grp_nfa_accept_sample_fu_178_nfa_finals_buckets_req_full_n,
        nfa_finals_buckets_req_write => grp_nfa_accept_sample_fu_178_nfa_finals_buckets_req_write,
        nfa_finals_buckets_rsp_empty_n => grp_nfa_accept_sample_fu_178_nfa_finals_buckets_rsp_empty_n,
        nfa_finals_buckets_rsp_read => grp_nfa_accept_sample_fu_178_nfa_finals_buckets_rsp_read,
        nfa_finals_buckets_address => grp_nfa_accept_sample_fu_178_nfa_finals_buckets_address,
        nfa_finals_buckets_datain => grp_nfa_accept_sample_fu_178_nfa_finals_buckets_datain,
        nfa_finals_buckets_dataout => grp_nfa_accept_sample_fu_178_nfa_finals_buckets_dataout,
        nfa_finals_buckets_size => grp_nfa_accept_sample_fu_178_nfa_finals_buckets_size,
        nfa_forward_buckets_req_din => grp_nfa_accept_sample_fu_178_nfa_forward_buckets_req_din,
        nfa_forward_buckets_req_full_n => grp_nfa_accept_sample_fu_178_nfa_forward_buckets_req_full_n,
        nfa_forward_buckets_req_write => grp_nfa_accept_sample_fu_178_nfa_forward_buckets_req_write,
        nfa_forward_buckets_rsp_empty_n => grp_nfa_accept_sample_fu_178_nfa_forward_buckets_rsp_empty_n,
        nfa_forward_buckets_rsp_read => grp_nfa_accept_sample_fu_178_nfa_forward_buckets_rsp_read,
        nfa_forward_buckets_address => grp_nfa_accept_sample_fu_178_nfa_forward_buckets_address,
        nfa_forward_buckets_datain => grp_nfa_accept_sample_fu_178_nfa_forward_buckets_datain,
        nfa_forward_buckets_dataout => grp_nfa_accept_sample_fu_178_nfa_forward_buckets_dataout,
        nfa_forward_buckets_size => grp_nfa_accept_sample_fu_178_nfa_forward_buckets_size,
        nfa_symbols => grp_nfa_accept_sample_fu_178_nfa_symbols,
        sample_req_din => grp_nfa_accept_sample_fu_178_sample_req_din,
        sample_req_full_n => grp_nfa_accept_sample_fu_178_sample_req_full_n,
        sample_req_write => grp_nfa_accept_sample_fu_178_sample_req_write,
        sample_rsp_empty_n => grp_nfa_accept_sample_fu_178_sample_rsp_empty_n,
        sample_rsp_read => grp_nfa_accept_sample_fu_178_sample_rsp_read,
        sample_address => grp_nfa_accept_sample_fu_178_sample_address,
        sample_datain => grp_nfa_accept_sample_fu_178_sample_datain,
        sample_dataout => grp_nfa_accept_sample_fu_178_sample_dataout,
        sample_size => grp_nfa_accept_sample_fu_178_sample_size,
        tmp_36 => grp_nfa_accept_sample_fu_178_tmp_36,
        length_r => grp_nfa_accept_sample_fu_178_length_r,
        ap_return => grp_nfa_accept_sample_fu_178_ap_return);

    grp_sample_iterator_get_offset_fu_194 : component sample_iterator_get_offset
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_sample_iterator_get_offset_fu_194_ap_start,
        ap_done => grp_sample_iterator_get_offset_fu_194_ap_done,
        ap_idle => grp_sample_iterator_get_offset_fu_194_ap_idle,
        ap_ready => grp_sample_iterator_get_offset_fu_194_ap_ready,
        indices_stride_req_din => grp_sample_iterator_get_offset_fu_194_indices_stride_req_din,
        indices_stride_req_full_n => grp_sample_iterator_get_offset_fu_194_indices_stride_req_full_n,
        indices_stride_req_write => grp_sample_iterator_get_offset_fu_194_indices_stride_req_write,
        indices_stride_rsp_empty_n => grp_sample_iterator_get_offset_fu_194_indices_stride_rsp_empty_n,
        indices_stride_rsp_read => grp_sample_iterator_get_offset_fu_194_indices_stride_rsp_read,
        indices_stride_address => grp_sample_iterator_get_offset_fu_194_indices_stride_address,
        indices_stride_datain => grp_sample_iterator_get_offset_fu_194_indices_stride_datain,
        indices_stride_dataout => grp_sample_iterator_get_offset_fu_194_indices_stride_dataout,
        indices_stride_size => grp_sample_iterator_get_offset_fu_194_indices_stride_size,
        indices_begin_req_din => grp_sample_iterator_get_offset_fu_194_indices_begin_req_din,
        indices_begin_req_full_n => grp_sample_iterator_get_offset_fu_194_indices_begin_req_full_n,
        indices_begin_req_write => grp_sample_iterator_get_offset_fu_194_indices_begin_req_write,
        indices_begin_rsp_empty_n => grp_sample_iterator_get_offset_fu_194_indices_begin_rsp_empty_n,
        indices_begin_rsp_read => grp_sample_iterator_get_offset_fu_194_indices_begin_rsp_read,
        indices_begin_address => grp_sample_iterator_get_offset_fu_194_indices_begin_address,
        indices_begin_datain => grp_sample_iterator_get_offset_fu_194_indices_begin_datain,
        indices_begin_dataout => grp_sample_iterator_get_offset_fu_194_indices_begin_dataout,
        indices_begin_size => grp_sample_iterator_get_offset_fu_194_indices_begin_size,
        ap_ce => grp_sample_iterator_get_offset_fu_194_ap_ce,
        i_index => grp_sample_iterator_get_offset_fu_194_i_index,
        i_sample => grp_sample_iterator_get_offset_fu_194_i_sample,
        indices_samples_req_din => grp_sample_iterator_get_offset_fu_194_indices_samples_req_din,
        indices_samples_req_full_n => grp_sample_iterator_get_offset_fu_194_indices_samples_req_full_n,
        indices_samples_req_write => grp_sample_iterator_get_offset_fu_194_indices_samples_req_write,
        indices_samples_rsp_empty_n => grp_sample_iterator_get_offset_fu_194_indices_samples_rsp_empty_n,
        indices_samples_rsp_read => grp_sample_iterator_get_offset_fu_194_indices_samples_rsp_read,
        indices_samples_address => grp_sample_iterator_get_offset_fu_194_indices_samples_address,
        indices_samples_datain => grp_sample_iterator_get_offset_fu_194_indices_samples_datain,
        indices_samples_dataout => grp_sample_iterator_get_offset_fu_194_indices_samples_dataout,
        indices_samples_size => grp_sample_iterator_get_offset_fu_194_indices_samples_size,
        sample_buffer_size => grp_sample_iterator_get_offset_fu_194_sample_buffer_size,
        sample_length => grp_sample_iterator_get_offset_fu_194_sample_length,
        ap_return => grp_sample_iterator_get_offset_fu_194_ap_return);

    grp_sample_iterator_next_fu_211 : component sample_iterator_next
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_sample_iterator_next_fu_211_ap_start,
        ap_done => grp_sample_iterator_next_fu_211_ap_done,
        ap_idle => grp_sample_iterator_next_fu_211_ap_idle,
        ap_ready => grp_sample_iterator_next_fu_211_ap_ready,
        indices_samples_req_din => grp_sample_iterator_next_fu_211_indices_samples_req_din,
        indices_samples_req_full_n => grp_sample_iterator_next_fu_211_indices_samples_req_full_n,
        indices_samples_req_write => grp_sample_iterator_next_fu_211_indices_samples_req_write,
        indices_samples_rsp_empty_n => grp_sample_iterator_next_fu_211_indices_samples_rsp_empty_n,
        indices_samples_rsp_read => grp_sample_iterator_next_fu_211_indices_samples_rsp_read,
        indices_samples_address => grp_sample_iterator_next_fu_211_indices_samples_address,
        indices_samples_datain => grp_sample_iterator_next_fu_211_indices_samples_datain,
        indices_samples_dataout => grp_sample_iterator_next_fu_211_indices_samples_dataout,
        indices_samples_size => grp_sample_iterator_next_fu_211_indices_samples_size,
        ap_ce => grp_sample_iterator_next_fu_211_ap_ce,
        indices_begin_req_din => grp_sample_iterator_next_fu_211_indices_begin_req_din,
        indices_begin_req_full_n => grp_sample_iterator_next_fu_211_indices_begin_req_full_n,
        indices_begin_req_write => grp_sample_iterator_next_fu_211_indices_begin_req_write,
        indices_begin_rsp_empty_n => grp_sample_iterator_next_fu_211_indices_begin_rsp_empty_n,
        indices_begin_rsp_read => grp_sample_iterator_next_fu_211_indices_begin_rsp_read,
        indices_begin_address => grp_sample_iterator_next_fu_211_indices_begin_address,
        indices_begin_datain => grp_sample_iterator_next_fu_211_indices_begin_datain,
        indices_begin_dataout => grp_sample_iterator_next_fu_211_indices_begin_dataout,
        indices_begin_size => grp_sample_iterator_next_fu_211_indices_begin_size,
        indices_stride_req_din => grp_sample_iterator_next_fu_211_indices_stride_req_din,
        indices_stride_req_full_n => grp_sample_iterator_next_fu_211_indices_stride_req_full_n,
        indices_stride_req_write => grp_sample_iterator_next_fu_211_indices_stride_req_write,
        indices_stride_rsp_empty_n => grp_sample_iterator_next_fu_211_indices_stride_rsp_empty_n,
        indices_stride_rsp_read => grp_sample_iterator_next_fu_211_indices_stride_rsp_read,
        indices_stride_address => grp_sample_iterator_next_fu_211_indices_stride_address,
        indices_stride_datain => grp_sample_iterator_next_fu_211_indices_stride_datain,
        indices_stride_dataout => grp_sample_iterator_next_fu_211_indices_stride_dataout,
        indices_stride_size => grp_sample_iterator_next_fu_211_indices_stride_size,
        i_index => grp_sample_iterator_next_fu_211_i_index,
        i_sample => grp_sample_iterator_next_fu_211_i_sample,
        ap_return_0 => grp_sample_iterator_next_fu_211_ap_return_0,
        ap_return_1 => grp_sample_iterator_next_fu_211_ap_return_1);

    nfa_accept_samples_generic_hw_add_32ns_32ns_32_8_U38 : component nfa_accept_samples_generic_hw_add_32ns_32ns_32_8
    generic map (
        ID => 38,
        NUM_STAGE => 8,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_251_p0,
        din1 => grp_fu_251_p1,
        ce => grp_fu_251_ce,
        dout => grp_fu_251_p2);





    -- the current state (ap_CS_fsm) of the state machine. --
    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_st1_fsm_0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    -- grp_nfa_accept_sample_fu_178_ap_start_ap_start_reg assign process. --
    grp_nfa_accept_sample_fu_178_ap_start_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_nfa_accept_sample_fu_178_ap_start_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_ST_st21_fsm_20 = ap_CS_fsm)) then 
                    grp_nfa_accept_sample_fu_178_ap_start_ap_start_reg <= ap_const_logic_1;
                elsif ((ap_const_logic_1 = grp_nfa_accept_sample_fu_178_ap_ready)) then 
                    grp_nfa_accept_sample_fu_178_ap_start_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    -- grp_sample_iterator_get_offset_fu_194_ap_start_ap_start_reg assign process. --
    grp_sample_iterator_get_offset_fu_194_ap_start_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_sample_iterator_get_offset_fu_194_ap_start_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_ST_st3_fsm_2 = ap_CS_fsm) and (ap_ST_st4_fsm_3 = ap_NS_fsm) and (tmp_i_11_fu_240_p2 = ap_const_lv1_0))) then 
                    grp_sample_iterator_get_offset_fu_194_ap_start_ap_start_reg <= ap_const_logic_1;
                elsif ((ap_const_logic_1 = grp_sample_iterator_get_offset_fu_194_ap_ready)) then 
                    grp_sample_iterator_get_offset_fu_194_ap_start_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    -- grp_sample_iterator_next_fu_211_ap_start_ap_start_reg assign process. --
    grp_sample_iterator_next_fu_211_ap_start_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_sample_iterator_next_fu_211_ap_start_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_ST_st31_fsm_30 = ap_NS_fsm) and ((ap_ST_st23_fsm_22 = ap_CS_fsm) or (ap_ST_st30_fsm_29 = ap_CS_fsm)))) then 
                    grp_sample_iterator_next_fu_211_ap_start_ap_start_reg <= ap_const_logic_1;
                elsif ((ap_const_logic_1 = grp_sample_iterator_next_fu_211_ap_ready)) then 
                    grp_sample_iterator_next_fu_211_ap_start_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    -- c_fu_94 assign process. --
    c_fu_94_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_ST_st31_fsm_30 = ap_CS_fsm) and (or_cond_reg_345 = ap_const_lv1_0))) then 
                c_fu_94 <= c_1_reg_349;
            elsif (((ap_ST_st1_fsm_0 = ap_CS_fsm) and not((ap_start = ap_const_logic_0)))) then 
                c_fu_94 <= ap_const_lv32_0;
            end if; 
        end if;
    end process;

    -- i_index_reg_146 assign process. --
    i_index_reg_146_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_ST_st42_fsm_41 = ap_CS_fsm)) then 
                i_index_reg_146 <= grp_sample_iterator_next_fu_211_ap_return_0;
            elsif (((ap_ST_st1_fsm_0 = ap_CS_fsm) and not((ap_start = ap_const_logic_0)))) then 
                i_index_reg_146 <= begin_index;
            end if; 
        end if;
    end process;

    -- i_sample_reg_156 assign process. --
    i_sample_reg_156_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_ST_st42_fsm_41 = ap_CS_fsm)) then 
                i_sample_reg_156 <= grp_sample_iterator_next_fu_211_ap_return_1;
            elsif (((ap_ST_st1_fsm_0 = ap_CS_fsm) and not((ap_start = ap_const_logic_0)))) then 
                i_sample_reg_156 <= begin_sample;
            end if; 
        end if;
    end process;

    -- p_0_reg_166 assign process. --
    p_0_reg_166_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_ST_st23_fsm_22 = ap_CS_fsm) and not((stop_on_first_read_read_fu_104_p2 = ap_const_lv1_0)) and (or_cond_fu_247_p2 = ap_const_lv1_0))) then 
                p_0_reg_166 <= ap_const_lv32_1;
            elsif (((ap_ST_st4_fsm_3 = ap_CS_fsm) and not((tmp_i_11_reg_325 = ap_const_lv1_0)))) then 
                p_0_reg_166 <= c_fu_94;
            end if; 
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_ST_st30_fsm_29 = ap_CS_fsm)) then
                c_1_reg_349 <= grp_fu_251_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_ST_st4_fsm_3 = ap_CS_fsm)) then
                c_load_reg_329 <= c_fu_94;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_ST_st21_fsm_20 = ap_CS_fsm)) then
                offset_reg_335 <= grp_sample_iterator_get_offset_fu_194_ap_return;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_ST_st23_fsm_22 = ap_CS_fsm)) then
                or_cond_reg_345 <= or_cond_fu_247_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_ST_st22_fsm_21 = ap_CS_fsm) and not((ap_const_logic_0 = grp_nfa_accept_sample_fu_178_ap_done)))) then
                r_reg_340 <= grp_nfa_accept_sample_fu_178_ap_return;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_ST_st2_fsm_1 = ap_CS_fsm)) then
                tmp_i_10_reg_320 <= tmp_i_10_fu_235_p2;
                tmp_i_reg_315 <= tmp_i_fu_230_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_ST_st3_fsm_2 = ap_CS_fsm)) then
                tmp_i_11_reg_325 <= tmp_i_11_fu_240_p2;
            end if;
        end if;
    end process;

    -- the next state (ap_NS_fsm) of the state machine. --
    ap_NS_fsm_assign_proc : process (ap_start , ap_CS_fsm , stop_on_first_read_read_fu_104_p2 , tmp_i_11_reg_325 , grp_nfa_accept_sample_fu_178_ap_done , or_cond_fu_247_p2)
    begin
        case ap_CS_fsm is
            when ap_ST_st1_fsm_0 => 
                if (not((ap_start = ap_const_logic_0))) then
                    ap_NS_fsm <= ap_ST_st2_fsm_1;
                else
                    ap_NS_fsm <= ap_ST_st1_fsm_0;
                end if;
            when ap_ST_st2_fsm_1 => 
                ap_NS_fsm <= ap_ST_st3_fsm_2;
            when ap_ST_st3_fsm_2 => 
                ap_NS_fsm <= ap_ST_st4_fsm_3;
            when ap_ST_st4_fsm_3 => 
                if (not((tmp_i_11_reg_325 = ap_const_lv1_0))) then
                    ap_NS_fsm <= ap_ST_st43_fsm_42;
                else
                    ap_NS_fsm <= ap_ST_st5_fsm_4;
                end if;
            when ap_ST_st5_fsm_4 => 
                ap_NS_fsm <= ap_ST_st6_fsm_5;
            when ap_ST_st6_fsm_5 => 
                ap_NS_fsm <= ap_ST_st7_fsm_6;
            when ap_ST_st7_fsm_6 => 
                ap_NS_fsm <= ap_ST_st8_fsm_7;
            when ap_ST_st8_fsm_7 => 
                ap_NS_fsm <= ap_ST_st9_fsm_8;
            when ap_ST_st9_fsm_8 => 
                ap_NS_fsm <= ap_ST_st10_fsm_9;
            when ap_ST_st10_fsm_9 => 
                ap_NS_fsm <= ap_ST_st11_fsm_10;
            when ap_ST_st11_fsm_10 => 
                ap_NS_fsm <= ap_ST_st12_fsm_11;
            when ap_ST_st12_fsm_11 => 
                ap_NS_fsm <= ap_ST_st13_fsm_12;
            when ap_ST_st13_fsm_12 => 
                ap_NS_fsm <= ap_ST_st14_fsm_13;
            when ap_ST_st14_fsm_13 => 
                ap_NS_fsm <= ap_ST_st15_fsm_14;
            when ap_ST_st15_fsm_14 => 
                ap_NS_fsm <= ap_ST_st16_fsm_15;
            when ap_ST_st16_fsm_15 => 
                ap_NS_fsm <= ap_ST_st17_fsm_16;
            when ap_ST_st17_fsm_16 => 
                ap_NS_fsm <= ap_ST_st18_fsm_17;
            when ap_ST_st18_fsm_17 => 
                ap_NS_fsm <= ap_ST_st19_fsm_18;
            when ap_ST_st19_fsm_18 => 
                ap_NS_fsm <= ap_ST_st20_fsm_19;
            when ap_ST_st20_fsm_19 => 
                ap_NS_fsm <= ap_ST_st21_fsm_20;
            when ap_ST_st21_fsm_20 => 
                ap_NS_fsm <= ap_ST_st22_fsm_21;
            when ap_ST_st22_fsm_21 => 
                if (not((ap_const_logic_0 = grp_nfa_accept_sample_fu_178_ap_done))) then
                    ap_NS_fsm <= ap_ST_st23_fsm_22;
                else
                    ap_NS_fsm <= ap_ST_st22_fsm_21;
                end if;
            when ap_ST_st23_fsm_22 => 
                if ((not((stop_on_first_read_read_fu_104_p2 = ap_const_lv1_0)) and (or_cond_fu_247_p2 = ap_const_lv1_0))) then
                    ap_NS_fsm <= ap_ST_st43_fsm_42;
                elsif (((stop_on_first_read_read_fu_104_p2 = ap_const_lv1_0) and (or_cond_fu_247_p2 = ap_const_lv1_0))) then
                    ap_NS_fsm <= ap_ST_st24_fsm_23;
                else
                    ap_NS_fsm <= ap_ST_st31_fsm_30;
                end if;
            when ap_ST_st24_fsm_23 => 
                ap_NS_fsm <= ap_ST_st25_fsm_24;
            when ap_ST_st25_fsm_24 => 
                ap_NS_fsm <= ap_ST_st26_fsm_25;
            when ap_ST_st26_fsm_25 => 
                ap_NS_fsm <= ap_ST_st27_fsm_26;
            when ap_ST_st27_fsm_26 => 
                ap_NS_fsm <= ap_ST_st28_fsm_27;
            when ap_ST_st28_fsm_27 => 
                ap_NS_fsm <= ap_ST_st29_fsm_28;
            when ap_ST_st29_fsm_28 => 
                ap_NS_fsm <= ap_ST_st30_fsm_29;
            when ap_ST_st30_fsm_29 => 
                ap_NS_fsm <= ap_ST_st31_fsm_30;
            when ap_ST_st31_fsm_30 => 
                ap_NS_fsm <= ap_ST_st32_fsm_31;
            when ap_ST_st32_fsm_31 => 
                ap_NS_fsm <= ap_ST_st33_fsm_32;
            when ap_ST_st33_fsm_32 => 
                ap_NS_fsm <= ap_ST_st34_fsm_33;
            when ap_ST_st34_fsm_33 => 
                ap_NS_fsm <= ap_ST_st35_fsm_34;
            when ap_ST_st35_fsm_34 => 
                ap_NS_fsm <= ap_ST_st36_fsm_35;
            when ap_ST_st36_fsm_35 => 
                ap_NS_fsm <= ap_ST_st37_fsm_36;
            when ap_ST_st37_fsm_36 => 
                ap_NS_fsm <= ap_ST_st38_fsm_37;
            when ap_ST_st38_fsm_37 => 
                ap_NS_fsm <= ap_ST_st39_fsm_38;
            when ap_ST_st39_fsm_38 => 
                ap_NS_fsm <= ap_ST_st40_fsm_39;
            when ap_ST_st40_fsm_39 => 
                ap_NS_fsm <= ap_ST_st41_fsm_40;
            when ap_ST_st41_fsm_40 => 
                ap_NS_fsm <= ap_ST_st42_fsm_41;
            when ap_ST_st42_fsm_41 => 
                ap_NS_fsm <= ap_ST_st2_fsm_1;
            when ap_ST_st43_fsm_42 => 
                ap_NS_fsm <= ap_ST_st1_fsm_0;
            when others =>  
                ap_NS_fsm <= "XXXXXX";
        end case;
    end process;

    -- ap_done assign process. --
    ap_done_assign_proc : process(ap_CS_fsm)
    begin
        if ((ap_ST_st43_fsm_42 = ap_CS_fsm)) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_idle assign process. --
    ap_idle_assign_proc : process(ap_start, ap_CS_fsm)
    begin
        if ((not((ap_const_logic_1 = ap_start)) and (ap_ST_st1_fsm_0 = ap_CS_fsm))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_ready assign process. --
    ap_ready_assign_proc : process(ap_CS_fsm)
    begin
        if ((ap_ST_st43_fsm_42 = ap_CS_fsm)) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    ap_return <= p_0_reg_166;
    grp_fu_251_ce <= ap_const_logic_1;
    grp_fu_251_p0 <= c_load_reg_329;
    grp_fu_251_p1 <= ap_const_lv32_1;
    grp_nfa_accept_sample_fu_178_ap_start <= grp_nfa_accept_sample_fu_178_ap_start_ap_start_reg;
    grp_nfa_accept_sample_fu_178_length_r <= sample_length;
    grp_nfa_accept_sample_fu_178_nfa_finals_buckets_datain <= nfa_finals_buckets_datain;
    grp_nfa_accept_sample_fu_178_nfa_finals_buckets_req_full_n <= nfa_finals_buckets_req_full_n;
    grp_nfa_accept_sample_fu_178_nfa_finals_buckets_rsp_empty_n <= nfa_finals_buckets_rsp_empty_n;
    grp_nfa_accept_sample_fu_178_nfa_forward_buckets_datain <= nfa_forward_buckets_datain;
    grp_nfa_accept_sample_fu_178_nfa_forward_buckets_req_full_n <= nfa_forward_buckets_req_full_n;
    grp_nfa_accept_sample_fu_178_nfa_forward_buckets_rsp_empty_n <= nfa_forward_buckets_rsp_empty_n;
    grp_nfa_accept_sample_fu_178_nfa_initials_buckets_datain <= nfa_initials_buckets_datain;
    grp_nfa_accept_sample_fu_178_nfa_initials_buckets_req_full_n <= nfa_initials_buckets_req_full_n;
    grp_nfa_accept_sample_fu_178_nfa_initials_buckets_rsp_empty_n <= nfa_initials_buckets_rsp_empty_n;
    grp_nfa_accept_sample_fu_178_nfa_symbols <= nfa_symbols;
    grp_nfa_accept_sample_fu_178_sample_datain <= sample_buffer_datain;
    grp_nfa_accept_sample_fu_178_sample_req_full_n <= sample_buffer_req_full_n;
    grp_nfa_accept_sample_fu_178_sample_rsp_empty_n <= sample_buffer_rsp_empty_n;
    grp_nfa_accept_sample_fu_178_tmp_36 <= offset_reg_335;
    grp_sample_iterator_get_offset_fu_194_ap_ce <= ap_const_logic_1;
    grp_sample_iterator_get_offset_fu_194_ap_start <= grp_sample_iterator_get_offset_fu_194_ap_start_ap_start_reg;
    grp_sample_iterator_get_offset_fu_194_i_index <= i_index_reg_146;
    grp_sample_iterator_get_offset_fu_194_i_sample <= i_sample_reg_156;
    grp_sample_iterator_get_offset_fu_194_indices_begin_datain <= indices_begin_datain;
    grp_sample_iterator_get_offset_fu_194_indices_begin_req_full_n <= indices_begin_req_full_n;
    grp_sample_iterator_get_offset_fu_194_indices_begin_rsp_empty_n <= indices_begin_rsp_empty_n;
    grp_sample_iterator_get_offset_fu_194_indices_samples_datain <= indices_samples_datain;
    grp_sample_iterator_get_offset_fu_194_indices_samples_req_full_n <= indices_samples_req_full_n;
    grp_sample_iterator_get_offset_fu_194_indices_samples_rsp_empty_n <= indices_samples_rsp_empty_n;
    grp_sample_iterator_get_offset_fu_194_indices_stride_datain <= indices_stride_datain;
    grp_sample_iterator_get_offset_fu_194_indices_stride_req_full_n <= indices_stride_req_full_n;
    grp_sample_iterator_get_offset_fu_194_indices_stride_rsp_empty_n <= indices_stride_rsp_empty_n;
    grp_sample_iterator_get_offset_fu_194_sample_buffer_size <= sample_buffer_length;
    grp_sample_iterator_get_offset_fu_194_sample_length <= sample_length;
    grp_sample_iterator_next_fu_211_ap_ce <= ap_const_logic_1;
    grp_sample_iterator_next_fu_211_ap_start <= grp_sample_iterator_next_fu_211_ap_start_ap_start_reg;
    grp_sample_iterator_next_fu_211_i_index <= i_index_reg_146;
    grp_sample_iterator_next_fu_211_i_sample <= i_sample_reg_156;
    grp_sample_iterator_next_fu_211_indices_begin_datain <= indices_begin_datain;
    grp_sample_iterator_next_fu_211_indices_begin_req_full_n <= indices_begin_req_full_n;
    grp_sample_iterator_next_fu_211_indices_begin_rsp_empty_n <= indices_begin_rsp_empty_n;
    grp_sample_iterator_next_fu_211_indices_samples_datain <= indices_samples_datain;
    grp_sample_iterator_next_fu_211_indices_samples_req_full_n <= indices_samples_req_full_n;
    grp_sample_iterator_next_fu_211_indices_samples_rsp_empty_n <= indices_samples_rsp_empty_n;
    grp_sample_iterator_next_fu_211_indices_stride_datain <= indices_stride_datain;
    grp_sample_iterator_next_fu_211_indices_stride_req_full_n <= indices_stride_req_full_n;
    grp_sample_iterator_next_fu_211_indices_stride_rsp_empty_n <= indices_stride_rsp_empty_n;

    -- indices_begin_address assign process. --
    indices_begin_address_assign_proc : process(ap_CS_fsm, tmp_i_11_reg_325, grp_sample_iterator_get_offset_fu_194_indices_begin_address, grp_sample_iterator_next_fu_211_indices_begin_address)
    begin
        if (((ap_ST_st42_fsm_41 = ap_CS_fsm) or (ap_ST_st31_fsm_30 = ap_CS_fsm) or (ap_ST_st32_fsm_31 = ap_CS_fsm) or (ap_ST_st33_fsm_32 = ap_CS_fsm) or (ap_ST_st34_fsm_33 = ap_CS_fsm) or (ap_ST_st35_fsm_34 = ap_CS_fsm) or (ap_ST_st36_fsm_35 = ap_CS_fsm) or (ap_ST_st37_fsm_36 = ap_CS_fsm) or (ap_ST_st38_fsm_37 = ap_CS_fsm) or (ap_ST_st39_fsm_38 = ap_CS_fsm) or (ap_ST_st40_fsm_39 = ap_CS_fsm) or (ap_ST_st41_fsm_40 = ap_CS_fsm))) then 
            indices_begin_address <= grp_sample_iterator_next_fu_211_indices_begin_address;
        elsif (((ap_ST_st21_fsm_20 = ap_CS_fsm) or ((ap_ST_st4_fsm_3 = ap_CS_fsm) and (tmp_i_11_reg_325 = ap_const_lv1_0)) or (ap_ST_st5_fsm_4 = ap_CS_fsm) or (ap_ST_st6_fsm_5 = ap_CS_fsm) or (ap_ST_st7_fsm_6 = ap_CS_fsm) or (ap_ST_st8_fsm_7 = ap_CS_fsm) or (ap_ST_st9_fsm_8 = ap_CS_fsm) or (ap_ST_st10_fsm_9 = ap_CS_fsm) or (ap_ST_st11_fsm_10 = ap_CS_fsm) or (ap_ST_st12_fsm_11 = ap_CS_fsm) or (ap_ST_st13_fsm_12 = ap_CS_fsm) or (ap_ST_st14_fsm_13 = ap_CS_fsm) or (ap_ST_st15_fsm_14 = ap_CS_fsm) or (ap_ST_st16_fsm_15 = ap_CS_fsm) or (ap_ST_st17_fsm_16 = ap_CS_fsm) or (ap_ST_st18_fsm_17 = ap_CS_fsm) or (ap_ST_st19_fsm_18 = ap_CS_fsm) or (ap_ST_st20_fsm_19 = ap_CS_fsm))) then 
            indices_begin_address <= grp_sample_iterator_get_offset_fu_194_indices_begin_address;
        else 
            indices_begin_address <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    -- indices_begin_dataout assign process. --
    indices_begin_dataout_assign_proc : process(ap_CS_fsm, tmp_i_11_reg_325, grp_sample_iterator_get_offset_fu_194_indices_begin_dataout, grp_sample_iterator_next_fu_211_indices_begin_dataout)
    begin
        if (((ap_ST_st42_fsm_41 = ap_CS_fsm) or (ap_ST_st31_fsm_30 = ap_CS_fsm) or (ap_ST_st32_fsm_31 = ap_CS_fsm) or (ap_ST_st33_fsm_32 = ap_CS_fsm) or (ap_ST_st34_fsm_33 = ap_CS_fsm) or (ap_ST_st35_fsm_34 = ap_CS_fsm) or (ap_ST_st36_fsm_35 = ap_CS_fsm) or (ap_ST_st37_fsm_36 = ap_CS_fsm) or (ap_ST_st38_fsm_37 = ap_CS_fsm) or (ap_ST_st39_fsm_38 = ap_CS_fsm) or (ap_ST_st40_fsm_39 = ap_CS_fsm) or (ap_ST_st41_fsm_40 = ap_CS_fsm))) then 
            indices_begin_dataout <= grp_sample_iterator_next_fu_211_indices_begin_dataout;
        elsif (((ap_ST_st21_fsm_20 = ap_CS_fsm) or ((ap_ST_st4_fsm_3 = ap_CS_fsm) and (tmp_i_11_reg_325 = ap_const_lv1_0)) or (ap_ST_st5_fsm_4 = ap_CS_fsm) or (ap_ST_st6_fsm_5 = ap_CS_fsm) or (ap_ST_st7_fsm_6 = ap_CS_fsm) or (ap_ST_st8_fsm_7 = ap_CS_fsm) or (ap_ST_st9_fsm_8 = ap_CS_fsm) or (ap_ST_st10_fsm_9 = ap_CS_fsm) or (ap_ST_st11_fsm_10 = ap_CS_fsm) or (ap_ST_st12_fsm_11 = ap_CS_fsm) or (ap_ST_st13_fsm_12 = ap_CS_fsm) or (ap_ST_st14_fsm_13 = ap_CS_fsm) or (ap_ST_st15_fsm_14 = ap_CS_fsm) or (ap_ST_st16_fsm_15 = ap_CS_fsm) or (ap_ST_st17_fsm_16 = ap_CS_fsm) or (ap_ST_st18_fsm_17 = ap_CS_fsm) or (ap_ST_st19_fsm_18 = ap_CS_fsm) or (ap_ST_st20_fsm_19 = ap_CS_fsm))) then 
            indices_begin_dataout <= grp_sample_iterator_get_offset_fu_194_indices_begin_dataout;
        else 
            indices_begin_dataout <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    -- indices_begin_req_din assign process. --
    indices_begin_req_din_assign_proc : process(ap_CS_fsm, tmp_i_11_reg_325, grp_sample_iterator_get_offset_fu_194_indices_begin_req_din, grp_sample_iterator_next_fu_211_indices_begin_req_din)
    begin
        if (((ap_ST_st42_fsm_41 = ap_CS_fsm) or (ap_ST_st31_fsm_30 = ap_CS_fsm) or (ap_ST_st32_fsm_31 = ap_CS_fsm) or (ap_ST_st33_fsm_32 = ap_CS_fsm) or (ap_ST_st34_fsm_33 = ap_CS_fsm) or (ap_ST_st35_fsm_34 = ap_CS_fsm) or (ap_ST_st36_fsm_35 = ap_CS_fsm) or (ap_ST_st37_fsm_36 = ap_CS_fsm) or (ap_ST_st38_fsm_37 = ap_CS_fsm) or (ap_ST_st39_fsm_38 = ap_CS_fsm) or (ap_ST_st40_fsm_39 = ap_CS_fsm) or (ap_ST_st41_fsm_40 = ap_CS_fsm))) then 
            indices_begin_req_din <= grp_sample_iterator_next_fu_211_indices_begin_req_din;
        elsif (((ap_ST_st21_fsm_20 = ap_CS_fsm) or ((ap_ST_st4_fsm_3 = ap_CS_fsm) and (tmp_i_11_reg_325 = ap_const_lv1_0)) or (ap_ST_st5_fsm_4 = ap_CS_fsm) or (ap_ST_st6_fsm_5 = ap_CS_fsm) or (ap_ST_st7_fsm_6 = ap_CS_fsm) or (ap_ST_st8_fsm_7 = ap_CS_fsm) or (ap_ST_st9_fsm_8 = ap_CS_fsm) or (ap_ST_st10_fsm_9 = ap_CS_fsm) or (ap_ST_st11_fsm_10 = ap_CS_fsm) or (ap_ST_st12_fsm_11 = ap_CS_fsm) or (ap_ST_st13_fsm_12 = ap_CS_fsm) or (ap_ST_st14_fsm_13 = ap_CS_fsm) or (ap_ST_st15_fsm_14 = ap_CS_fsm) or (ap_ST_st16_fsm_15 = ap_CS_fsm) or (ap_ST_st17_fsm_16 = ap_CS_fsm) or (ap_ST_st18_fsm_17 = ap_CS_fsm) or (ap_ST_st19_fsm_18 = ap_CS_fsm) or (ap_ST_st20_fsm_19 = ap_CS_fsm))) then 
            indices_begin_req_din <= grp_sample_iterator_get_offset_fu_194_indices_begin_req_din;
        else 
            indices_begin_req_din <= 'X';
        end if; 
    end process;


    -- indices_begin_req_write assign process. --
    indices_begin_req_write_assign_proc : process(ap_CS_fsm, tmp_i_11_reg_325, grp_sample_iterator_get_offset_fu_194_indices_begin_req_write, grp_sample_iterator_next_fu_211_indices_begin_req_write)
    begin
        if (((ap_ST_st42_fsm_41 = ap_CS_fsm) or (ap_ST_st31_fsm_30 = ap_CS_fsm) or (ap_ST_st32_fsm_31 = ap_CS_fsm) or (ap_ST_st33_fsm_32 = ap_CS_fsm) or (ap_ST_st34_fsm_33 = ap_CS_fsm) or (ap_ST_st35_fsm_34 = ap_CS_fsm) or (ap_ST_st36_fsm_35 = ap_CS_fsm) or (ap_ST_st37_fsm_36 = ap_CS_fsm) or (ap_ST_st38_fsm_37 = ap_CS_fsm) or (ap_ST_st39_fsm_38 = ap_CS_fsm) or (ap_ST_st40_fsm_39 = ap_CS_fsm) or (ap_ST_st41_fsm_40 = ap_CS_fsm))) then 
            indices_begin_req_write <= grp_sample_iterator_next_fu_211_indices_begin_req_write;
        elsif (((ap_ST_st21_fsm_20 = ap_CS_fsm) or ((ap_ST_st4_fsm_3 = ap_CS_fsm) and (tmp_i_11_reg_325 = ap_const_lv1_0)) or (ap_ST_st5_fsm_4 = ap_CS_fsm) or (ap_ST_st6_fsm_5 = ap_CS_fsm) or (ap_ST_st7_fsm_6 = ap_CS_fsm) or (ap_ST_st8_fsm_7 = ap_CS_fsm) or (ap_ST_st9_fsm_8 = ap_CS_fsm) or (ap_ST_st10_fsm_9 = ap_CS_fsm) or (ap_ST_st11_fsm_10 = ap_CS_fsm) or (ap_ST_st12_fsm_11 = ap_CS_fsm) or (ap_ST_st13_fsm_12 = ap_CS_fsm) or (ap_ST_st14_fsm_13 = ap_CS_fsm) or (ap_ST_st15_fsm_14 = ap_CS_fsm) or (ap_ST_st16_fsm_15 = ap_CS_fsm) or (ap_ST_st17_fsm_16 = ap_CS_fsm) or (ap_ST_st18_fsm_17 = ap_CS_fsm) or (ap_ST_st19_fsm_18 = ap_CS_fsm) or (ap_ST_st20_fsm_19 = ap_CS_fsm))) then 
            indices_begin_req_write <= grp_sample_iterator_get_offset_fu_194_indices_begin_req_write;
        else 
            indices_begin_req_write <= 'X';
        end if; 
    end process;


    -- indices_begin_rsp_read assign process. --
    indices_begin_rsp_read_assign_proc : process(ap_CS_fsm, tmp_i_11_reg_325, grp_sample_iterator_get_offset_fu_194_indices_begin_rsp_read, grp_sample_iterator_next_fu_211_indices_begin_rsp_read)
    begin
        if (((ap_ST_st42_fsm_41 = ap_CS_fsm) or (ap_ST_st31_fsm_30 = ap_CS_fsm) or (ap_ST_st32_fsm_31 = ap_CS_fsm) or (ap_ST_st33_fsm_32 = ap_CS_fsm) or (ap_ST_st34_fsm_33 = ap_CS_fsm) or (ap_ST_st35_fsm_34 = ap_CS_fsm) or (ap_ST_st36_fsm_35 = ap_CS_fsm) or (ap_ST_st37_fsm_36 = ap_CS_fsm) or (ap_ST_st38_fsm_37 = ap_CS_fsm) or (ap_ST_st39_fsm_38 = ap_CS_fsm) or (ap_ST_st40_fsm_39 = ap_CS_fsm) or (ap_ST_st41_fsm_40 = ap_CS_fsm))) then 
            indices_begin_rsp_read <= grp_sample_iterator_next_fu_211_indices_begin_rsp_read;
        elsif (((ap_ST_st21_fsm_20 = ap_CS_fsm) or ((ap_ST_st4_fsm_3 = ap_CS_fsm) and (tmp_i_11_reg_325 = ap_const_lv1_0)) or (ap_ST_st5_fsm_4 = ap_CS_fsm) or (ap_ST_st6_fsm_5 = ap_CS_fsm) or (ap_ST_st7_fsm_6 = ap_CS_fsm) or (ap_ST_st8_fsm_7 = ap_CS_fsm) or (ap_ST_st9_fsm_8 = ap_CS_fsm) or (ap_ST_st10_fsm_9 = ap_CS_fsm) or (ap_ST_st11_fsm_10 = ap_CS_fsm) or (ap_ST_st12_fsm_11 = ap_CS_fsm) or (ap_ST_st13_fsm_12 = ap_CS_fsm) or (ap_ST_st14_fsm_13 = ap_CS_fsm) or (ap_ST_st15_fsm_14 = ap_CS_fsm) or (ap_ST_st16_fsm_15 = ap_CS_fsm) or (ap_ST_st17_fsm_16 = ap_CS_fsm) or (ap_ST_st18_fsm_17 = ap_CS_fsm) or (ap_ST_st19_fsm_18 = ap_CS_fsm) or (ap_ST_st20_fsm_19 = ap_CS_fsm))) then 
            indices_begin_rsp_read <= grp_sample_iterator_get_offset_fu_194_indices_begin_rsp_read;
        else 
            indices_begin_rsp_read <= 'X';
        end if; 
    end process;


    -- indices_begin_size assign process. --
    indices_begin_size_assign_proc : process(ap_CS_fsm, tmp_i_11_reg_325, grp_sample_iterator_get_offset_fu_194_indices_begin_size, grp_sample_iterator_next_fu_211_indices_begin_size)
    begin
        if (((ap_ST_st42_fsm_41 = ap_CS_fsm) or (ap_ST_st31_fsm_30 = ap_CS_fsm) or (ap_ST_st32_fsm_31 = ap_CS_fsm) or (ap_ST_st33_fsm_32 = ap_CS_fsm) or (ap_ST_st34_fsm_33 = ap_CS_fsm) or (ap_ST_st35_fsm_34 = ap_CS_fsm) or (ap_ST_st36_fsm_35 = ap_CS_fsm) or (ap_ST_st37_fsm_36 = ap_CS_fsm) or (ap_ST_st38_fsm_37 = ap_CS_fsm) or (ap_ST_st39_fsm_38 = ap_CS_fsm) or (ap_ST_st40_fsm_39 = ap_CS_fsm) or (ap_ST_st41_fsm_40 = ap_CS_fsm))) then 
            indices_begin_size <= grp_sample_iterator_next_fu_211_indices_begin_size;
        elsif (((ap_ST_st21_fsm_20 = ap_CS_fsm) or ((ap_ST_st4_fsm_3 = ap_CS_fsm) and (tmp_i_11_reg_325 = ap_const_lv1_0)) or (ap_ST_st5_fsm_4 = ap_CS_fsm) or (ap_ST_st6_fsm_5 = ap_CS_fsm) or (ap_ST_st7_fsm_6 = ap_CS_fsm) or (ap_ST_st8_fsm_7 = ap_CS_fsm) or (ap_ST_st9_fsm_8 = ap_CS_fsm) or (ap_ST_st10_fsm_9 = ap_CS_fsm) or (ap_ST_st11_fsm_10 = ap_CS_fsm) or (ap_ST_st12_fsm_11 = ap_CS_fsm) or (ap_ST_st13_fsm_12 = ap_CS_fsm) or (ap_ST_st14_fsm_13 = ap_CS_fsm) or (ap_ST_st15_fsm_14 = ap_CS_fsm) or (ap_ST_st16_fsm_15 = ap_CS_fsm) or (ap_ST_st17_fsm_16 = ap_CS_fsm) or (ap_ST_st18_fsm_17 = ap_CS_fsm) or (ap_ST_st19_fsm_18 = ap_CS_fsm) or (ap_ST_st20_fsm_19 = ap_CS_fsm))) then 
            indices_begin_size <= grp_sample_iterator_get_offset_fu_194_indices_begin_size;
        else 
            indices_begin_size <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    -- indices_samples_address assign process. --
    indices_samples_address_assign_proc : process(ap_CS_fsm, tmp_i_11_reg_325, grp_sample_iterator_get_offset_fu_194_indices_samples_address, grp_sample_iterator_next_fu_211_indices_samples_address)
    begin
        if (((ap_ST_st42_fsm_41 = ap_CS_fsm) or (ap_ST_st31_fsm_30 = ap_CS_fsm) or (ap_ST_st32_fsm_31 = ap_CS_fsm) or (ap_ST_st33_fsm_32 = ap_CS_fsm) or (ap_ST_st34_fsm_33 = ap_CS_fsm) or (ap_ST_st35_fsm_34 = ap_CS_fsm) or (ap_ST_st36_fsm_35 = ap_CS_fsm) or (ap_ST_st37_fsm_36 = ap_CS_fsm) or (ap_ST_st38_fsm_37 = ap_CS_fsm) or (ap_ST_st39_fsm_38 = ap_CS_fsm) or (ap_ST_st40_fsm_39 = ap_CS_fsm) or (ap_ST_st41_fsm_40 = ap_CS_fsm))) then 
            indices_samples_address <= grp_sample_iterator_next_fu_211_indices_samples_address;
        elsif (((ap_ST_st21_fsm_20 = ap_CS_fsm) or ((ap_ST_st4_fsm_3 = ap_CS_fsm) and (tmp_i_11_reg_325 = ap_const_lv1_0)) or (ap_ST_st5_fsm_4 = ap_CS_fsm) or (ap_ST_st6_fsm_5 = ap_CS_fsm) or (ap_ST_st7_fsm_6 = ap_CS_fsm) or (ap_ST_st8_fsm_7 = ap_CS_fsm) or (ap_ST_st9_fsm_8 = ap_CS_fsm) or (ap_ST_st10_fsm_9 = ap_CS_fsm) or (ap_ST_st11_fsm_10 = ap_CS_fsm) or (ap_ST_st12_fsm_11 = ap_CS_fsm) or (ap_ST_st13_fsm_12 = ap_CS_fsm) or (ap_ST_st14_fsm_13 = ap_CS_fsm) or (ap_ST_st15_fsm_14 = ap_CS_fsm) or (ap_ST_st16_fsm_15 = ap_CS_fsm) or (ap_ST_st17_fsm_16 = ap_CS_fsm) or (ap_ST_st18_fsm_17 = ap_CS_fsm) or (ap_ST_st19_fsm_18 = ap_CS_fsm) or (ap_ST_st20_fsm_19 = ap_CS_fsm))) then 
            indices_samples_address <= grp_sample_iterator_get_offset_fu_194_indices_samples_address;
        else 
            indices_samples_address <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    -- indices_samples_dataout assign process. --
    indices_samples_dataout_assign_proc : process(ap_CS_fsm, tmp_i_11_reg_325, grp_sample_iterator_get_offset_fu_194_indices_samples_dataout, grp_sample_iterator_next_fu_211_indices_samples_dataout)
    begin
        if (((ap_ST_st42_fsm_41 = ap_CS_fsm) or (ap_ST_st31_fsm_30 = ap_CS_fsm) or (ap_ST_st32_fsm_31 = ap_CS_fsm) or (ap_ST_st33_fsm_32 = ap_CS_fsm) or (ap_ST_st34_fsm_33 = ap_CS_fsm) or (ap_ST_st35_fsm_34 = ap_CS_fsm) or (ap_ST_st36_fsm_35 = ap_CS_fsm) or (ap_ST_st37_fsm_36 = ap_CS_fsm) or (ap_ST_st38_fsm_37 = ap_CS_fsm) or (ap_ST_st39_fsm_38 = ap_CS_fsm) or (ap_ST_st40_fsm_39 = ap_CS_fsm) or (ap_ST_st41_fsm_40 = ap_CS_fsm))) then 
            indices_samples_dataout <= grp_sample_iterator_next_fu_211_indices_samples_dataout;
        elsif (((ap_ST_st21_fsm_20 = ap_CS_fsm) or ((ap_ST_st4_fsm_3 = ap_CS_fsm) and (tmp_i_11_reg_325 = ap_const_lv1_0)) or (ap_ST_st5_fsm_4 = ap_CS_fsm) or (ap_ST_st6_fsm_5 = ap_CS_fsm) or (ap_ST_st7_fsm_6 = ap_CS_fsm) or (ap_ST_st8_fsm_7 = ap_CS_fsm) or (ap_ST_st9_fsm_8 = ap_CS_fsm) or (ap_ST_st10_fsm_9 = ap_CS_fsm) or (ap_ST_st11_fsm_10 = ap_CS_fsm) or (ap_ST_st12_fsm_11 = ap_CS_fsm) or (ap_ST_st13_fsm_12 = ap_CS_fsm) or (ap_ST_st14_fsm_13 = ap_CS_fsm) or (ap_ST_st15_fsm_14 = ap_CS_fsm) or (ap_ST_st16_fsm_15 = ap_CS_fsm) or (ap_ST_st17_fsm_16 = ap_CS_fsm) or (ap_ST_st18_fsm_17 = ap_CS_fsm) or (ap_ST_st19_fsm_18 = ap_CS_fsm) or (ap_ST_st20_fsm_19 = ap_CS_fsm))) then 
            indices_samples_dataout <= grp_sample_iterator_get_offset_fu_194_indices_samples_dataout;
        else 
            indices_samples_dataout <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    -- indices_samples_req_din assign process. --
    indices_samples_req_din_assign_proc : process(ap_CS_fsm, tmp_i_11_reg_325, grp_sample_iterator_get_offset_fu_194_indices_samples_req_din, grp_sample_iterator_next_fu_211_indices_samples_req_din)
    begin
        if (((ap_ST_st42_fsm_41 = ap_CS_fsm) or (ap_ST_st31_fsm_30 = ap_CS_fsm) or (ap_ST_st32_fsm_31 = ap_CS_fsm) or (ap_ST_st33_fsm_32 = ap_CS_fsm) or (ap_ST_st34_fsm_33 = ap_CS_fsm) or (ap_ST_st35_fsm_34 = ap_CS_fsm) or (ap_ST_st36_fsm_35 = ap_CS_fsm) or (ap_ST_st37_fsm_36 = ap_CS_fsm) or (ap_ST_st38_fsm_37 = ap_CS_fsm) or (ap_ST_st39_fsm_38 = ap_CS_fsm) or (ap_ST_st40_fsm_39 = ap_CS_fsm) or (ap_ST_st41_fsm_40 = ap_CS_fsm))) then 
            indices_samples_req_din <= grp_sample_iterator_next_fu_211_indices_samples_req_din;
        elsif (((ap_ST_st21_fsm_20 = ap_CS_fsm) or ((ap_ST_st4_fsm_3 = ap_CS_fsm) and (tmp_i_11_reg_325 = ap_const_lv1_0)) or (ap_ST_st5_fsm_4 = ap_CS_fsm) or (ap_ST_st6_fsm_5 = ap_CS_fsm) or (ap_ST_st7_fsm_6 = ap_CS_fsm) or (ap_ST_st8_fsm_7 = ap_CS_fsm) or (ap_ST_st9_fsm_8 = ap_CS_fsm) or (ap_ST_st10_fsm_9 = ap_CS_fsm) or (ap_ST_st11_fsm_10 = ap_CS_fsm) or (ap_ST_st12_fsm_11 = ap_CS_fsm) or (ap_ST_st13_fsm_12 = ap_CS_fsm) or (ap_ST_st14_fsm_13 = ap_CS_fsm) or (ap_ST_st15_fsm_14 = ap_CS_fsm) or (ap_ST_st16_fsm_15 = ap_CS_fsm) or (ap_ST_st17_fsm_16 = ap_CS_fsm) or (ap_ST_st18_fsm_17 = ap_CS_fsm) or (ap_ST_st19_fsm_18 = ap_CS_fsm) or (ap_ST_st20_fsm_19 = ap_CS_fsm))) then 
            indices_samples_req_din <= grp_sample_iterator_get_offset_fu_194_indices_samples_req_din;
        else 
            indices_samples_req_din <= 'X';
        end if; 
    end process;


    -- indices_samples_req_write assign process. --
    indices_samples_req_write_assign_proc : process(ap_CS_fsm, tmp_i_11_reg_325, grp_sample_iterator_get_offset_fu_194_indices_samples_req_write, grp_sample_iterator_next_fu_211_indices_samples_req_write)
    begin
        if (((ap_ST_st42_fsm_41 = ap_CS_fsm) or (ap_ST_st31_fsm_30 = ap_CS_fsm) or (ap_ST_st32_fsm_31 = ap_CS_fsm) or (ap_ST_st33_fsm_32 = ap_CS_fsm) or (ap_ST_st34_fsm_33 = ap_CS_fsm) or (ap_ST_st35_fsm_34 = ap_CS_fsm) or (ap_ST_st36_fsm_35 = ap_CS_fsm) or (ap_ST_st37_fsm_36 = ap_CS_fsm) or (ap_ST_st38_fsm_37 = ap_CS_fsm) or (ap_ST_st39_fsm_38 = ap_CS_fsm) or (ap_ST_st40_fsm_39 = ap_CS_fsm) or (ap_ST_st41_fsm_40 = ap_CS_fsm))) then 
            indices_samples_req_write <= grp_sample_iterator_next_fu_211_indices_samples_req_write;
        elsif (((ap_ST_st21_fsm_20 = ap_CS_fsm) or ((ap_ST_st4_fsm_3 = ap_CS_fsm) and (tmp_i_11_reg_325 = ap_const_lv1_0)) or (ap_ST_st5_fsm_4 = ap_CS_fsm) or (ap_ST_st6_fsm_5 = ap_CS_fsm) or (ap_ST_st7_fsm_6 = ap_CS_fsm) or (ap_ST_st8_fsm_7 = ap_CS_fsm) or (ap_ST_st9_fsm_8 = ap_CS_fsm) or (ap_ST_st10_fsm_9 = ap_CS_fsm) or (ap_ST_st11_fsm_10 = ap_CS_fsm) or (ap_ST_st12_fsm_11 = ap_CS_fsm) or (ap_ST_st13_fsm_12 = ap_CS_fsm) or (ap_ST_st14_fsm_13 = ap_CS_fsm) or (ap_ST_st15_fsm_14 = ap_CS_fsm) or (ap_ST_st16_fsm_15 = ap_CS_fsm) or (ap_ST_st17_fsm_16 = ap_CS_fsm) or (ap_ST_st18_fsm_17 = ap_CS_fsm) or (ap_ST_st19_fsm_18 = ap_CS_fsm) or (ap_ST_st20_fsm_19 = ap_CS_fsm))) then 
            indices_samples_req_write <= grp_sample_iterator_get_offset_fu_194_indices_samples_req_write;
        else 
            indices_samples_req_write <= 'X';
        end if; 
    end process;


    -- indices_samples_rsp_read assign process. --
    indices_samples_rsp_read_assign_proc : process(ap_CS_fsm, tmp_i_11_reg_325, grp_sample_iterator_get_offset_fu_194_indices_samples_rsp_read, grp_sample_iterator_next_fu_211_indices_samples_rsp_read)
    begin
        if (((ap_ST_st42_fsm_41 = ap_CS_fsm) or (ap_ST_st31_fsm_30 = ap_CS_fsm) or (ap_ST_st32_fsm_31 = ap_CS_fsm) or (ap_ST_st33_fsm_32 = ap_CS_fsm) or (ap_ST_st34_fsm_33 = ap_CS_fsm) or (ap_ST_st35_fsm_34 = ap_CS_fsm) or (ap_ST_st36_fsm_35 = ap_CS_fsm) or (ap_ST_st37_fsm_36 = ap_CS_fsm) or (ap_ST_st38_fsm_37 = ap_CS_fsm) or (ap_ST_st39_fsm_38 = ap_CS_fsm) or (ap_ST_st40_fsm_39 = ap_CS_fsm) or (ap_ST_st41_fsm_40 = ap_CS_fsm))) then 
            indices_samples_rsp_read <= grp_sample_iterator_next_fu_211_indices_samples_rsp_read;
        elsif (((ap_ST_st21_fsm_20 = ap_CS_fsm) or ((ap_ST_st4_fsm_3 = ap_CS_fsm) and (tmp_i_11_reg_325 = ap_const_lv1_0)) or (ap_ST_st5_fsm_4 = ap_CS_fsm) or (ap_ST_st6_fsm_5 = ap_CS_fsm) or (ap_ST_st7_fsm_6 = ap_CS_fsm) or (ap_ST_st8_fsm_7 = ap_CS_fsm) or (ap_ST_st9_fsm_8 = ap_CS_fsm) or (ap_ST_st10_fsm_9 = ap_CS_fsm) or (ap_ST_st11_fsm_10 = ap_CS_fsm) or (ap_ST_st12_fsm_11 = ap_CS_fsm) or (ap_ST_st13_fsm_12 = ap_CS_fsm) or (ap_ST_st14_fsm_13 = ap_CS_fsm) or (ap_ST_st15_fsm_14 = ap_CS_fsm) or (ap_ST_st16_fsm_15 = ap_CS_fsm) or (ap_ST_st17_fsm_16 = ap_CS_fsm) or (ap_ST_st18_fsm_17 = ap_CS_fsm) or (ap_ST_st19_fsm_18 = ap_CS_fsm) or (ap_ST_st20_fsm_19 = ap_CS_fsm))) then 
            indices_samples_rsp_read <= grp_sample_iterator_get_offset_fu_194_indices_samples_rsp_read;
        else 
            indices_samples_rsp_read <= 'X';
        end if; 
    end process;


    -- indices_samples_size assign process. --
    indices_samples_size_assign_proc : process(ap_CS_fsm, tmp_i_11_reg_325, grp_sample_iterator_get_offset_fu_194_indices_samples_size, grp_sample_iterator_next_fu_211_indices_samples_size)
    begin
        if (((ap_ST_st42_fsm_41 = ap_CS_fsm) or (ap_ST_st31_fsm_30 = ap_CS_fsm) or (ap_ST_st32_fsm_31 = ap_CS_fsm) or (ap_ST_st33_fsm_32 = ap_CS_fsm) or (ap_ST_st34_fsm_33 = ap_CS_fsm) or (ap_ST_st35_fsm_34 = ap_CS_fsm) or (ap_ST_st36_fsm_35 = ap_CS_fsm) or (ap_ST_st37_fsm_36 = ap_CS_fsm) or (ap_ST_st38_fsm_37 = ap_CS_fsm) or (ap_ST_st39_fsm_38 = ap_CS_fsm) or (ap_ST_st40_fsm_39 = ap_CS_fsm) or (ap_ST_st41_fsm_40 = ap_CS_fsm))) then 
            indices_samples_size <= grp_sample_iterator_next_fu_211_indices_samples_size;
        elsif (((ap_ST_st21_fsm_20 = ap_CS_fsm) or ((ap_ST_st4_fsm_3 = ap_CS_fsm) and (tmp_i_11_reg_325 = ap_const_lv1_0)) or (ap_ST_st5_fsm_4 = ap_CS_fsm) or (ap_ST_st6_fsm_5 = ap_CS_fsm) or (ap_ST_st7_fsm_6 = ap_CS_fsm) or (ap_ST_st8_fsm_7 = ap_CS_fsm) or (ap_ST_st9_fsm_8 = ap_CS_fsm) or (ap_ST_st10_fsm_9 = ap_CS_fsm) or (ap_ST_st11_fsm_10 = ap_CS_fsm) or (ap_ST_st12_fsm_11 = ap_CS_fsm) or (ap_ST_st13_fsm_12 = ap_CS_fsm) or (ap_ST_st14_fsm_13 = ap_CS_fsm) or (ap_ST_st15_fsm_14 = ap_CS_fsm) or (ap_ST_st16_fsm_15 = ap_CS_fsm) or (ap_ST_st17_fsm_16 = ap_CS_fsm) or (ap_ST_st18_fsm_17 = ap_CS_fsm) or (ap_ST_st19_fsm_18 = ap_CS_fsm) or (ap_ST_st20_fsm_19 = ap_CS_fsm))) then 
            indices_samples_size <= grp_sample_iterator_get_offset_fu_194_indices_samples_size;
        else 
            indices_samples_size <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    -- indices_stride_address assign process. --
    indices_stride_address_assign_proc : process(ap_CS_fsm, tmp_i_11_reg_325, grp_sample_iterator_get_offset_fu_194_indices_stride_address, grp_sample_iterator_next_fu_211_indices_stride_address)
    begin
        if (((ap_ST_st42_fsm_41 = ap_CS_fsm) or (ap_ST_st31_fsm_30 = ap_CS_fsm) or (ap_ST_st32_fsm_31 = ap_CS_fsm) or (ap_ST_st33_fsm_32 = ap_CS_fsm) or (ap_ST_st34_fsm_33 = ap_CS_fsm) or (ap_ST_st35_fsm_34 = ap_CS_fsm) or (ap_ST_st36_fsm_35 = ap_CS_fsm) or (ap_ST_st37_fsm_36 = ap_CS_fsm) or (ap_ST_st38_fsm_37 = ap_CS_fsm) or (ap_ST_st39_fsm_38 = ap_CS_fsm) or (ap_ST_st40_fsm_39 = ap_CS_fsm) or (ap_ST_st41_fsm_40 = ap_CS_fsm))) then 
            indices_stride_address <= grp_sample_iterator_next_fu_211_indices_stride_address;
        elsif (((ap_ST_st21_fsm_20 = ap_CS_fsm) or ((ap_ST_st4_fsm_3 = ap_CS_fsm) and (tmp_i_11_reg_325 = ap_const_lv1_0)) or (ap_ST_st5_fsm_4 = ap_CS_fsm) or (ap_ST_st6_fsm_5 = ap_CS_fsm) or (ap_ST_st7_fsm_6 = ap_CS_fsm) or (ap_ST_st8_fsm_7 = ap_CS_fsm) or (ap_ST_st9_fsm_8 = ap_CS_fsm) or (ap_ST_st10_fsm_9 = ap_CS_fsm) or (ap_ST_st11_fsm_10 = ap_CS_fsm) or (ap_ST_st12_fsm_11 = ap_CS_fsm) or (ap_ST_st13_fsm_12 = ap_CS_fsm) or (ap_ST_st14_fsm_13 = ap_CS_fsm) or (ap_ST_st15_fsm_14 = ap_CS_fsm) or (ap_ST_st16_fsm_15 = ap_CS_fsm) or (ap_ST_st17_fsm_16 = ap_CS_fsm) or (ap_ST_st18_fsm_17 = ap_CS_fsm) or (ap_ST_st19_fsm_18 = ap_CS_fsm) or (ap_ST_st20_fsm_19 = ap_CS_fsm))) then 
            indices_stride_address <= grp_sample_iterator_get_offset_fu_194_indices_stride_address;
        else 
            indices_stride_address <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    -- indices_stride_dataout assign process. --
    indices_stride_dataout_assign_proc : process(ap_CS_fsm, tmp_i_11_reg_325, grp_sample_iterator_get_offset_fu_194_indices_stride_dataout, grp_sample_iterator_next_fu_211_indices_stride_dataout)
    begin
        if (((ap_ST_st42_fsm_41 = ap_CS_fsm) or (ap_ST_st31_fsm_30 = ap_CS_fsm) or (ap_ST_st32_fsm_31 = ap_CS_fsm) or (ap_ST_st33_fsm_32 = ap_CS_fsm) or (ap_ST_st34_fsm_33 = ap_CS_fsm) or (ap_ST_st35_fsm_34 = ap_CS_fsm) or (ap_ST_st36_fsm_35 = ap_CS_fsm) or (ap_ST_st37_fsm_36 = ap_CS_fsm) or (ap_ST_st38_fsm_37 = ap_CS_fsm) or (ap_ST_st39_fsm_38 = ap_CS_fsm) or (ap_ST_st40_fsm_39 = ap_CS_fsm) or (ap_ST_st41_fsm_40 = ap_CS_fsm))) then 
            indices_stride_dataout <= grp_sample_iterator_next_fu_211_indices_stride_dataout;
        elsif (((ap_ST_st21_fsm_20 = ap_CS_fsm) or ((ap_ST_st4_fsm_3 = ap_CS_fsm) and (tmp_i_11_reg_325 = ap_const_lv1_0)) or (ap_ST_st5_fsm_4 = ap_CS_fsm) or (ap_ST_st6_fsm_5 = ap_CS_fsm) or (ap_ST_st7_fsm_6 = ap_CS_fsm) or (ap_ST_st8_fsm_7 = ap_CS_fsm) or (ap_ST_st9_fsm_8 = ap_CS_fsm) or (ap_ST_st10_fsm_9 = ap_CS_fsm) or (ap_ST_st11_fsm_10 = ap_CS_fsm) or (ap_ST_st12_fsm_11 = ap_CS_fsm) or (ap_ST_st13_fsm_12 = ap_CS_fsm) or (ap_ST_st14_fsm_13 = ap_CS_fsm) or (ap_ST_st15_fsm_14 = ap_CS_fsm) or (ap_ST_st16_fsm_15 = ap_CS_fsm) or (ap_ST_st17_fsm_16 = ap_CS_fsm) or (ap_ST_st18_fsm_17 = ap_CS_fsm) or (ap_ST_st19_fsm_18 = ap_CS_fsm) or (ap_ST_st20_fsm_19 = ap_CS_fsm))) then 
            indices_stride_dataout <= grp_sample_iterator_get_offset_fu_194_indices_stride_dataout;
        else 
            indices_stride_dataout <= "XXXXXXXX";
        end if; 
    end process;


    -- indices_stride_req_din assign process. --
    indices_stride_req_din_assign_proc : process(ap_CS_fsm, tmp_i_11_reg_325, grp_sample_iterator_get_offset_fu_194_indices_stride_req_din, grp_sample_iterator_next_fu_211_indices_stride_req_din)
    begin
        if (((ap_ST_st42_fsm_41 = ap_CS_fsm) or (ap_ST_st31_fsm_30 = ap_CS_fsm) or (ap_ST_st32_fsm_31 = ap_CS_fsm) or (ap_ST_st33_fsm_32 = ap_CS_fsm) or (ap_ST_st34_fsm_33 = ap_CS_fsm) or (ap_ST_st35_fsm_34 = ap_CS_fsm) or (ap_ST_st36_fsm_35 = ap_CS_fsm) or (ap_ST_st37_fsm_36 = ap_CS_fsm) or (ap_ST_st38_fsm_37 = ap_CS_fsm) or (ap_ST_st39_fsm_38 = ap_CS_fsm) or (ap_ST_st40_fsm_39 = ap_CS_fsm) or (ap_ST_st41_fsm_40 = ap_CS_fsm))) then 
            indices_stride_req_din <= grp_sample_iterator_next_fu_211_indices_stride_req_din;
        elsif (((ap_ST_st21_fsm_20 = ap_CS_fsm) or ((ap_ST_st4_fsm_3 = ap_CS_fsm) and (tmp_i_11_reg_325 = ap_const_lv1_0)) or (ap_ST_st5_fsm_4 = ap_CS_fsm) or (ap_ST_st6_fsm_5 = ap_CS_fsm) or (ap_ST_st7_fsm_6 = ap_CS_fsm) or (ap_ST_st8_fsm_7 = ap_CS_fsm) or (ap_ST_st9_fsm_8 = ap_CS_fsm) or (ap_ST_st10_fsm_9 = ap_CS_fsm) or (ap_ST_st11_fsm_10 = ap_CS_fsm) or (ap_ST_st12_fsm_11 = ap_CS_fsm) or (ap_ST_st13_fsm_12 = ap_CS_fsm) or (ap_ST_st14_fsm_13 = ap_CS_fsm) or (ap_ST_st15_fsm_14 = ap_CS_fsm) or (ap_ST_st16_fsm_15 = ap_CS_fsm) or (ap_ST_st17_fsm_16 = ap_CS_fsm) or (ap_ST_st18_fsm_17 = ap_CS_fsm) or (ap_ST_st19_fsm_18 = ap_CS_fsm) or (ap_ST_st20_fsm_19 = ap_CS_fsm))) then 
            indices_stride_req_din <= grp_sample_iterator_get_offset_fu_194_indices_stride_req_din;
        else 
            indices_stride_req_din <= 'X';
        end if; 
    end process;


    -- indices_stride_req_write assign process. --
    indices_stride_req_write_assign_proc : process(ap_CS_fsm, tmp_i_11_reg_325, grp_sample_iterator_get_offset_fu_194_indices_stride_req_write, grp_sample_iterator_next_fu_211_indices_stride_req_write)
    begin
        if (((ap_ST_st42_fsm_41 = ap_CS_fsm) or (ap_ST_st31_fsm_30 = ap_CS_fsm) or (ap_ST_st32_fsm_31 = ap_CS_fsm) or (ap_ST_st33_fsm_32 = ap_CS_fsm) or (ap_ST_st34_fsm_33 = ap_CS_fsm) or (ap_ST_st35_fsm_34 = ap_CS_fsm) or (ap_ST_st36_fsm_35 = ap_CS_fsm) or (ap_ST_st37_fsm_36 = ap_CS_fsm) or (ap_ST_st38_fsm_37 = ap_CS_fsm) or (ap_ST_st39_fsm_38 = ap_CS_fsm) or (ap_ST_st40_fsm_39 = ap_CS_fsm) or (ap_ST_st41_fsm_40 = ap_CS_fsm))) then 
            indices_stride_req_write <= grp_sample_iterator_next_fu_211_indices_stride_req_write;
        elsif (((ap_ST_st21_fsm_20 = ap_CS_fsm) or ((ap_ST_st4_fsm_3 = ap_CS_fsm) and (tmp_i_11_reg_325 = ap_const_lv1_0)) or (ap_ST_st5_fsm_4 = ap_CS_fsm) or (ap_ST_st6_fsm_5 = ap_CS_fsm) or (ap_ST_st7_fsm_6 = ap_CS_fsm) or (ap_ST_st8_fsm_7 = ap_CS_fsm) or (ap_ST_st9_fsm_8 = ap_CS_fsm) or (ap_ST_st10_fsm_9 = ap_CS_fsm) or (ap_ST_st11_fsm_10 = ap_CS_fsm) or (ap_ST_st12_fsm_11 = ap_CS_fsm) or (ap_ST_st13_fsm_12 = ap_CS_fsm) or (ap_ST_st14_fsm_13 = ap_CS_fsm) or (ap_ST_st15_fsm_14 = ap_CS_fsm) or (ap_ST_st16_fsm_15 = ap_CS_fsm) or (ap_ST_st17_fsm_16 = ap_CS_fsm) or (ap_ST_st18_fsm_17 = ap_CS_fsm) or (ap_ST_st19_fsm_18 = ap_CS_fsm) or (ap_ST_st20_fsm_19 = ap_CS_fsm))) then 
            indices_stride_req_write <= grp_sample_iterator_get_offset_fu_194_indices_stride_req_write;
        else 
            indices_stride_req_write <= 'X';
        end if; 
    end process;


    -- indices_stride_rsp_read assign process. --
    indices_stride_rsp_read_assign_proc : process(ap_CS_fsm, tmp_i_11_reg_325, grp_sample_iterator_get_offset_fu_194_indices_stride_rsp_read, grp_sample_iterator_next_fu_211_indices_stride_rsp_read)
    begin
        if (((ap_ST_st42_fsm_41 = ap_CS_fsm) or (ap_ST_st31_fsm_30 = ap_CS_fsm) or (ap_ST_st32_fsm_31 = ap_CS_fsm) or (ap_ST_st33_fsm_32 = ap_CS_fsm) or (ap_ST_st34_fsm_33 = ap_CS_fsm) or (ap_ST_st35_fsm_34 = ap_CS_fsm) or (ap_ST_st36_fsm_35 = ap_CS_fsm) or (ap_ST_st37_fsm_36 = ap_CS_fsm) or (ap_ST_st38_fsm_37 = ap_CS_fsm) or (ap_ST_st39_fsm_38 = ap_CS_fsm) or (ap_ST_st40_fsm_39 = ap_CS_fsm) or (ap_ST_st41_fsm_40 = ap_CS_fsm))) then 
            indices_stride_rsp_read <= grp_sample_iterator_next_fu_211_indices_stride_rsp_read;
        elsif (((ap_ST_st21_fsm_20 = ap_CS_fsm) or ((ap_ST_st4_fsm_3 = ap_CS_fsm) and (tmp_i_11_reg_325 = ap_const_lv1_0)) or (ap_ST_st5_fsm_4 = ap_CS_fsm) or (ap_ST_st6_fsm_5 = ap_CS_fsm) or (ap_ST_st7_fsm_6 = ap_CS_fsm) or (ap_ST_st8_fsm_7 = ap_CS_fsm) or (ap_ST_st9_fsm_8 = ap_CS_fsm) or (ap_ST_st10_fsm_9 = ap_CS_fsm) or (ap_ST_st11_fsm_10 = ap_CS_fsm) or (ap_ST_st12_fsm_11 = ap_CS_fsm) or (ap_ST_st13_fsm_12 = ap_CS_fsm) or (ap_ST_st14_fsm_13 = ap_CS_fsm) or (ap_ST_st15_fsm_14 = ap_CS_fsm) or (ap_ST_st16_fsm_15 = ap_CS_fsm) or (ap_ST_st17_fsm_16 = ap_CS_fsm) or (ap_ST_st18_fsm_17 = ap_CS_fsm) or (ap_ST_st19_fsm_18 = ap_CS_fsm) or (ap_ST_st20_fsm_19 = ap_CS_fsm))) then 
            indices_stride_rsp_read <= grp_sample_iterator_get_offset_fu_194_indices_stride_rsp_read;
        else 
            indices_stride_rsp_read <= 'X';
        end if; 
    end process;


    -- indices_stride_size assign process. --
    indices_stride_size_assign_proc : process(ap_CS_fsm, tmp_i_11_reg_325, grp_sample_iterator_get_offset_fu_194_indices_stride_size, grp_sample_iterator_next_fu_211_indices_stride_size)
    begin
        if (((ap_ST_st42_fsm_41 = ap_CS_fsm) or (ap_ST_st31_fsm_30 = ap_CS_fsm) or (ap_ST_st32_fsm_31 = ap_CS_fsm) or (ap_ST_st33_fsm_32 = ap_CS_fsm) or (ap_ST_st34_fsm_33 = ap_CS_fsm) or (ap_ST_st35_fsm_34 = ap_CS_fsm) or (ap_ST_st36_fsm_35 = ap_CS_fsm) or (ap_ST_st37_fsm_36 = ap_CS_fsm) or (ap_ST_st38_fsm_37 = ap_CS_fsm) or (ap_ST_st39_fsm_38 = ap_CS_fsm) or (ap_ST_st40_fsm_39 = ap_CS_fsm) or (ap_ST_st41_fsm_40 = ap_CS_fsm))) then 
            indices_stride_size <= grp_sample_iterator_next_fu_211_indices_stride_size;
        elsif (((ap_ST_st21_fsm_20 = ap_CS_fsm) or ((ap_ST_st4_fsm_3 = ap_CS_fsm) and (tmp_i_11_reg_325 = ap_const_lv1_0)) or (ap_ST_st5_fsm_4 = ap_CS_fsm) or (ap_ST_st6_fsm_5 = ap_CS_fsm) or (ap_ST_st7_fsm_6 = ap_CS_fsm) or (ap_ST_st8_fsm_7 = ap_CS_fsm) or (ap_ST_st9_fsm_8 = ap_CS_fsm) or (ap_ST_st10_fsm_9 = ap_CS_fsm) or (ap_ST_st11_fsm_10 = ap_CS_fsm) or (ap_ST_st12_fsm_11 = ap_CS_fsm) or (ap_ST_st13_fsm_12 = ap_CS_fsm) or (ap_ST_st14_fsm_13 = ap_CS_fsm) or (ap_ST_st15_fsm_14 = ap_CS_fsm) or (ap_ST_st16_fsm_15 = ap_CS_fsm) or (ap_ST_st17_fsm_16 = ap_CS_fsm) or (ap_ST_st18_fsm_17 = ap_CS_fsm) or (ap_ST_st19_fsm_18 = ap_CS_fsm) or (ap_ST_st20_fsm_19 = ap_CS_fsm))) then 
            indices_stride_size <= grp_sample_iterator_get_offset_fu_194_indices_stride_size;
        else 
            indices_stride_size <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    nfa_finals_buckets_address <= grp_nfa_accept_sample_fu_178_nfa_finals_buckets_address;
    nfa_finals_buckets_dataout <= grp_nfa_accept_sample_fu_178_nfa_finals_buckets_dataout;
    nfa_finals_buckets_req_din <= grp_nfa_accept_sample_fu_178_nfa_finals_buckets_req_din;
    nfa_finals_buckets_req_write <= grp_nfa_accept_sample_fu_178_nfa_finals_buckets_req_write;
    nfa_finals_buckets_rsp_read <= grp_nfa_accept_sample_fu_178_nfa_finals_buckets_rsp_read;
    nfa_finals_buckets_size <= grp_nfa_accept_sample_fu_178_nfa_finals_buckets_size;
    nfa_forward_buckets_address <= grp_nfa_accept_sample_fu_178_nfa_forward_buckets_address;
    nfa_forward_buckets_dataout <= grp_nfa_accept_sample_fu_178_nfa_forward_buckets_dataout;
    nfa_forward_buckets_req_din <= grp_nfa_accept_sample_fu_178_nfa_forward_buckets_req_din;
    nfa_forward_buckets_req_write <= grp_nfa_accept_sample_fu_178_nfa_forward_buckets_req_write;
    nfa_forward_buckets_rsp_read <= grp_nfa_accept_sample_fu_178_nfa_forward_buckets_rsp_read;
    nfa_forward_buckets_size <= grp_nfa_accept_sample_fu_178_nfa_forward_buckets_size;
    nfa_initials_buckets_address <= grp_nfa_accept_sample_fu_178_nfa_initials_buckets_address;
    nfa_initials_buckets_dataout <= grp_nfa_accept_sample_fu_178_nfa_initials_buckets_dataout;
    nfa_initials_buckets_req_din <= grp_nfa_accept_sample_fu_178_nfa_initials_buckets_req_din;
    nfa_initials_buckets_req_write <= grp_nfa_accept_sample_fu_178_nfa_initials_buckets_req_write;
    nfa_initials_buckets_rsp_read <= grp_nfa_accept_sample_fu_178_nfa_initials_buckets_rsp_read;
    nfa_initials_buckets_size <= grp_nfa_accept_sample_fu_178_nfa_initials_buckets_size;
    or_cond_fu_247_p2 <= (r_reg_340 xor accept);
    sample_buffer_address <= grp_nfa_accept_sample_fu_178_sample_address;
    sample_buffer_dataout <= grp_nfa_accept_sample_fu_178_sample_dataout;
    sample_buffer_req_din <= grp_nfa_accept_sample_fu_178_sample_req_din;
    sample_buffer_req_write <= grp_nfa_accept_sample_fu_178_sample_req_write;
    sample_buffer_rsp_read <= grp_nfa_accept_sample_fu_178_sample_rsp_read;
    sample_buffer_size <= grp_nfa_accept_sample_fu_178_sample_size;
    stop_on_first_read_read_fu_104_p2 <= stop_on_first;
    tmp_i_10_fu_235_p2 <= "1" when (i_index_reg_146 = end_index) else "0";
    tmp_i_11_fu_240_p2 <= (tmp_i_reg_315 and tmp_i_10_reg_320);
    tmp_i_fu_230_p2 <= "1" when (i_sample_reg_156 = end_sample) else "0";
end behav;
