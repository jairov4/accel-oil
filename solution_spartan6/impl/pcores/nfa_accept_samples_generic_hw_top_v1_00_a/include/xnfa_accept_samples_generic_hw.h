// ==============================================================
// File generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2013.4
// Copyright (C) 2013 Xilinx Inc. All rights reserved.
// 
// ==============================================================

#ifndef XNFA_ACCEPT_SAMPLES_GENERIC_HW_H
#define XNFA_ACCEPT_SAMPLES_GENERIC_HW_H

#ifdef __cplusplus
extern "C" {
#endif

/***************************** Include Files *********************************/
#include "xil_types.h"
#include "xil_assert.h"
#include "xstatus.h"
#include "xil_io.h"
#include "xnfa_accept_samples_generic_hw_slv0.h"

/**************************** Type Definitions ******************************/
typedef struct {
    u16 DeviceId; // currently not used
    u32 Slv0_BaseAddress;
} XNfa_accept_samples_generic_hw_Config;

typedef struct {
    u32 Slv0_BaseAddress;
    u32 IsReady;
} XNfa_accept_samples_generic_hw;

/***************** Macros (Inline Functions) Definitions *********************/
#define XNfa_accept_samples_generic_hw_WriteReg(BaseAddress, RegOffset, Data) \
    Xil_Out32((BaseAddress) + (RegOffset), (u32)(Data))

#define XNfa_accept_samples_generic_hw_ReadReg(BaseAddress, RegOffset) \
    Xil_In32((BaseAddress) + (RegOffset))

/************************** Function Prototypes *****************************/
int XNfa_accept_samples_generic_hw_Initialize(XNfa_accept_samples_generic_hw *InstancePtr, XNfa_accept_samples_generic_hw_Config *ConfigPtr);

void XNfa_accept_samples_generic_hw_Start(XNfa_accept_samples_generic_hw *InstancePtr);
u32 XNfa_accept_samples_generic_hw_IsDone(XNfa_accept_samples_generic_hw *InstancePtr);
u32 XNfa_accept_samples_generic_hw_IsIdle(XNfa_accept_samples_generic_hw *InstancePtr);
u32 XNfa_accept_samples_generic_hw_IsReady(XNfa_accept_samples_generic_hw *InstancePtr);
void XNfa_accept_samples_generic_hw_EnableAutoRestart(XNfa_accept_samples_generic_hw *InstancePtr);
void XNfa_accept_samples_generic_hw_DisableAutoRestart(XNfa_accept_samples_generic_hw *InstancePtr);
u32 XNfa_accept_samples_generic_hw_GetReturn(XNfa_accept_samples_generic_hw *InstancePtr);

void XNfa_accept_samples_generic_hw_SetNfa_symbols(XNfa_accept_samples_generic_hw *InstancePtr, u32 Data);
u32 XNfa_accept_samples_generic_hw_GetNfa_symbols(XNfa_accept_samples_generic_hw *InstancePtr);
void XNfa_accept_samples_generic_hw_SetSample_buffer_length(XNfa_accept_samples_generic_hw *InstancePtr, u32 Data);
u32 XNfa_accept_samples_generic_hw_GetSample_buffer_length(XNfa_accept_samples_generic_hw *InstancePtr);
void XNfa_accept_samples_generic_hw_SetSample_length(XNfa_accept_samples_generic_hw *InstancePtr, u32 Data);
u32 XNfa_accept_samples_generic_hw_GetSample_length(XNfa_accept_samples_generic_hw *InstancePtr);
void XNfa_accept_samples_generic_hw_SetI_size(XNfa_accept_samples_generic_hw *InstancePtr, u32 Data);
u32 XNfa_accept_samples_generic_hw_GetI_size(XNfa_accept_samples_generic_hw *InstancePtr);
void XNfa_accept_samples_generic_hw_SetBegin_index(XNfa_accept_samples_generic_hw *InstancePtr, u32 Data);
u32 XNfa_accept_samples_generic_hw_GetBegin_index(XNfa_accept_samples_generic_hw *InstancePtr);
void XNfa_accept_samples_generic_hw_SetBegin_sample(XNfa_accept_samples_generic_hw *InstancePtr, u32 Data);
u32 XNfa_accept_samples_generic_hw_GetBegin_sample(XNfa_accept_samples_generic_hw *InstancePtr);
void XNfa_accept_samples_generic_hw_SetEnd_index(XNfa_accept_samples_generic_hw *InstancePtr, u32 Data);
u32 XNfa_accept_samples_generic_hw_GetEnd_index(XNfa_accept_samples_generic_hw *InstancePtr);
void XNfa_accept_samples_generic_hw_SetEnd_sample(XNfa_accept_samples_generic_hw *InstancePtr, u32 Data);
u32 XNfa_accept_samples_generic_hw_GetEnd_sample(XNfa_accept_samples_generic_hw *InstancePtr);
void XNfa_accept_samples_generic_hw_SetStop_on_first(XNfa_accept_samples_generic_hw *InstancePtr, u32 Data);
u32 XNfa_accept_samples_generic_hw_GetStop_on_first(XNfa_accept_samples_generic_hw *InstancePtr);
void XNfa_accept_samples_generic_hw_SetAccept(XNfa_accept_samples_generic_hw *InstancePtr, u32 Data);
u32 XNfa_accept_samples_generic_hw_GetAccept(XNfa_accept_samples_generic_hw *InstancePtr);

void XNfa_accept_samples_generic_hw_InterruptGlobalEnable(XNfa_accept_samples_generic_hw *InstancePtr);
void XNfa_accept_samples_generic_hw_InterruptGlobalDisable(XNfa_accept_samples_generic_hw *InstancePtr);
void XNfa_accept_samples_generic_hw_InterruptEnable(XNfa_accept_samples_generic_hw *InstancePtr, u32 Mask);
void XNfa_accept_samples_generic_hw_InterruptDisable(XNfa_accept_samples_generic_hw *InstancePtr, u32 Mask);
void XNfa_accept_samples_generic_hw_InterruptClear(XNfa_accept_samples_generic_hw *InstancePtr, u32 Mask);
u32 XNfa_accept_samples_generic_hw_InterruptGetEnabled(XNfa_accept_samples_generic_hw *InstancePtr);
u32 XNfa_accept_samples_generic_hw_InterruptGetStatus(XNfa_accept_samples_generic_hw *InstancePtr);

#ifdef __cplusplus
}
#endif

#endif
