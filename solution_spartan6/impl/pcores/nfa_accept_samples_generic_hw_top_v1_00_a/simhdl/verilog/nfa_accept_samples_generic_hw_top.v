// ==============================================================
// File generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2013.4
// Copyright (C) 2013 Xilinx Inc. All rights reserved.
// 
// ==============================================================

`timescale 1 ns / 1 ps
module nfa_accept_samples_generic_hw_top (
m_axi_nfa_initials_buckets_AWID,
m_axi_nfa_initials_buckets_AWADDR,
m_axi_nfa_initials_buckets_AWLEN,
m_axi_nfa_initials_buckets_AWSIZE,
m_axi_nfa_initials_buckets_AWBURST,
m_axi_nfa_initials_buckets_AWLOCK,
m_axi_nfa_initials_buckets_AWCACHE,
m_axi_nfa_initials_buckets_AWPROT,
m_axi_nfa_initials_buckets_AWQOS,
m_axi_nfa_initials_buckets_AWUSER,
m_axi_nfa_initials_buckets_AWVALID,
m_axi_nfa_initials_buckets_AWREADY,
m_axi_nfa_initials_buckets_WDATA,
m_axi_nfa_initials_buckets_WSTRB,
m_axi_nfa_initials_buckets_WLAST,
m_axi_nfa_initials_buckets_WUSER,
m_axi_nfa_initials_buckets_WVALID,
m_axi_nfa_initials_buckets_WREADY,
m_axi_nfa_initials_buckets_BID,
m_axi_nfa_initials_buckets_BRESP,
m_axi_nfa_initials_buckets_BUSER,
m_axi_nfa_initials_buckets_BVALID,
m_axi_nfa_initials_buckets_BREADY,
m_axi_nfa_initials_buckets_ARID,
m_axi_nfa_initials_buckets_ARADDR,
m_axi_nfa_initials_buckets_ARLEN,
m_axi_nfa_initials_buckets_ARSIZE,
m_axi_nfa_initials_buckets_ARBURST,
m_axi_nfa_initials_buckets_ARLOCK,
m_axi_nfa_initials_buckets_ARCACHE,
m_axi_nfa_initials_buckets_ARPROT,
m_axi_nfa_initials_buckets_ARQOS,
m_axi_nfa_initials_buckets_ARUSER,
m_axi_nfa_initials_buckets_ARVALID,
m_axi_nfa_initials_buckets_ARREADY,
m_axi_nfa_initials_buckets_RID,
m_axi_nfa_initials_buckets_RDATA,
m_axi_nfa_initials_buckets_RRESP,
m_axi_nfa_initials_buckets_RLAST,
m_axi_nfa_initials_buckets_RUSER,
m_axi_nfa_initials_buckets_RVALID,
m_axi_nfa_initials_buckets_RREADY,
m_axi_nfa_finals_buckets_AWID,
m_axi_nfa_finals_buckets_AWADDR,
m_axi_nfa_finals_buckets_AWLEN,
m_axi_nfa_finals_buckets_AWSIZE,
m_axi_nfa_finals_buckets_AWBURST,
m_axi_nfa_finals_buckets_AWLOCK,
m_axi_nfa_finals_buckets_AWCACHE,
m_axi_nfa_finals_buckets_AWPROT,
m_axi_nfa_finals_buckets_AWQOS,
m_axi_nfa_finals_buckets_AWUSER,
m_axi_nfa_finals_buckets_AWVALID,
m_axi_nfa_finals_buckets_AWREADY,
m_axi_nfa_finals_buckets_WDATA,
m_axi_nfa_finals_buckets_WSTRB,
m_axi_nfa_finals_buckets_WLAST,
m_axi_nfa_finals_buckets_WUSER,
m_axi_nfa_finals_buckets_WVALID,
m_axi_nfa_finals_buckets_WREADY,
m_axi_nfa_finals_buckets_BID,
m_axi_nfa_finals_buckets_BRESP,
m_axi_nfa_finals_buckets_BUSER,
m_axi_nfa_finals_buckets_BVALID,
m_axi_nfa_finals_buckets_BREADY,
m_axi_nfa_finals_buckets_ARID,
m_axi_nfa_finals_buckets_ARADDR,
m_axi_nfa_finals_buckets_ARLEN,
m_axi_nfa_finals_buckets_ARSIZE,
m_axi_nfa_finals_buckets_ARBURST,
m_axi_nfa_finals_buckets_ARLOCK,
m_axi_nfa_finals_buckets_ARCACHE,
m_axi_nfa_finals_buckets_ARPROT,
m_axi_nfa_finals_buckets_ARQOS,
m_axi_nfa_finals_buckets_ARUSER,
m_axi_nfa_finals_buckets_ARVALID,
m_axi_nfa_finals_buckets_ARREADY,
m_axi_nfa_finals_buckets_RID,
m_axi_nfa_finals_buckets_RDATA,
m_axi_nfa_finals_buckets_RRESP,
m_axi_nfa_finals_buckets_RLAST,
m_axi_nfa_finals_buckets_RUSER,
m_axi_nfa_finals_buckets_RVALID,
m_axi_nfa_finals_buckets_RREADY,
m_axi_nfa_forward_buckets_AWID,
m_axi_nfa_forward_buckets_AWADDR,
m_axi_nfa_forward_buckets_AWLEN,
m_axi_nfa_forward_buckets_AWSIZE,
m_axi_nfa_forward_buckets_AWBURST,
m_axi_nfa_forward_buckets_AWLOCK,
m_axi_nfa_forward_buckets_AWCACHE,
m_axi_nfa_forward_buckets_AWPROT,
m_axi_nfa_forward_buckets_AWQOS,
m_axi_nfa_forward_buckets_AWUSER,
m_axi_nfa_forward_buckets_AWVALID,
m_axi_nfa_forward_buckets_AWREADY,
m_axi_nfa_forward_buckets_WDATA,
m_axi_nfa_forward_buckets_WSTRB,
m_axi_nfa_forward_buckets_WLAST,
m_axi_nfa_forward_buckets_WUSER,
m_axi_nfa_forward_buckets_WVALID,
m_axi_nfa_forward_buckets_WREADY,
m_axi_nfa_forward_buckets_BID,
m_axi_nfa_forward_buckets_BRESP,
m_axi_nfa_forward_buckets_BUSER,
m_axi_nfa_forward_buckets_BVALID,
m_axi_nfa_forward_buckets_BREADY,
m_axi_nfa_forward_buckets_ARID,
m_axi_nfa_forward_buckets_ARADDR,
m_axi_nfa_forward_buckets_ARLEN,
m_axi_nfa_forward_buckets_ARSIZE,
m_axi_nfa_forward_buckets_ARBURST,
m_axi_nfa_forward_buckets_ARLOCK,
m_axi_nfa_forward_buckets_ARCACHE,
m_axi_nfa_forward_buckets_ARPROT,
m_axi_nfa_forward_buckets_ARQOS,
m_axi_nfa_forward_buckets_ARUSER,
m_axi_nfa_forward_buckets_ARVALID,
m_axi_nfa_forward_buckets_ARREADY,
m_axi_nfa_forward_buckets_RID,
m_axi_nfa_forward_buckets_RDATA,
m_axi_nfa_forward_buckets_RRESP,
m_axi_nfa_forward_buckets_RLAST,
m_axi_nfa_forward_buckets_RUSER,
m_axi_nfa_forward_buckets_RVALID,
m_axi_nfa_forward_buckets_RREADY,
m_axi_sample_buffer_AWID,
m_axi_sample_buffer_AWADDR,
m_axi_sample_buffer_AWLEN,
m_axi_sample_buffer_AWSIZE,
m_axi_sample_buffer_AWBURST,
m_axi_sample_buffer_AWLOCK,
m_axi_sample_buffer_AWCACHE,
m_axi_sample_buffer_AWPROT,
m_axi_sample_buffer_AWQOS,
m_axi_sample_buffer_AWUSER,
m_axi_sample_buffer_AWVALID,
m_axi_sample_buffer_AWREADY,
m_axi_sample_buffer_WDATA,
m_axi_sample_buffer_WSTRB,
m_axi_sample_buffer_WLAST,
m_axi_sample_buffer_WUSER,
m_axi_sample_buffer_WVALID,
m_axi_sample_buffer_WREADY,
m_axi_sample_buffer_BID,
m_axi_sample_buffer_BRESP,
m_axi_sample_buffer_BUSER,
m_axi_sample_buffer_BVALID,
m_axi_sample_buffer_BREADY,
m_axi_sample_buffer_ARID,
m_axi_sample_buffer_ARADDR,
m_axi_sample_buffer_ARLEN,
m_axi_sample_buffer_ARSIZE,
m_axi_sample_buffer_ARBURST,
m_axi_sample_buffer_ARLOCK,
m_axi_sample_buffer_ARCACHE,
m_axi_sample_buffer_ARPROT,
m_axi_sample_buffer_ARQOS,
m_axi_sample_buffer_ARUSER,
m_axi_sample_buffer_ARVALID,
m_axi_sample_buffer_ARREADY,
m_axi_sample_buffer_RID,
m_axi_sample_buffer_RDATA,
m_axi_sample_buffer_RRESP,
m_axi_sample_buffer_RLAST,
m_axi_sample_buffer_RUSER,
m_axi_sample_buffer_RVALID,
m_axi_sample_buffer_RREADY,
m_axi_indices_begin_AWID,
m_axi_indices_begin_AWADDR,
m_axi_indices_begin_AWLEN,
m_axi_indices_begin_AWSIZE,
m_axi_indices_begin_AWBURST,
m_axi_indices_begin_AWLOCK,
m_axi_indices_begin_AWCACHE,
m_axi_indices_begin_AWPROT,
m_axi_indices_begin_AWQOS,
m_axi_indices_begin_AWUSER,
m_axi_indices_begin_AWVALID,
m_axi_indices_begin_AWREADY,
m_axi_indices_begin_WDATA,
m_axi_indices_begin_WSTRB,
m_axi_indices_begin_WLAST,
m_axi_indices_begin_WUSER,
m_axi_indices_begin_WVALID,
m_axi_indices_begin_WREADY,
m_axi_indices_begin_BID,
m_axi_indices_begin_BRESP,
m_axi_indices_begin_BUSER,
m_axi_indices_begin_BVALID,
m_axi_indices_begin_BREADY,
m_axi_indices_begin_ARID,
m_axi_indices_begin_ARADDR,
m_axi_indices_begin_ARLEN,
m_axi_indices_begin_ARSIZE,
m_axi_indices_begin_ARBURST,
m_axi_indices_begin_ARLOCK,
m_axi_indices_begin_ARCACHE,
m_axi_indices_begin_ARPROT,
m_axi_indices_begin_ARQOS,
m_axi_indices_begin_ARUSER,
m_axi_indices_begin_ARVALID,
m_axi_indices_begin_ARREADY,
m_axi_indices_begin_RID,
m_axi_indices_begin_RDATA,
m_axi_indices_begin_RRESP,
m_axi_indices_begin_RLAST,
m_axi_indices_begin_RUSER,
m_axi_indices_begin_RVALID,
m_axi_indices_begin_RREADY,
m_axi_indices_samples_AWID,
m_axi_indices_samples_AWADDR,
m_axi_indices_samples_AWLEN,
m_axi_indices_samples_AWSIZE,
m_axi_indices_samples_AWBURST,
m_axi_indices_samples_AWLOCK,
m_axi_indices_samples_AWCACHE,
m_axi_indices_samples_AWPROT,
m_axi_indices_samples_AWQOS,
m_axi_indices_samples_AWUSER,
m_axi_indices_samples_AWVALID,
m_axi_indices_samples_AWREADY,
m_axi_indices_samples_WDATA,
m_axi_indices_samples_WSTRB,
m_axi_indices_samples_WLAST,
m_axi_indices_samples_WUSER,
m_axi_indices_samples_WVALID,
m_axi_indices_samples_WREADY,
m_axi_indices_samples_BID,
m_axi_indices_samples_BRESP,
m_axi_indices_samples_BUSER,
m_axi_indices_samples_BVALID,
m_axi_indices_samples_BREADY,
m_axi_indices_samples_ARID,
m_axi_indices_samples_ARADDR,
m_axi_indices_samples_ARLEN,
m_axi_indices_samples_ARSIZE,
m_axi_indices_samples_ARBURST,
m_axi_indices_samples_ARLOCK,
m_axi_indices_samples_ARCACHE,
m_axi_indices_samples_ARPROT,
m_axi_indices_samples_ARQOS,
m_axi_indices_samples_ARUSER,
m_axi_indices_samples_ARVALID,
m_axi_indices_samples_ARREADY,
m_axi_indices_samples_RID,
m_axi_indices_samples_RDATA,
m_axi_indices_samples_RRESP,
m_axi_indices_samples_RLAST,
m_axi_indices_samples_RUSER,
m_axi_indices_samples_RVALID,
m_axi_indices_samples_RREADY,
m_axi_indices_stride_AWID,
m_axi_indices_stride_AWADDR,
m_axi_indices_stride_AWLEN,
m_axi_indices_stride_AWSIZE,
m_axi_indices_stride_AWBURST,
m_axi_indices_stride_AWLOCK,
m_axi_indices_stride_AWCACHE,
m_axi_indices_stride_AWPROT,
m_axi_indices_stride_AWQOS,
m_axi_indices_stride_AWUSER,
m_axi_indices_stride_AWVALID,
m_axi_indices_stride_AWREADY,
m_axi_indices_stride_WDATA,
m_axi_indices_stride_WSTRB,
m_axi_indices_stride_WLAST,
m_axi_indices_stride_WUSER,
m_axi_indices_stride_WVALID,
m_axi_indices_stride_WREADY,
m_axi_indices_stride_BID,
m_axi_indices_stride_BRESP,
m_axi_indices_stride_BUSER,
m_axi_indices_stride_BVALID,
m_axi_indices_stride_BREADY,
m_axi_indices_stride_ARID,
m_axi_indices_stride_ARADDR,
m_axi_indices_stride_ARLEN,
m_axi_indices_stride_ARSIZE,
m_axi_indices_stride_ARBURST,
m_axi_indices_stride_ARLOCK,
m_axi_indices_stride_ARCACHE,
m_axi_indices_stride_ARPROT,
m_axi_indices_stride_ARQOS,
m_axi_indices_stride_ARUSER,
m_axi_indices_stride_ARVALID,
m_axi_indices_stride_ARREADY,
m_axi_indices_stride_RID,
m_axi_indices_stride_RDATA,
m_axi_indices_stride_RRESP,
m_axi_indices_stride_RLAST,
m_axi_indices_stride_RUSER,
m_axi_indices_stride_RVALID,
m_axi_indices_stride_RREADY,
s_axi_slv0_AWADDR,
s_axi_slv0_AWVALID,
s_axi_slv0_AWREADY,
s_axi_slv0_WDATA,
s_axi_slv0_WSTRB,
s_axi_slv0_WVALID,
s_axi_slv0_WREADY,
s_axi_slv0_BRESP,
s_axi_slv0_BVALID,
s_axi_slv0_BREADY,
s_axi_slv0_ARADDR,
s_axi_slv0_ARVALID,
s_axi_slv0_ARREADY,
s_axi_slv0_RDATA,
s_axi_slv0_RRESP,
s_axi_slv0_RVALID,
s_axi_slv0_RREADY,
interrupt,
aresetn,
aclk
);

parameter C_M_AXI_NFA_INITIALS_BUCKETS_ID_WIDTH = 1;
parameter C_M_AXI_NFA_INITIALS_BUCKETS_ADDR_WIDTH = 32;
parameter C_M_AXI_NFA_INITIALS_BUCKETS_DATA_WIDTH = 32;
parameter C_M_AXI_NFA_INITIALS_BUCKETS_AWUSER_WIDTH = 1;
parameter C_M_AXI_NFA_INITIALS_BUCKETS_ARUSER_WIDTH = 1;
parameter C_M_AXI_NFA_INITIALS_BUCKETS_WUSER_WIDTH = 1;
parameter C_M_AXI_NFA_INITIALS_BUCKETS_RUSER_WIDTH = 1;
parameter C_M_AXI_NFA_INITIALS_BUCKETS_BUSER_WIDTH = 1;
parameter C_M_AXI_NFA_INITIALS_BUCKETS_USER_DATA_WIDTH = 32;
parameter C_M_AXI_NFA_INITIALS_BUCKETS_TARGET_ADDR = 32'h00000000;
parameter C_M_AXI_NFA_INITIALS_BUCKETS_USER_VALUE = 1'b0;
parameter C_M_AXI_NFA_INITIALS_BUCKETS_PROT_VALUE = 3'b010;
parameter C_M_AXI_NFA_INITIALS_BUCKETS_CACHE_VALUE = 4'b0000;
parameter C_M_AXI_NFA_FINALS_BUCKETS_ID_WIDTH = 1;
parameter C_M_AXI_NFA_FINALS_BUCKETS_ADDR_WIDTH = 32;
parameter C_M_AXI_NFA_FINALS_BUCKETS_DATA_WIDTH = 32;
parameter C_M_AXI_NFA_FINALS_BUCKETS_AWUSER_WIDTH = 1;
parameter C_M_AXI_NFA_FINALS_BUCKETS_ARUSER_WIDTH = 1;
parameter C_M_AXI_NFA_FINALS_BUCKETS_WUSER_WIDTH = 1;
parameter C_M_AXI_NFA_FINALS_BUCKETS_RUSER_WIDTH = 1;
parameter C_M_AXI_NFA_FINALS_BUCKETS_BUSER_WIDTH = 1;
parameter C_M_AXI_NFA_FINALS_BUCKETS_USER_DATA_WIDTH = 32;
parameter C_M_AXI_NFA_FINALS_BUCKETS_TARGET_ADDR = 32'h00000000;
parameter C_M_AXI_NFA_FINALS_BUCKETS_USER_VALUE = 1'b0;
parameter C_M_AXI_NFA_FINALS_BUCKETS_PROT_VALUE = 3'b010;
parameter C_M_AXI_NFA_FINALS_BUCKETS_CACHE_VALUE = 4'b0000;
parameter C_M_AXI_NFA_FORWARD_BUCKETS_ID_WIDTH = 1;
parameter C_M_AXI_NFA_FORWARD_BUCKETS_ADDR_WIDTH = 32;
parameter C_M_AXI_NFA_FORWARD_BUCKETS_DATA_WIDTH = 32;
parameter C_M_AXI_NFA_FORWARD_BUCKETS_AWUSER_WIDTH = 1;
parameter C_M_AXI_NFA_FORWARD_BUCKETS_ARUSER_WIDTH = 1;
parameter C_M_AXI_NFA_FORWARD_BUCKETS_WUSER_WIDTH = 1;
parameter C_M_AXI_NFA_FORWARD_BUCKETS_RUSER_WIDTH = 1;
parameter C_M_AXI_NFA_FORWARD_BUCKETS_BUSER_WIDTH = 1;
parameter C_M_AXI_NFA_FORWARD_BUCKETS_USER_DATA_WIDTH = 32;
parameter C_M_AXI_NFA_FORWARD_BUCKETS_TARGET_ADDR = 32'h00000000;
parameter C_M_AXI_NFA_FORWARD_BUCKETS_USER_VALUE = 1'b0;
parameter C_M_AXI_NFA_FORWARD_BUCKETS_PROT_VALUE = 3'b010;
parameter C_M_AXI_NFA_FORWARD_BUCKETS_CACHE_VALUE = 4'b0000;
parameter C_M_AXI_SAMPLE_BUFFER_ID_WIDTH = 1;
parameter C_M_AXI_SAMPLE_BUFFER_ADDR_WIDTH = 32;
parameter C_M_AXI_SAMPLE_BUFFER_DATA_WIDTH = 32;
parameter C_M_AXI_SAMPLE_BUFFER_AWUSER_WIDTH = 1;
parameter C_M_AXI_SAMPLE_BUFFER_ARUSER_WIDTH = 1;
parameter C_M_AXI_SAMPLE_BUFFER_WUSER_WIDTH = 1;
parameter C_M_AXI_SAMPLE_BUFFER_RUSER_WIDTH = 1;
parameter C_M_AXI_SAMPLE_BUFFER_BUSER_WIDTH = 1;
parameter C_M_AXI_SAMPLE_BUFFER_USER_DATA_WIDTH = 8;
parameter C_M_AXI_SAMPLE_BUFFER_TARGET_ADDR = 32'h00000000;
parameter C_M_AXI_SAMPLE_BUFFER_USER_VALUE = 1'b0;
parameter C_M_AXI_SAMPLE_BUFFER_PROT_VALUE = 3'b010;
parameter C_M_AXI_SAMPLE_BUFFER_CACHE_VALUE = 4'b0000;
parameter C_M_AXI_INDICES_BEGIN_ID_WIDTH = 1;
parameter C_M_AXI_INDICES_BEGIN_ADDR_WIDTH = 32;
parameter C_M_AXI_INDICES_BEGIN_DATA_WIDTH = 32;
parameter C_M_AXI_INDICES_BEGIN_AWUSER_WIDTH = 1;
parameter C_M_AXI_INDICES_BEGIN_ARUSER_WIDTH = 1;
parameter C_M_AXI_INDICES_BEGIN_WUSER_WIDTH = 1;
parameter C_M_AXI_INDICES_BEGIN_RUSER_WIDTH = 1;
parameter C_M_AXI_INDICES_BEGIN_BUSER_WIDTH = 1;
parameter C_M_AXI_INDICES_BEGIN_USER_DATA_WIDTH = 32;
parameter C_M_AXI_INDICES_BEGIN_TARGET_ADDR = 32'h00000000;
parameter C_M_AXI_INDICES_BEGIN_USER_VALUE = 1'b0;
parameter C_M_AXI_INDICES_BEGIN_PROT_VALUE = 3'b010;
parameter C_M_AXI_INDICES_BEGIN_CACHE_VALUE = 4'b0000;
parameter C_M_AXI_INDICES_SAMPLES_ID_WIDTH = 1;
parameter C_M_AXI_INDICES_SAMPLES_ADDR_WIDTH = 32;
parameter C_M_AXI_INDICES_SAMPLES_DATA_WIDTH = 32;
parameter C_M_AXI_INDICES_SAMPLES_AWUSER_WIDTH = 1;
parameter C_M_AXI_INDICES_SAMPLES_ARUSER_WIDTH = 1;
parameter C_M_AXI_INDICES_SAMPLES_WUSER_WIDTH = 1;
parameter C_M_AXI_INDICES_SAMPLES_RUSER_WIDTH = 1;
parameter C_M_AXI_INDICES_SAMPLES_BUSER_WIDTH = 1;
parameter C_M_AXI_INDICES_SAMPLES_USER_DATA_WIDTH = 16;
parameter C_M_AXI_INDICES_SAMPLES_TARGET_ADDR = 32'h00000000;
parameter C_M_AXI_INDICES_SAMPLES_USER_VALUE = 1'b0;
parameter C_M_AXI_INDICES_SAMPLES_PROT_VALUE = 3'b010;
parameter C_M_AXI_INDICES_SAMPLES_CACHE_VALUE = 4'b0000;
parameter C_M_AXI_INDICES_STRIDE_ID_WIDTH = 1;
parameter C_M_AXI_INDICES_STRIDE_ADDR_WIDTH = 32;
parameter C_M_AXI_INDICES_STRIDE_DATA_WIDTH = 32;
parameter C_M_AXI_INDICES_STRIDE_AWUSER_WIDTH = 1;
parameter C_M_AXI_INDICES_STRIDE_ARUSER_WIDTH = 1;
parameter C_M_AXI_INDICES_STRIDE_WUSER_WIDTH = 1;
parameter C_M_AXI_INDICES_STRIDE_RUSER_WIDTH = 1;
parameter C_M_AXI_INDICES_STRIDE_BUSER_WIDTH = 1;
parameter C_M_AXI_INDICES_STRIDE_USER_DATA_WIDTH = 8;
parameter C_M_AXI_INDICES_STRIDE_TARGET_ADDR = 32'h00000000;
parameter C_M_AXI_INDICES_STRIDE_USER_VALUE = 1'b0;
parameter C_M_AXI_INDICES_STRIDE_PROT_VALUE = 3'b010;
parameter C_M_AXI_INDICES_STRIDE_CACHE_VALUE = 4'b0000;
parameter C_S_AXI_SLV0_ADDR_WIDTH = 7;
parameter C_S_AXI_SLV0_DATA_WIDTH = 32;
parameter RESET_ACTIVE_LOW = 1;

output [C_M_AXI_NFA_INITIALS_BUCKETS_ID_WIDTH - 1:0] m_axi_nfa_initials_buckets_AWID ;
output [C_M_AXI_NFA_INITIALS_BUCKETS_ADDR_WIDTH - 1:0] m_axi_nfa_initials_buckets_AWADDR ;
output [8 - 1:0] m_axi_nfa_initials_buckets_AWLEN ;
output [3 - 1:0] m_axi_nfa_initials_buckets_AWSIZE ;
output [2 - 1:0] m_axi_nfa_initials_buckets_AWBURST ;
output [2 - 1:0] m_axi_nfa_initials_buckets_AWLOCK ;
output [4 - 1:0] m_axi_nfa_initials_buckets_AWCACHE ;
output [3 - 1:0] m_axi_nfa_initials_buckets_AWPROT ;
output [4 - 1:0] m_axi_nfa_initials_buckets_AWQOS ;
output [C_M_AXI_NFA_INITIALS_BUCKETS_AWUSER_WIDTH - 1:0] m_axi_nfa_initials_buckets_AWUSER ;
output m_axi_nfa_initials_buckets_AWVALID ;
input m_axi_nfa_initials_buckets_AWREADY ;
output [C_M_AXI_NFA_INITIALS_BUCKETS_DATA_WIDTH - 1:0] m_axi_nfa_initials_buckets_WDATA ;
output [C_M_AXI_NFA_INITIALS_BUCKETS_DATA_WIDTH/8 - 1:0] m_axi_nfa_initials_buckets_WSTRB ;
output m_axi_nfa_initials_buckets_WLAST ;
output [C_M_AXI_NFA_INITIALS_BUCKETS_WUSER_WIDTH - 1:0] m_axi_nfa_initials_buckets_WUSER ;
output m_axi_nfa_initials_buckets_WVALID ;
input m_axi_nfa_initials_buckets_WREADY ;
input [C_M_AXI_NFA_INITIALS_BUCKETS_ID_WIDTH - 1:0] m_axi_nfa_initials_buckets_BID ;
input [2 - 1:0] m_axi_nfa_initials_buckets_BRESP ;
input [C_M_AXI_NFA_INITIALS_BUCKETS_BUSER_WIDTH - 1:0] m_axi_nfa_initials_buckets_BUSER ;
input m_axi_nfa_initials_buckets_BVALID ;
output m_axi_nfa_initials_buckets_BREADY ;
output [C_M_AXI_NFA_INITIALS_BUCKETS_ID_WIDTH - 1:0] m_axi_nfa_initials_buckets_ARID ;
output [C_M_AXI_NFA_INITIALS_BUCKETS_ADDR_WIDTH - 1:0] m_axi_nfa_initials_buckets_ARADDR ;
output [8 - 1:0] m_axi_nfa_initials_buckets_ARLEN ;
output [3 - 1:0] m_axi_nfa_initials_buckets_ARSIZE ;
output [2 - 1:0] m_axi_nfa_initials_buckets_ARBURST ;
output [2 - 1:0] m_axi_nfa_initials_buckets_ARLOCK ;
output [4 - 1:0] m_axi_nfa_initials_buckets_ARCACHE ;
output [3 - 1:0] m_axi_nfa_initials_buckets_ARPROT ;
output [4 - 1:0] m_axi_nfa_initials_buckets_ARQOS ;
output [C_M_AXI_NFA_INITIALS_BUCKETS_ARUSER_WIDTH - 1:0] m_axi_nfa_initials_buckets_ARUSER ;
output m_axi_nfa_initials_buckets_ARVALID ;
input m_axi_nfa_initials_buckets_ARREADY ;
input [C_M_AXI_NFA_INITIALS_BUCKETS_ID_WIDTH - 1:0] m_axi_nfa_initials_buckets_RID ;
input [C_M_AXI_NFA_INITIALS_BUCKETS_DATA_WIDTH - 1:0] m_axi_nfa_initials_buckets_RDATA ;
input [2 - 1:0] m_axi_nfa_initials_buckets_RRESP ;
input m_axi_nfa_initials_buckets_RLAST ;
input [C_M_AXI_NFA_INITIALS_BUCKETS_RUSER_WIDTH - 1:0] m_axi_nfa_initials_buckets_RUSER ;
input m_axi_nfa_initials_buckets_RVALID ;
output m_axi_nfa_initials_buckets_RREADY ;


output [C_M_AXI_NFA_FINALS_BUCKETS_ID_WIDTH - 1:0] m_axi_nfa_finals_buckets_AWID ;
output [C_M_AXI_NFA_FINALS_BUCKETS_ADDR_WIDTH - 1:0] m_axi_nfa_finals_buckets_AWADDR ;
output [8 - 1:0] m_axi_nfa_finals_buckets_AWLEN ;
output [3 - 1:0] m_axi_nfa_finals_buckets_AWSIZE ;
output [2 - 1:0] m_axi_nfa_finals_buckets_AWBURST ;
output [2 - 1:0] m_axi_nfa_finals_buckets_AWLOCK ;
output [4 - 1:0] m_axi_nfa_finals_buckets_AWCACHE ;
output [3 - 1:0] m_axi_nfa_finals_buckets_AWPROT ;
output [4 - 1:0] m_axi_nfa_finals_buckets_AWQOS ;
output [C_M_AXI_NFA_FINALS_BUCKETS_AWUSER_WIDTH - 1:0] m_axi_nfa_finals_buckets_AWUSER ;
output m_axi_nfa_finals_buckets_AWVALID ;
input m_axi_nfa_finals_buckets_AWREADY ;
output [C_M_AXI_NFA_FINALS_BUCKETS_DATA_WIDTH - 1:0] m_axi_nfa_finals_buckets_WDATA ;
output [C_M_AXI_NFA_FINALS_BUCKETS_DATA_WIDTH/8 - 1:0] m_axi_nfa_finals_buckets_WSTRB ;
output m_axi_nfa_finals_buckets_WLAST ;
output [C_M_AXI_NFA_FINALS_BUCKETS_WUSER_WIDTH - 1:0] m_axi_nfa_finals_buckets_WUSER ;
output m_axi_nfa_finals_buckets_WVALID ;
input m_axi_nfa_finals_buckets_WREADY ;
input [C_M_AXI_NFA_FINALS_BUCKETS_ID_WIDTH - 1:0] m_axi_nfa_finals_buckets_BID ;
input [2 - 1:0] m_axi_nfa_finals_buckets_BRESP ;
input [C_M_AXI_NFA_FINALS_BUCKETS_BUSER_WIDTH - 1:0] m_axi_nfa_finals_buckets_BUSER ;
input m_axi_nfa_finals_buckets_BVALID ;
output m_axi_nfa_finals_buckets_BREADY ;
output [C_M_AXI_NFA_FINALS_BUCKETS_ID_WIDTH - 1:0] m_axi_nfa_finals_buckets_ARID ;
output [C_M_AXI_NFA_FINALS_BUCKETS_ADDR_WIDTH - 1:0] m_axi_nfa_finals_buckets_ARADDR ;
output [8 - 1:0] m_axi_nfa_finals_buckets_ARLEN ;
output [3 - 1:0] m_axi_nfa_finals_buckets_ARSIZE ;
output [2 - 1:0] m_axi_nfa_finals_buckets_ARBURST ;
output [2 - 1:0] m_axi_nfa_finals_buckets_ARLOCK ;
output [4 - 1:0] m_axi_nfa_finals_buckets_ARCACHE ;
output [3 - 1:0] m_axi_nfa_finals_buckets_ARPROT ;
output [4 - 1:0] m_axi_nfa_finals_buckets_ARQOS ;
output [C_M_AXI_NFA_FINALS_BUCKETS_ARUSER_WIDTH - 1:0] m_axi_nfa_finals_buckets_ARUSER ;
output m_axi_nfa_finals_buckets_ARVALID ;
input m_axi_nfa_finals_buckets_ARREADY ;
input [C_M_AXI_NFA_FINALS_BUCKETS_ID_WIDTH - 1:0] m_axi_nfa_finals_buckets_RID ;
input [C_M_AXI_NFA_FINALS_BUCKETS_DATA_WIDTH - 1:0] m_axi_nfa_finals_buckets_RDATA ;
input [2 - 1:0] m_axi_nfa_finals_buckets_RRESP ;
input m_axi_nfa_finals_buckets_RLAST ;
input [C_M_AXI_NFA_FINALS_BUCKETS_RUSER_WIDTH - 1:0] m_axi_nfa_finals_buckets_RUSER ;
input m_axi_nfa_finals_buckets_RVALID ;
output m_axi_nfa_finals_buckets_RREADY ;


output [C_M_AXI_NFA_FORWARD_BUCKETS_ID_WIDTH - 1:0] m_axi_nfa_forward_buckets_AWID ;
output [C_M_AXI_NFA_FORWARD_BUCKETS_ADDR_WIDTH - 1:0] m_axi_nfa_forward_buckets_AWADDR ;
output [8 - 1:0] m_axi_nfa_forward_buckets_AWLEN ;
output [3 - 1:0] m_axi_nfa_forward_buckets_AWSIZE ;
output [2 - 1:0] m_axi_nfa_forward_buckets_AWBURST ;
output [2 - 1:0] m_axi_nfa_forward_buckets_AWLOCK ;
output [4 - 1:0] m_axi_nfa_forward_buckets_AWCACHE ;
output [3 - 1:0] m_axi_nfa_forward_buckets_AWPROT ;
output [4 - 1:0] m_axi_nfa_forward_buckets_AWQOS ;
output [C_M_AXI_NFA_FORWARD_BUCKETS_AWUSER_WIDTH - 1:0] m_axi_nfa_forward_buckets_AWUSER ;
output m_axi_nfa_forward_buckets_AWVALID ;
input m_axi_nfa_forward_buckets_AWREADY ;
output [C_M_AXI_NFA_FORWARD_BUCKETS_DATA_WIDTH - 1:0] m_axi_nfa_forward_buckets_WDATA ;
output [C_M_AXI_NFA_FORWARD_BUCKETS_DATA_WIDTH/8 - 1:0] m_axi_nfa_forward_buckets_WSTRB ;
output m_axi_nfa_forward_buckets_WLAST ;
output [C_M_AXI_NFA_FORWARD_BUCKETS_WUSER_WIDTH - 1:0] m_axi_nfa_forward_buckets_WUSER ;
output m_axi_nfa_forward_buckets_WVALID ;
input m_axi_nfa_forward_buckets_WREADY ;
input [C_M_AXI_NFA_FORWARD_BUCKETS_ID_WIDTH - 1:0] m_axi_nfa_forward_buckets_BID ;
input [2 - 1:0] m_axi_nfa_forward_buckets_BRESP ;
input [C_M_AXI_NFA_FORWARD_BUCKETS_BUSER_WIDTH - 1:0] m_axi_nfa_forward_buckets_BUSER ;
input m_axi_nfa_forward_buckets_BVALID ;
output m_axi_nfa_forward_buckets_BREADY ;
output [C_M_AXI_NFA_FORWARD_BUCKETS_ID_WIDTH - 1:0] m_axi_nfa_forward_buckets_ARID ;
output [C_M_AXI_NFA_FORWARD_BUCKETS_ADDR_WIDTH - 1:0] m_axi_nfa_forward_buckets_ARADDR ;
output [8 - 1:0] m_axi_nfa_forward_buckets_ARLEN ;
output [3 - 1:0] m_axi_nfa_forward_buckets_ARSIZE ;
output [2 - 1:0] m_axi_nfa_forward_buckets_ARBURST ;
output [2 - 1:0] m_axi_nfa_forward_buckets_ARLOCK ;
output [4 - 1:0] m_axi_nfa_forward_buckets_ARCACHE ;
output [3 - 1:0] m_axi_nfa_forward_buckets_ARPROT ;
output [4 - 1:0] m_axi_nfa_forward_buckets_ARQOS ;
output [C_M_AXI_NFA_FORWARD_BUCKETS_ARUSER_WIDTH - 1:0] m_axi_nfa_forward_buckets_ARUSER ;
output m_axi_nfa_forward_buckets_ARVALID ;
input m_axi_nfa_forward_buckets_ARREADY ;
input [C_M_AXI_NFA_FORWARD_BUCKETS_ID_WIDTH - 1:0] m_axi_nfa_forward_buckets_RID ;
input [C_M_AXI_NFA_FORWARD_BUCKETS_DATA_WIDTH - 1:0] m_axi_nfa_forward_buckets_RDATA ;
input [2 - 1:0] m_axi_nfa_forward_buckets_RRESP ;
input m_axi_nfa_forward_buckets_RLAST ;
input [C_M_AXI_NFA_FORWARD_BUCKETS_RUSER_WIDTH - 1:0] m_axi_nfa_forward_buckets_RUSER ;
input m_axi_nfa_forward_buckets_RVALID ;
output m_axi_nfa_forward_buckets_RREADY ;


output [C_M_AXI_SAMPLE_BUFFER_ID_WIDTH - 1:0] m_axi_sample_buffer_AWID ;
output [C_M_AXI_SAMPLE_BUFFER_ADDR_WIDTH - 1:0] m_axi_sample_buffer_AWADDR ;
output [8 - 1:0] m_axi_sample_buffer_AWLEN ;
output [3 - 1:0] m_axi_sample_buffer_AWSIZE ;
output [2 - 1:0] m_axi_sample_buffer_AWBURST ;
output [2 - 1:0] m_axi_sample_buffer_AWLOCK ;
output [4 - 1:0] m_axi_sample_buffer_AWCACHE ;
output [3 - 1:0] m_axi_sample_buffer_AWPROT ;
output [4 - 1:0] m_axi_sample_buffer_AWQOS ;
output [C_M_AXI_SAMPLE_BUFFER_AWUSER_WIDTH - 1:0] m_axi_sample_buffer_AWUSER ;
output m_axi_sample_buffer_AWVALID ;
input m_axi_sample_buffer_AWREADY ;
output [C_M_AXI_SAMPLE_BUFFER_DATA_WIDTH - 1:0] m_axi_sample_buffer_WDATA ;
output [C_M_AXI_SAMPLE_BUFFER_DATA_WIDTH/8 - 1:0] m_axi_sample_buffer_WSTRB ;
output m_axi_sample_buffer_WLAST ;
output [C_M_AXI_SAMPLE_BUFFER_WUSER_WIDTH - 1:0] m_axi_sample_buffer_WUSER ;
output m_axi_sample_buffer_WVALID ;
input m_axi_sample_buffer_WREADY ;
input [C_M_AXI_SAMPLE_BUFFER_ID_WIDTH - 1:0] m_axi_sample_buffer_BID ;
input [2 - 1:0] m_axi_sample_buffer_BRESP ;
input [C_M_AXI_SAMPLE_BUFFER_BUSER_WIDTH - 1:0] m_axi_sample_buffer_BUSER ;
input m_axi_sample_buffer_BVALID ;
output m_axi_sample_buffer_BREADY ;
output [C_M_AXI_SAMPLE_BUFFER_ID_WIDTH - 1:0] m_axi_sample_buffer_ARID ;
output [C_M_AXI_SAMPLE_BUFFER_ADDR_WIDTH - 1:0] m_axi_sample_buffer_ARADDR ;
output [8 - 1:0] m_axi_sample_buffer_ARLEN ;
output [3 - 1:0] m_axi_sample_buffer_ARSIZE ;
output [2 - 1:0] m_axi_sample_buffer_ARBURST ;
output [2 - 1:0] m_axi_sample_buffer_ARLOCK ;
output [4 - 1:0] m_axi_sample_buffer_ARCACHE ;
output [3 - 1:0] m_axi_sample_buffer_ARPROT ;
output [4 - 1:0] m_axi_sample_buffer_ARQOS ;
output [C_M_AXI_SAMPLE_BUFFER_ARUSER_WIDTH - 1:0] m_axi_sample_buffer_ARUSER ;
output m_axi_sample_buffer_ARVALID ;
input m_axi_sample_buffer_ARREADY ;
input [C_M_AXI_SAMPLE_BUFFER_ID_WIDTH - 1:0] m_axi_sample_buffer_RID ;
input [C_M_AXI_SAMPLE_BUFFER_DATA_WIDTH - 1:0] m_axi_sample_buffer_RDATA ;
input [2 - 1:0] m_axi_sample_buffer_RRESP ;
input m_axi_sample_buffer_RLAST ;
input [C_M_AXI_SAMPLE_BUFFER_RUSER_WIDTH - 1:0] m_axi_sample_buffer_RUSER ;
input m_axi_sample_buffer_RVALID ;
output m_axi_sample_buffer_RREADY ;


output [C_M_AXI_INDICES_BEGIN_ID_WIDTH - 1:0] m_axi_indices_begin_AWID ;
output [C_M_AXI_INDICES_BEGIN_ADDR_WIDTH - 1:0] m_axi_indices_begin_AWADDR ;
output [8 - 1:0] m_axi_indices_begin_AWLEN ;
output [3 - 1:0] m_axi_indices_begin_AWSIZE ;
output [2 - 1:0] m_axi_indices_begin_AWBURST ;
output [2 - 1:0] m_axi_indices_begin_AWLOCK ;
output [4 - 1:0] m_axi_indices_begin_AWCACHE ;
output [3 - 1:0] m_axi_indices_begin_AWPROT ;
output [4 - 1:0] m_axi_indices_begin_AWQOS ;
output [C_M_AXI_INDICES_BEGIN_AWUSER_WIDTH - 1:0] m_axi_indices_begin_AWUSER ;
output m_axi_indices_begin_AWVALID ;
input m_axi_indices_begin_AWREADY ;
output [C_M_AXI_INDICES_BEGIN_DATA_WIDTH - 1:0] m_axi_indices_begin_WDATA ;
output [C_M_AXI_INDICES_BEGIN_DATA_WIDTH/8 - 1:0] m_axi_indices_begin_WSTRB ;
output m_axi_indices_begin_WLAST ;
output [C_M_AXI_INDICES_BEGIN_WUSER_WIDTH - 1:0] m_axi_indices_begin_WUSER ;
output m_axi_indices_begin_WVALID ;
input m_axi_indices_begin_WREADY ;
input [C_M_AXI_INDICES_BEGIN_ID_WIDTH - 1:0] m_axi_indices_begin_BID ;
input [2 - 1:0] m_axi_indices_begin_BRESP ;
input [C_M_AXI_INDICES_BEGIN_BUSER_WIDTH - 1:0] m_axi_indices_begin_BUSER ;
input m_axi_indices_begin_BVALID ;
output m_axi_indices_begin_BREADY ;
output [C_M_AXI_INDICES_BEGIN_ID_WIDTH - 1:0] m_axi_indices_begin_ARID ;
output [C_M_AXI_INDICES_BEGIN_ADDR_WIDTH - 1:0] m_axi_indices_begin_ARADDR ;
output [8 - 1:0] m_axi_indices_begin_ARLEN ;
output [3 - 1:0] m_axi_indices_begin_ARSIZE ;
output [2 - 1:0] m_axi_indices_begin_ARBURST ;
output [2 - 1:0] m_axi_indices_begin_ARLOCK ;
output [4 - 1:0] m_axi_indices_begin_ARCACHE ;
output [3 - 1:0] m_axi_indices_begin_ARPROT ;
output [4 - 1:0] m_axi_indices_begin_ARQOS ;
output [C_M_AXI_INDICES_BEGIN_ARUSER_WIDTH - 1:0] m_axi_indices_begin_ARUSER ;
output m_axi_indices_begin_ARVALID ;
input m_axi_indices_begin_ARREADY ;
input [C_M_AXI_INDICES_BEGIN_ID_WIDTH - 1:0] m_axi_indices_begin_RID ;
input [C_M_AXI_INDICES_BEGIN_DATA_WIDTH - 1:0] m_axi_indices_begin_RDATA ;
input [2 - 1:0] m_axi_indices_begin_RRESP ;
input m_axi_indices_begin_RLAST ;
input [C_M_AXI_INDICES_BEGIN_RUSER_WIDTH - 1:0] m_axi_indices_begin_RUSER ;
input m_axi_indices_begin_RVALID ;
output m_axi_indices_begin_RREADY ;


output [C_M_AXI_INDICES_SAMPLES_ID_WIDTH - 1:0] m_axi_indices_samples_AWID ;
output [C_M_AXI_INDICES_SAMPLES_ADDR_WIDTH - 1:0] m_axi_indices_samples_AWADDR ;
output [8 - 1:0] m_axi_indices_samples_AWLEN ;
output [3 - 1:0] m_axi_indices_samples_AWSIZE ;
output [2 - 1:0] m_axi_indices_samples_AWBURST ;
output [2 - 1:0] m_axi_indices_samples_AWLOCK ;
output [4 - 1:0] m_axi_indices_samples_AWCACHE ;
output [3 - 1:0] m_axi_indices_samples_AWPROT ;
output [4 - 1:0] m_axi_indices_samples_AWQOS ;
output [C_M_AXI_INDICES_SAMPLES_AWUSER_WIDTH - 1:0] m_axi_indices_samples_AWUSER ;
output m_axi_indices_samples_AWVALID ;
input m_axi_indices_samples_AWREADY ;
output [C_M_AXI_INDICES_SAMPLES_DATA_WIDTH - 1:0] m_axi_indices_samples_WDATA ;
output [C_M_AXI_INDICES_SAMPLES_DATA_WIDTH/8 - 1:0] m_axi_indices_samples_WSTRB ;
output m_axi_indices_samples_WLAST ;
output [C_M_AXI_INDICES_SAMPLES_WUSER_WIDTH - 1:0] m_axi_indices_samples_WUSER ;
output m_axi_indices_samples_WVALID ;
input m_axi_indices_samples_WREADY ;
input [C_M_AXI_INDICES_SAMPLES_ID_WIDTH - 1:0] m_axi_indices_samples_BID ;
input [2 - 1:0] m_axi_indices_samples_BRESP ;
input [C_M_AXI_INDICES_SAMPLES_BUSER_WIDTH - 1:0] m_axi_indices_samples_BUSER ;
input m_axi_indices_samples_BVALID ;
output m_axi_indices_samples_BREADY ;
output [C_M_AXI_INDICES_SAMPLES_ID_WIDTH - 1:0] m_axi_indices_samples_ARID ;
output [C_M_AXI_INDICES_SAMPLES_ADDR_WIDTH - 1:0] m_axi_indices_samples_ARADDR ;
output [8 - 1:0] m_axi_indices_samples_ARLEN ;
output [3 - 1:0] m_axi_indices_samples_ARSIZE ;
output [2 - 1:0] m_axi_indices_samples_ARBURST ;
output [2 - 1:0] m_axi_indices_samples_ARLOCK ;
output [4 - 1:0] m_axi_indices_samples_ARCACHE ;
output [3 - 1:0] m_axi_indices_samples_ARPROT ;
output [4 - 1:0] m_axi_indices_samples_ARQOS ;
output [C_M_AXI_INDICES_SAMPLES_ARUSER_WIDTH - 1:0] m_axi_indices_samples_ARUSER ;
output m_axi_indices_samples_ARVALID ;
input m_axi_indices_samples_ARREADY ;
input [C_M_AXI_INDICES_SAMPLES_ID_WIDTH - 1:0] m_axi_indices_samples_RID ;
input [C_M_AXI_INDICES_SAMPLES_DATA_WIDTH - 1:0] m_axi_indices_samples_RDATA ;
input [2 - 1:0] m_axi_indices_samples_RRESP ;
input m_axi_indices_samples_RLAST ;
input [C_M_AXI_INDICES_SAMPLES_RUSER_WIDTH - 1:0] m_axi_indices_samples_RUSER ;
input m_axi_indices_samples_RVALID ;
output m_axi_indices_samples_RREADY ;


output [C_M_AXI_INDICES_STRIDE_ID_WIDTH - 1:0] m_axi_indices_stride_AWID ;
output [C_M_AXI_INDICES_STRIDE_ADDR_WIDTH - 1:0] m_axi_indices_stride_AWADDR ;
output [8 - 1:0] m_axi_indices_stride_AWLEN ;
output [3 - 1:0] m_axi_indices_stride_AWSIZE ;
output [2 - 1:0] m_axi_indices_stride_AWBURST ;
output [2 - 1:0] m_axi_indices_stride_AWLOCK ;
output [4 - 1:0] m_axi_indices_stride_AWCACHE ;
output [3 - 1:0] m_axi_indices_stride_AWPROT ;
output [4 - 1:0] m_axi_indices_stride_AWQOS ;
output [C_M_AXI_INDICES_STRIDE_AWUSER_WIDTH - 1:0] m_axi_indices_stride_AWUSER ;
output m_axi_indices_stride_AWVALID ;
input m_axi_indices_stride_AWREADY ;
output [C_M_AXI_INDICES_STRIDE_DATA_WIDTH - 1:0] m_axi_indices_stride_WDATA ;
output [C_M_AXI_INDICES_STRIDE_DATA_WIDTH/8 - 1:0] m_axi_indices_stride_WSTRB ;
output m_axi_indices_stride_WLAST ;
output [C_M_AXI_INDICES_STRIDE_WUSER_WIDTH - 1:0] m_axi_indices_stride_WUSER ;
output m_axi_indices_stride_WVALID ;
input m_axi_indices_stride_WREADY ;
input [C_M_AXI_INDICES_STRIDE_ID_WIDTH - 1:0] m_axi_indices_stride_BID ;
input [2 - 1:0] m_axi_indices_stride_BRESP ;
input [C_M_AXI_INDICES_STRIDE_BUSER_WIDTH - 1:0] m_axi_indices_stride_BUSER ;
input m_axi_indices_stride_BVALID ;
output m_axi_indices_stride_BREADY ;
output [C_M_AXI_INDICES_STRIDE_ID_WIDTH - 1:0] m_axi_indices_stride_ARID ;
output [C_M_AXI_INDICES_STRIDE_ADDR_WIDTH - 1:0] m_axi_indices_stride_ARADDR ;
output [8 - 1:0] m_axi_indices_stride_ARLEN ;
output [3 - 1:0] m_axi_indices_stride_ARSIZE ;
output [2 - 1:0] m_axi_indices_stride_ARBURST ;
output [2 - 1:0] m_axi_indices_stride_ARLOCK ;
output [4 - 1:0] m_axi_indices_stride_ARCACHE ;
output [3 - 1:0] m_axi_indices_stride_ARPROT ;
output [4 - 1:0] m_axi_indices_stride_ARQOS ;
output [C_M_AXI_INDICES_STRIDE_ARUSER_WIDTH - 1:0] m_axi_indices_stride_ARUSER ;
output m_axi_indices_stride_ARVALID ;
input m_axi_indices_stride_ARREADY ;
input [C_M_AXI_INDICES_STRIDE_ID_WIDTH - 1:0] m_axi_indices_stride_RID ;
input [C_M_AXI_INDICES_STRIDE_DATA_WIDTH - 1:0] m_axi_indices_stride_RDATA ;
input [2 - 1:0] m_axi_indices_stride_RRESP ;
input m_axi_indices_stride_RLAST ;
input [C_M_AXI_INDICES_STRIDE_RUSER_WIDTH - 1:0] m_axi_indices_stride_RUSER ;
input m_axi_indices_stride_RVALID ;
output m_axi_indices_stride_RREADY ;


input [C_S_AXI_SLV0_ADDR_WIDTH - 1:0] s_axi_slv0_AWADDR ;
input s_axi_slv0_AWVALID ;
output s_axi_slv0_AWREADY ;
input [C_S_AXI_SLV0_DATA_WIDTH - 1:0] s_axi_slv0_WDATA ;
input [C_S_AXI_SLV0_DATA_WIDTH/8 - 1:0] s_axi_slv0_WSTRB ;
input s_axi_slv0_WVALID ;
output s_axi_slv0_WREADY ;
output [2 - 1:0] s_axi_slv0_BRESP ;
output s_axi_slv0_BVALID ;
input s_axi_slv0_BREADY ;
input [C_S_AXI_SLV0_ADDR_WIDTH - 1:0] s_axi_slv0_ARADDR ;
input s_axi_slv0_ARVALID ;
output s_axi_slv0_ARREADY ;
output [C_S_AXI_SLV0_DATA_WIDTH - 1:0] s_axi_slv0_RDATA ;
output [2 - 1:0] s_axi_slv0_RRESP ;
output s_axi_slv0_RVALID ;
input s_axi_slv0_RREADY ;
output interrupt ;

input aresetn ;

input aclk ;


wire [C_M_AXI_NFA_INITIALS_BUCKETS_ID_WIDTH - 1:0] m_axi_nfa_initials_buckets_AWID;
wire [C_M_AXI_NFA_INITIALS_BUCKETS_ADDR_WIDTH - 1:0] m_axi_nfa_initials_buckets_AWADDR;
wire [8 - 1:0] m_axi_nfa_initials_buckets_AWLEN;
wire [3 - 1:0] m_axi_nfa_initials_buckets_AWSIZE;
wire [2 - 1:0] m_axi_nfa_initials_buckets_AWBURST;
wire [2 - 1:0] m_axi_nfa_initials_buckets_AWLOCK;
wire [4 - 1:0] m_axi_nfa_initials_buckets_AWCACHE;
wire [3 - 1:0] m_axi_nfa_initials_buckets_AWPROT;
wire [4 - 1:0] m_axi_nfa_initials_buckets_AWQOS;
wire [C_M_AXI_NFA_INITIALS_BUCKETS_AWUSER_WIDTH - 1:0] m_axi_nfa_initials_buckets_AWUSER;
wire m_axi_nfa_initials_buckets_AWVALID;
wire m_axi_nfa_initials_buckets_AWREADY;
wire [C_M_AXI_NFA_INITIALS_BUCKETS_DATA_WIDTH - 1:0] m_axi_nfa_initials_buckets_WDATA;
wire [C_M_AXI_NFA_INITIALS_BUCKETS_DATA_WIDTH/8 - 1:0] m_axi_nfa_initials_buckets_WSTRB;
wire m_axi_nfa_initials_buckets_WLAST;
wire [C_M_AXI_NFA_INITIALS_BUCKETS_WUSER_WIDTH - 1:0] m_axi_nfa_initials_buckets_WUSER;
wire m_axi_nfa_initials_buckets_WVALID;
wire m_axi_nfa_initials_buckets_WREADY;
wire [C_M_AXI_NFA_INITIALS_BUCKETS_ID_WIDTH - 1:0] m_axi_nfa_initials_buckets_BID;
wire [2 - 1:0] m_axi_nfa_initials_buckets_BRESP;
wire [C_M_AXI_NFA_INITIALS_BUCKETS_BUSER_WIDTH - 1:0] m_axi_nfa_initials_buckets_BUSER;
wire m_axi_nfa_initials_buckets_BVALID;
wire m_axi_nfa_initials_buckets_BREADY;
wire [C_M_AXI_NFA_INITIALS_BUCKETS_ID_WIDTH - 1:0] m_axi_nfa_initials_buckets_ARID;
wire [C_M_AXI_NFA_INITIALS_BUCKETS_ADDR_WIDTH - 1:0] m_axi_nfa_initials_buckets_ARADDR;
wire [8 - 1:0] m_axi_nfa_initials_buckets_ARLEN;
wire [3 - 1:0] m_axi_nfa_initials_buckets_ARSIZE;
wire [2 - 1:0] m_axi_nfa_initials_buckets_ARBURST;
wire [2 - 1:0] m_axi_nfa_initials_buckets_ARLOCK;
wire [4 - 1:0] m_axi_nfa_initials_buckets_ARCACHE;
wire [3 - 1:0] m_axi_nfa_initials_buckets_ARPROT;
wire [4 - 1:0] m_axi_nfa_initials_buckets_ARQOS;
wire [C_M_AXI_NFA_INITIALS_BUCKETS_ARUSER_WIDTH - 1:0] m_axi_nfa_initials_buckets_ARUSER;
wire m_axi_nfa_initials_buckets_ARVALID;
wire m_axi_nfa_initials_buckets_ARREADY;
wire [C_M_AXI_NFA_INITIALS_BUCKETS_ID_WIDTH - 1:0] m_axi_nfa_initials_buckets_RID;
wire [C_M_AXI_NFA_INITIALS_BUCKETS_DATA_WIDTH - 1:0] m_axi_nfa_initials_buckets_RDATA;
wire [2 - 1:0] m_axi_nfa_initials_buckets_RRESP;
wire m_axi_nfa_initials_buckets_RLAST;
wire [C_M_AXI_NFA_INITIALS_BUCKETS_RUSER_WIDTH - 1:0] m_axi_nfa_initials_buckets_RUSER;
wire m_axi_nfa_initials_buckets_RVALID;
wire m_axi_nfa_initials_buckets_RREADY;


wire [C_M_AXI_NFA_FINALS_BUCKETS_ID_WIDTH - 1:0] m_axi_nfa_finals_buckets_AWID;
wire [C_M_AXI_NFA_FINALS_BUCKETS_ADDR_WIDTH - 1:0] m_axi_nfa_finals_buckets_AWADDR;
wire [8 - 1:0] m_axi_nfa_finals_buckets_AWLEN;
wire [3 - 1:0] m_axi_nfa_finals_buckets_AWSIZE;
wire [2 - 1:0] m_axi_nfa_finals_buckets_AWBURST;
wire [2 - 1:0] m_axi_nfa_finals_buckets_AWLOCK;
wire [4 - 1:0] m_axi_nfa_finals_buckets_AWCACHE;
wire [3 - 1:0] m_axi_nfa_finals_buckets_AWPROT;
wire [4 - 1:0] m_axi_nfa_finals_buckets_AWQOS;
wire [C_M_AXI_NFA_FINALS_BUCKETS_AWUSER_WIDTH - 1:0] m_axi_nfa_finals_buckets_AWUSER;
wire m_axi_nfa_finals_buckets_AWVALID;
wire m_axi_nfa_finals_buckets_AWREADY;
wire [C_M_AXI_NFA_FINALS_BUCKETS_DATA_WIDTH - 1:0] m_axi_nfa_finals_buckets_WDATA;
wire [C_M_AXI_NFA_FINALS_BUCKETS_DATA_WIDTH/8 - 1:0] m_axi_nfa_finals_buckets_WSTRB;
wire m_axi_nfa_finals_buckets_WLAST;
wire [C_M_AXI_NFA_FINALS_BUCKETS_WUSER_WIDTH - 1:0] m_axi_nfa_finals_buckets_WUSER;
wire m_axi_nfa_finals_buckets_WVALID;
wire m_axi_nfa_finals_buckets_WREADY;
wire [C_M_AXI_NFA_FINALS_BUCKETS_ID_WIDTH - 1:0] m_axi_nfa_finals_buckets_BID;
wire [2 - 1:0] m_axi_nfa_finals_buckets_BRESP;
wire [C_M_AXI_NFA_FINALS_BUCKETS_BUSER_WIDTH - 1:0] m_axi_nfa_finals_buckets_BUSER;
wire m_axi_nfa_finals_buckets_BVALID;
wire m_axi_nfa_finals_buckets_BREADY;
wire [C_M_AXI_NFA_FINALS_BUCKETS_ID_WIDTH - 1:0] m_axi_nfa_finals_buckets_ARID;
wire [C_M_AXI_NFA_FINALS_BUCKETS_ADDR_WIDTH - 1:0] m_axi_nfa_finals_buckets_ARADDR;
wire [8 - 1:0] m_axi_nfa_finals_buckets_ARLEN;
wire [3 - 1:0] m_axi_nfa_finals_buckets_ARSIZE;
wire [2 - 1:0] m_axi_nfa_finals_buckets_ARBURST;
wire [2 - 1:0] m_axi_nfa_finals_buckets_ARLOCK;
wire [4 - 1:0] m_axi_nfa_finals_buckets_ARCACHE;
wire [3 - 1:0] m_axi_nfa_finals_buckets_ARPROT;
wire [4 - 1:0] m_axi_nfa_finals_buckets_ARQOS;
wire [C_M_AXI_NFA_FINALS_BUCKETS_ARUSER_WIDTH - 1:0] m_axi_nfa_finals_buckets_ARUSER;
wire m_axi_nfa_finals_buckets_ARVALID;
wire m_axi_nfa_finals_buckets_ARREADY;
wire [C_M_AXI_NFA_FINALS_BUCKETS_ID_WIDTH - 1:0] m_axi_nfa_finals_buckets_RID;
wire [C_M_AXI_NFA_FINALS_BUCKETS_DATA_WIDTH - 1:0] m_axi_nfa_finals_buckets_RDATA;
wire [2 - 1:0] m_axi_nfa_finals_buckets_RRESP;
wire m_axi_nfa_finals_buckets_RLAST;
wire [C_M_AXI_NFA_FINALS_BUCKETS_RUSER_WIDTH - 1:0] m_axi_nfa_finals_buckets_RUSER;
wire m_axi_nfa_finals_buckets_RVALID;
wire m_axi_nfa_finals_buckets_RREADY;


wire [C_M_AXI_NFA_FORWARD_BUCKETS_ID_WIDTH - 1:0] m_axi_nfa_forward_buckets_AWID;
wire [C_M_AXI_NFA_FORWARD_BUCKETS_ADDR_WIDTH - 1:0] m_axi_nfa_forward_buckets_AWADDR;
wire [8 - 1:0] m_axi_nfa_forward_buckets_AWLEN;
wire [3 - 1:0] m_axi_nfa_forward_buckets_AWSIZE;
wire [2 - 1:0] m_axi_nfa_forward_buckets_AWBURST;
wire [2 - 1:0] m_axi_nfa_forward_buckets_AWLOCK;
wire [4 - 1:0] m_axi_nfa_forward_buckets_AWCACHE;
wire [3 - 1:0] m_axi_nfa_forward_buckets_AWPROT;
wire [4 - 1:0] m_axi_nfa_forward_buckets_AWQOS;
wire [C_M_AXI_NFA_FORWARD_BUCKETS_AWUSER_WIDTH - 1:0] m_axi_nfa_forward_buckets_AWUSER;
wire m_axi_nfa_forward_buckets_AWVALID;
wire m_axi_nfa_forward_buckets_AWREADY;
wire [C_M_AXI_NFA_FORWARD_BUCKETS_DATA_WIDTH - 1:0] m_axi_nfa_forward_buckets_WDATA;
wire [C_M_AXI_NFA_FORWARD_BUCKETS_DATA_WIDTH/8 - 1:0] m_axi_nfa_forward_buckets_WSTRB;
wire m_axi_nfa_forward_buckets_WLAST;
wire [C_M_AXI_NFA_FORWARD_BUCKETS_WUSER_WIDTH - 1:0] m_axi_nfa_forward_buckets_WUSER;
wire m_axi_nfa_forward_buckets_WVALID;
wire m_axi_nfa_forward_buckets_WREADY;
wire [C_M_AXI_NFA_FORWARD_BUCKETS_ID_WIDTH - 1:0] m_axi_nfa_forward_buckets_BID;
wire [2 - 1:0] m_axi_nfa_forward_buckets_BRESP;
wire [C_M_AXI_NFA_FORWARD_BUCKETS_BUSER_WIDTH - 1:0] m_axi_nfa_forward_buckets_BUSER;
wire m_axi_nfa_forward_buckets_BVALID;
wire m_axi_nfa_forward_buckets_BREADY;
wire [C_M_AXI_NFA_FORWARD_BUCKETS_ID_WIDTH - 1:0] m_axi_nfa_forward_buckets_ARID;
wire [C_M_AXI_NFA_FORWARD_BUCKETS_ADDR_WIDTH - 1:0] m_axi_nfa_forward_buckets_ARADDR;
wire [8 - 1:0] m_axi_nfa_forward_buckets_ARLEN;
wire [3 - 1:0] m_axi_nfa_forward_buckets_ARSIZE;
wire [2 - 1:0] m_axi_nfa_forward_buckets_ARBURST;
wire [2 - 1:0] m_axi_nfa_forward_buckets_ARLOCK;
wire [4 - 1:0] m_axi_nfa_forward_buckets_ARCACHE;
wire [3 - 1:0] m_axi_nfa_forward_buckets_ARPROT;
wire [4 - 1:0] m_axi_nfa_forward_buckets_ARQOS;
wire [C_M_AXI_NFA_FORWARD_BUCKETS_ARUSER_WIDTH - 1:0] m_axi_nfa_forward_buckets_ARUSER;
wire m_axi_nfa_forward_buckets_ARVALID;
wire m_axi_nfa_forward_buckets_ARREADY;
wire [C_M_AXI_NFA_FORWARD_BUCKETS_ID_WIDTH - 1:0] m_axi_nfa_forward_buckets_RID;
wire [C_M_AXI_NFA_FORWARD_BUCKETS_DATA_WIDTH - 1:0] m_axi_nfa_forward_buckets_RDATA;
wire [2 - 1:0] m_axi_nfa_forward_buckets_RRESP;
wire m_axi_nfa_forward_buckets_RLAST;
wire [C_M_AXI_NFA_FORWARD_BUCKETS_RUSER_WIDTH - 1:0] m_axi_nfa_forward_buckets_RUSER;
wire m_axi_nfa_forward_buckets_RVALID;
wire m_axi_nfa_forward_buckets_RREADY;


wire [C_M_AXI_SAMPLE_BUFFER_ID_WIDTH - 1:0] m_axi_sample_buffer_AWID;
wire [C_M_AXI_SAMPLE_BUFFER_ADDR_WIDTH - 1:0] m_axi_sample_buffer_AWADDR;
wire [8 - 1:0] m_axi_sample_buffer_AWLEN;
wire [3 - 1:0] m_axi_sample_buffer_AWSIZE;
wire [2 - 1:0] m_axi_sample_buffer_AWBURST;
wire [2 - 1:0] m_axi_sample_buffer_AWLOCK;
wire [4 - 1:0] m_axi_sample_buffer_AWCACHE;
wire [3 - 1:0] m_axi_sample_buffer_AWPROT;
wire [4 - 1:0] m_axi_sample_buffer_AWQOS;
wire [C_M_AXI_SAMPLE_BUFFER_AWUSER_WIDTH - 1:0] m_axi_sample_buffer_AWUSER;
wire m_axi_sample_buffer_AWVALID;
wire m_axi_sample_buffer_AWREADY;
wire [C_M_AXI_SAMPLE_BUFFER_DATA_WIDTH - 1:0] m_axi_sample_buffer_WDATA;
wire [C_M_AXI_SAMPLE_BUFFER_DATA_WIDTH/8 - 1:0] m_axi_sample_buffer_WSTRB;
wire m_axi_sample_buffer_WLAST;
wire [C_M_AXI_SAMPLE_BUFFER_WUSER_WIDTH - 1:0] m_axi_sample_buffer_WUSER;
wire m_axi_sample_buffer_WVALID;
wire m_axi_sample_buffer_WREADY;
wire [C_M_AXI_SAMPLE_BUFFER_ID_WIDTH - 1:0] m_axi_sample_buffer_BID;
wire [2 - 1:0] m_axi_sample_buffer_BRESP;
wire [C_M_AXI_SAMPLE_BUFFER_BUSER_WIDTH - 1:0] m_axi_sample_buffer_BUSER;
wire m_axi_sample_buffer_BVALID;
wire m_axi_sample_buffer_BREADY;
wire [C_M_AXI_SAMPLE_BUFFER_ID_WIDTH - 1:0] m_axi_sample_buffer_ARID;
wire [C_M_AXI_SAMPLE_BUFFER_ADDR_WIDTH - 1:0] m_axi_sample_buffer_ARADDR;
wire [8 - 1:0] m_axi_sample_buffer_ARLEN;
wire [3 - 1:0] m_axi_sample_buffer_ARSIZE;
wire [2 - 1:0] m_axi_sample_buffer_ARBURST;
wire [2 - 1:0] m_axi_sample_buffer_ARLOCK;
wire [4 - 1:0] m_axi_sample_buffer_ARCACHE;
wire [3 - 1:0] m_axi_sample_buffer_ARPROT;
wire [4 - 1:0] m_axi_sample_buffer_ARQOS;
wire [C_M_AXI_SAMPLE_BUFFER_ARUSER_WIDTH - 1:0] m_axi_sample_buffer_ARUSER;
wire m_axi_sample_buffer_ARVALID;
wire m_axi_sample_buffer_ARREADY;
wire [C_M_AXI_SAMPLE_BUFFER_ID_WIDTH - 1:0] m_axi_sample_buffer_RID;
wire [C_M_AXI_SAMPLE_BUFFER_DATA_WIDTH - 1:0] m_axi_sample_buffer_RDATA;
wire [2 - 1:0] m_axi_sample_buffer_RRESP;
wire m_axi_sample_buffer_RLAST;
wire [C_M_AXI_SAMPLE_BUFFER_RUSER_WIDTH - 1:0] m_axi_sample_buffer_RUSER;
wire m_axi_sample_buffer_RVALID;
wire m_axi_sample_buffer_RREADY;


wire [C_M_AXI_INDICES_BEGIN_ID_WIDTH - 1:0] m_axi_indices_begin_AWID;
wire [C_M_AXI_INDICES_BEGIN_ADDR_WIDTH - 1:0] m_axi_indices_begin_AWADDR;
wire [8 - 1:0] m_axi_indices_begin_AWLEN;
wire [3 - 1:0] m_axi_indices_begin_AWSIZE;
wire [2 - 1:0] m_axi_indices_begin_AWBURST;
wire [2 - 1:0] m_axi_indices_begin_AWLOCK;
wire [4 - 1:0] m_axi_indices_begin_AWCACHE;
wire [3 - 1:0] m_axi_indices_begin_AWPROT;
wire [4 - 1:0] m_axi_indices_begin_AWQOS;
wire [C_M_AXI_INDICES_BEGIN_AWUSER_WIDTH - 1:0] m_axi_indices_begin_AWUSER;
wire m_axi_indices_begin_AWVALID;
wire m_axi_indices_begin_AWREADY;
wire [C_M_AXI_INDICES_BEGIN_DATA_WIDTH - 1:0] m_axi_indices_begin_WDATA;
wire [C_M_AXI_INDICES_BEGIN_DATA_WIDTH/8 - 1:0] m_axi_indices_begin_WSTRB;
wire m_axi_indices_begin_WLAST;
wire [C_M_AXI_INDICES_BEGIN_WUSER_WIDTH - 1:0] m_axi_indices_begin_WUSER;
wire m_axi_indices_begin_WVALID;
wire m_axi_indices_begin_WREADY;
wire [C_M_AXI_INDICES_BEGIN_ID_WIDTH - 1:0] m_axi_indices_begin_BID;
wire [2 - 1:0] m_axi_indices_begin_BRESP;
wire [C_M_AXI_INDICES_BEGIN_BUSER_WIDTH - 1:0] m_axi_indices_begin_BUSER;
wire m_axi_indices_begin_BVALID;
wire m_axi_indices_begin_BREADY;
wire [C_M_AXI_INDICES_BEGIN_ID_WIDTH - 1:0] m_axi_indices_begin_ARID;
wire [C_M_AXI_INDICES_BEGIN_ADDR_WIDTH - 1:0] m_axi_indices_begin_ARADDR;
wire [8 - 1:0] m_axi_indices_begin_ARLEN;
wire [3 - 1:0] m_axi_indices_begin_ARSIZE;
wire [2 - 1:0] m_axi_indices_begin_ARBURST;
wire [2 - 1:0] m_axi_indices_begin_ARLOCK;
wire [4 - 1:0] m_axi_indices_begin_ARCACHE;
wire [3 - 1:0] m_axi_indices_begin_ARPROT;
wire [4 - 1:0] m_axi_indices_begin_ARQOS;
wire [C_M_AXI_INDICES_BEGIN_ARUSER_WIDTH - 1:0] m_axi_indices_begin_ARUSER;
wire m_axi_indices_begin_ARVALID;
wire m_axi_indices_begin_ARREADY;
wire [C_M_AXI_INDICES_BEGIN_ID_WIDTH - 1:0] m_axi_indices_begin_RID;
wire [C_M_AXI_INDICES_BEGIN_DATA_WIDTH - 1:0] m_axi_indices_begin_RDATA;
wire [2 - 1:0] m_axi_indices_begin_RRESP;
wire m_axi_indices_begin_RLAST;
wire [C_M_AXI_INDICES_BEGIN_RUSER_WIDTH - 1:0] m_axi_indices_begin_RUSER;
wire m_axi_indices_begin_RVALID;
wire m_axi_indices_begin_RREADY;


wire [C_M_AXI_INDICES_SAMPLES_ID_WIDTH - 1:0] m_axi_indices_samples_AWID;
wire [C_M_AXI_INDICES_SAMPLES_ADDR_WIDTH - 1:0] m_axi_indices_samples_AWADDR;
wire [8 - 1:0] m_axi_indices_samples_AWLEN;
wire [3 - 1:0] m_axi_indices_samples_AWSIZE;
wire [2 - 1:0] m_axi_indices_samples_AWBURST;
wire [2 - 1:0] m_axi_indices_samples_AWLOCK;
wire [4 - 1:0] m_axi_indices_samples_AWCACHE;
wire [3 - 1:0] m_axi_indices_samples_AWPROT;
wire [4 - 1:0] m_axi_indices_samples_AWQOS;
wire [C_M_AXI_INDICES_SAMPLES_AWUSER_WIDTH - 1:0] m_axi_indices_samples_AWUSER;
wire m_axi_indices_samples_AWVALID;
wire m_axi_indices_samples_AWREADY;
wire [C_M_AXI_INDICES_SAMPLES_DATA_WIDTH - 1:0] m_axi_indices_samples_WDATA;
wire [C_M_AXI_INDICES_SAMPLES_DATA_WIDTH/8 - 1:0] m_axi_indices_samples_WSTRB;
wire m_axi_indices_samples_WLAST;
wire [C_M_AXI_INDICES_SAMPLES_WUSER_WIDTH - 1:0] m_axi_indices_samples_WUSER;
wire m_axi_indices_samples_WVALID;
wire m_axi_indices_samples_WREADY;
wire [C_M_AXI_INDICES_SAMPLES_ID_WIDTH - 1:0] m_axi_indices_samples_BID;
wire [2 - 1:0] m_axi_indices_samples_BRESP;
wire [C_M_AXI_INDICES_SAMPLES_BUSER_WIDTH - 1:0] m_axi_indices_samples_BUSER;
wire m_axi_indices_samples_BVALID;
wire m_axi_indices_samples_BREADY;
wire [C_M_AXI_INDICES_SAMPLES_ID_WIDTH - 1:0] m_axi_indices_samples_ARID;
wire [C_M_AXI_INDICES_SAMPLES_ADDR_WIDTH - 1:0] m_axi_indices_samples_ARADDR;
wire [8 - 1:0] m_axi_indices_samples_ARLEN;
wire [3 - 1:0] m_axi_indices_samples_ARSIZE;
wire [2 - 1:0] m_axi_indices_samples_ARBURST;
wire [2 - 1:0] m_axi_indices_samples_ARLOCK;
wire [4 - 1:0] m_axi_indices_samples_ARCACHE;
wire [3 - 1:0] m_axi_indices_samples_ARPROT;
wire [4 - 1:0] m_axi_indices_samples_ARQOS;
wire [C_M_AXI_INDICES_SAMPLES_ARUSER_WIDTH - 1:0] m_axi_indices_samples_ARUSER;
wire m_axi_indices_samples_ARVALID;
wire m_axi_indices_samples_ARREADY;
wire [C_M_AXI_INDICES_SAMPLES_ID_WIDTH - 1:0] m_axi_indices_samples_RID;
wire [C_M_AXI_INDICES_SAMPLES_DATA_WIDTH - 1:0] m_axi_indices_samples_RDATA;
wire [2 - 1:0] m_axi_indices_samples_RRESP;
wire m_axi_indices_samples_RLAST;
wire [C_M_AXI_INDICES_SAMPLES_RUSER_WIDTH - 1:0] m_axi_indices_samples_RUSER;
wire m_axi_indices_samples_RVALID;
wire m_axi_indices_samples_RREADY;


wire [C_M_AXI_INDICES_STRIDE_ID_WIDTH - 1:0] m_axi_indices_stride_AWID;
wire [C_M_AXI_INDICES_STRIDE_ADDR_WIDTH - 1:0] m_axi_indices_stride_AWADDR;
wire [8 - 1:0] m_axi_indices_stride_AWLEN;
wire [3 - 1:0] m_axi_indices_stride_AWSIZE;
wire [2 - 1:0] m_axi_indices_stride_AWBURST;
wire [2 - 1:0] m_axi_indices_stride_AWLOCK;
wire [4 - 1:0] m_axi_indices_stride_AWCACHE;
wire [3 - 1:0] m_axi_indices_stride_AWPROT;
wire [4 - 1:0] m_axi_indices_stride_AWQOS;
wire [C_M_AXI_INDICES_STRIDE_AWUSER_WIDTH - 1:0] m_axi_indices_stride_AWUSER;
wire m_axi_indices_stride_AWVALID;
wire m_axi_indices_stride_AWREADY;
wire [C_M_AXI_INDICES_STRIDE_DATA_WIDTH - 1:0] m_axi_indices_stride_WDATA;
wire [C_M_AXI_INDICES_STRIDE_DATA_WIDTH/8 - 1:0] m_axi_indices_stride_WSTRB;
wire m_axi_indices_stride_WLAST;
wire [C_M_AXI_INDICES_STRIDE_WUSER_WIDTH - 1:0] m_axi_indices_stride_WUSER;
wire m_axi_indices_stride_WVALID;
wire m_axi_indices_stride_WREADY;
wire [C_M_AXI_INDICES_STRIDE_ID_WIDTH - 1:0] m_axi_indices_stride_BID;
wire [2 - 1:0] m_axi_indices_stride_BRESP;
wire [C_M_AXI_INDICES_STRIDE_BUSER_WIDTH - 1:0] m_axi_indices_stride_BUSER;
wire m_axi_indices_stride_BVALID;
wire m_axi_indices_stride_BREADY;
wire [C_M_AXI_INDICES_STRIDE_ID_WIDTH - 1:0] m_axi_indices_stride_ARID;
wire [C_M_AXI_INDICES_STRIDE_ADDR_WIDTH - 1:0] m_axi_indices_stride_ARADDR;
wire [8 - 1:0] m_axi_indices_stride_ARLEN;
wire [3 - 1:0] m_axi_indices_stride_ARSIZE;
wire [2 - 1:0] m_axi_indices_stride_ARBURST;
wire [2 - 1:0] m_axi_indices_stride_ARLOCK;
wire [4 - 1:0] m_axi_indices_stride_ARCACHE;
wire [3 - 1:0] m_axi_indices_stride_ARPROT;
wire [4 - 1:0] m_axi_indices_stride_ARQOS;
wire [C_M_AXI_INDICES_STRIDE_ARUSER_WIDTH - 1:0] m_axi_indices_stride_ARUSER;
wire m_axi_indices_stride_ARVALID;
wire m_axi_indices_stride_ARREADY;
wire [C_M_AXI_INDICES_STRIDE_ID_WIDTH - 1:0] m_axi_indices_stride_RID;
wire [C_M_AXI_INDICES_STRIDE_DATA_WIDTH - 1:0] m_axi_indices_stride_RDATA;
wire [2 - 1:0] m_axi_indices_stride_RRESP;
wire m_axi_indices_stride_RLAST;
wire [C_M_AXI_INDICES_STRIDE_RUSER_WIDTH - 1:0] m_axi_indices_stride_RUSER;
wire m_axi_indices_stride_RVALID;
wire m_axi_indices_stride_RREADY;


wire [C_S_AXI_SLV0_ADDR_WIDTH - 1:0] s_axi_slv0_AWADDR;
wire s_axi_slv0_AWVALID;
wire s_axi_slv0_AWREADY;
wire [C_S_AXI_SLV0_DATA_WIDTH - 1:0] s_axi_slv0_WDATA;
wire [C_S_AXI_SLV0_DATA_WIDTH/8 - 1:0] s_axi_slv0_WSTRB;
wire s_axi_slv0_WVALID;
wire s_axi_slv0_WREADY;
wire [2 - 1:0] s_axi_slv0_BRESP;
wire s_axi_slv0_BVALID;
wire s_axi_slv0_BREADY;
wire [C_S_AXI_SLV0_ADDR_WIDTH - 1:0] s_axi_slv0_ARADDR;
wire s_axi_slv0_ARVALID;
wire s_axi_slv0_ARREADY;
wire [C_S_AXI_SLV0_DATA_WIDTH - 1:0] s_axi_slv0_RDATA;
wire [2 - 1:0] s_axi_slv0_RRESP;
wire s_axi_slv0_RVALID;
wire s_axi_slv0_RREADY;
wire interrupt;

wire aresetn;


wire [32 - 1:0] sig_nfa_accept_samples_generic_hw_nfa_initials_buckets_datain;
wire [32 - 1:0] sig_nfa_accept_samples_generic_hw_nfa_initials_buckets_dataout;
wire [32 - 1:0] sig_nfa_accept_samples_generic_hw_nfa_initials_buckets_address;
wire [32 - 1:0] sig_nfa_accept_samples_generic_hw_nfa_initials_buckets_size;
wire sig_nfa_accept_samples_generic_hw_nfa_initials_buckets_req_din;
wire sig_nfa_accept_samples_generic_hw_nfa_initials_buckets_req_full_n;
wire sig_nfa_accept_samples_generic_hw_nfa_initials_buckets_req_write;
wire sig_nfa_accept_samples_generic_hw_nfa_initials_buckets_rsp_empty_n;
wire sig_nfa_accept_samples_generic_hw_nfa_initials_buckets_rsp_read;

wire [32 - 1:0] sig_nfa_accept_samples_generic_hw_nfa_finals_buckets_datain;
wire [32 - 1:0] sig_nfa_accept_samples_generic_hw_nfa_finals_buckets_dataout;
wire [32 - 1:0] sig_nfa_accept_samples_generic_hw_nfa_finals_buckets_address;
wire [32 - 1:0] sig_nfa_accept_samples_generic_hw_nfa_finals_buckets_size;
wire sig_nfa_accept_samples_generic_hw_nfa_finals_buckets_req_din;
wire sig_nfa_accept_samples_generic_hw_nfa_finals_buckets_req_full_n;
wire sig_nfa_accept_samples_generic_hw_nfa_finals_buckets_req_write;
wire sig_nfa_accept_samples_generic_hw_nfa_finals_buckets_rsp_empty_n;
wire sig_nfa_accept_samples_generic_hw_nfa_finals_buckets_rsp_read;

wire [32 - 1:0] sig_nfa_accept_samples_generic_hw_nfa_forward_buckets_datain;
wire [32 - 1:0] sig_nfa_accept_samples_generic_hw_nfa_forward_buckets_dataout;
wire [32 - 1:0] sig_nfa_accept_samples_generic_hw_nfa_forward_buckets_address;
wire [32 - 1:0] sig_nfa_accept_samples_generic_hw_nfa_forward_buckets_size;
wire sig_nfa_accept_samples_generic_hw_nfa_forward_buckets_req_din;
wire sig_nfa_accept_samples_generic_hw_nfa_forward_buckets_req_full_n;
wire sig_nfa_accept_samples_generic_hw_nfa_forward_buckets_req_write;
wire sig_nfa_accept_samples_generic_hw_nfa_forward_buckets_rsp_empty_n;
wire sig_nfa_accept_samples_generic_hw_nfa_forward_buckets_rsp_read;

wire [8 - 1:0] sig_nfa_accept_samples_generic_hw_sample_buffer_datain;
wire [8 - 1:0] sig_nfa_accept_samples_generic_hw_sample_buffer_dataout;
wire [32 - 1:0] sig_nfa_accept_samples_generic_hw_sample_buffer_address;
wire [32 - 1:0] sig_nfa_accept_samples_generic_hw_sample_buffer_size;
wire sig_nfa_accept_samples_generic_hw_sample_buffer_req_din;
wire sig_nfa_accept_samples_generic_hw_sample_buffer_req_full_n;
wire sig_nfa_accept_samples_generic_hw_sample_buffer_req_write;
wire sig_nfa_accept_samples_generic_hw_sample_buffer_rsp_empty_n;
wire sig_nfa_accept_samples_generic_hw_sample_buffer_rsp_read;

wire [32 - 1:0] sig_nfa_accept_samples_generic_hw_indices_begin_datain;
wire [32 - 1:0] sig_nfa_accept_samples_generic_hw_indices_begin_dataout;
wire [32 - 1:0] sig_nfa_accept_samples_generic_hw_indices_begin_address;
wire [32 - 1:0] sig_nfa_accept_samples_generic_hw_indices_begin_size;
wire sig_nfa_accept_samples_generic_hw_indices_begin_req_din;
wire sig_nfa_accept_samples_generic_hw_indices_begin_req_full_n;
wire sig_nfa_accept_samples_generic_hw_indices_begin_req_write;
wire sig_nfa_accept_samples_generic_hw_indices_begin_rsp_empty_n;
wire sig_nfa_accept_samples_generic_hw_indices_begin_rsp_read;

wire [16 - 1:0] sig_nfa_accept_samples_generic_hw_indices_samples_datain;
wire [16 - 1:0] sig_nfa_accept_samples_generic_hw_indices_samples_dataout;
wire [32 - 1:0] sig_nfa_accept_samples_generic_hw_indices_samples_address;
wire [32 - 1:0] sig_nfa_accept_samples_generic_hw_indices_samples_size;
wire sig_nfa_accept_samples_generic_hw_indices_samples_req_din;
wire sig_nfa_accept_samples_generic_hw_indices_samples_req_full_n;
wire sig_nfa_accept_samples_generic_hw_indices_samples_req_write;
wire sig_nfa_accept_samples_generic_hw_indices_samples_rsp_empty_n;
wire sig_nfa_accept_samples_generic_hw_indices_samples_rsp_read;

wire [8 - 1:0] sig_nfa_accept_samples_generic_hw_indices_stride_datain;
wire [8 - 1:0] sig_nfa_accept_samples_generic_hw_indices_stride_dataout;
wire [32 - 1:0] sig_nfa_accept_samples_generic_hw_indices_stride_address;
wire [32 - 1:0] sig_nfa_accept_samples_generic_hw_indices_stride_size;
wire sig_nfa_accept_samples_generic_hw_indices_stride_req_din;
wire sig_nfa_accept_samples_generic_hw_indices_stride_req_full_n;
wire sig_nfa_accept_samples_generic_hw_indices_stride_req_write;
wire sig_nfa_accept_samples_generic_hw_indices_stride_rsp_empty_n;
wire sig_nfa_accept_samples_generic_hw_indices_stride_rsp_read;

wire [8 - 1:0] sig_nfa_accept_samples_generic_hw_nfa_symbols;
wire [32 - 1:0] sig_nfa_accept_samples_generic_hw_sample_buffer_length;
wire [16 - 1:0] sig_nfa_accept_samples_generic_hw_sample_length;
wire [16 - 1:0] sig_nfa_accept_samples_generic_hw_i_size;
wire [16 - 1:0] sig_nfa_accept_samples_generic_hw_begin_index;
wire [16 - 1:0] sig_nfa_accept_samples_generic_hw_begin_sample;
wire [16 - 1:0] sig_nfa_accept_samples_generic_hw_end_index;
wire [16 - 1:0] sig_nfa_accept_samples_generic_hw_end_sample;
wire [1 - 1:0] sig_nfa_accept_samples_generic_hw_stop_on_first;
wire [1 - 1:0] sig_nfa_accept_samples_generic_hw_accept;
wire sig_nfa_accept_samples_generic_hw_ap_start;
wire sig_nfa_accept_samples_generic_hw_ap_ready;
wire sig_nfa_accept_samples_generic_hw_ap_done;
wire sig_nfa_accept_samples_generic_hw_ap_idle;
wire [32 - 1:0] sig_nfa_accept_samples_generic_hw_ap_return;

wire sig_nfa_accept_samples_generic_hw_ap_rst;



nfa_accept_samples_generic_hw nfa_accept_samples_generic_hw_U(
    .nfa_initials_buckets_datain(sig_nfa_accept_samples_generic_hw_nfa_initials_buckets_datain),
    .nfa_initials_buckets_dataout(sig_nfa_accept_samples_generic_hw_nfa_initials_buckets_dataout),
    .nfa_initials_buckets_address(sig_nfa_accept_samples_generic_hw_nfa_initials_buckets_address),
    .nfa_initials_buckets_size(sig_nfa_accept_samples_generic_hw_nfa_initials_buckets_size),
    .nfa_initials_buckets_req_din(sig_nfa_accept_samples_generic_hw_nfa_initials_buckets_req_din),
    .nfa_initials_buckets_req_full_n(sig_nfa_accept_samples_generic_hw_nfa_initials_buckets_req_full_n),
    .nfa_initials_buckets_req_write(sig_nfa_accept_samples_generic_hw_nfa_initials_buckets_req_write),
    .nfa_initials_buckets_rsp_empty_n(sig_nfa_accept_samples_generic_hw_nfa_initials_buckets_rsp_empty_n),
    .nfa_initials_buckets_rsp_read(sig_nfa_accept_samples_generic_hw_nfa_initials_buckets_rsp_read),
    .nfa_finals_buckets_datain(sig_nfa_accept_samples_generic_hw_nfa_finals_buckets_datain),
    .nfa_finals_buckets_dataout(sig_nfa_accept_samples_generic_hw_nfa_finals_buckets_dataout),
    .nfa_finals_buckets_address(sig_nfa_accept_samples_generic_hw_nfa_finals_buckets_address),
    .nfa_finals_buckets_size(sig_nfa_accept_samples_generic_hw_nfa_finals_buckets_size),
    .nfa_finals_buckets_req_din(sig_nfa_accept_samples_generic_hw_nfa_finals_buckets_req_din),
    .nfa_finals_buckets_req_full_n(sig_nfa_accept_samples_generic_hw_nfa_finals_buckets_req_full_n),
    .nfa_finals_buckets_req_write(sig_nfa_accept_samples_generic_hw_nfa_finals_buckets_req_write),
    .nfa_finals_buckets_rsp_empty_n(sig_nfa_accept_samples_generic_hw_nfa_finals_buckets_rsp_empty_n),
    .nfa_finals_buckets_rsp_read(sig_nfa_accept_samples_generic_hw_nfa_finals_buckets_rsp_read),
    .nfa_forward_buckets_datain(sig_nfa_accept_samples_generic_hw_nfa_forward_buckets_datain),
    .nfa_forward_buckets_dataout(sig_nfa_accept_samples_generic_hw_nfa_forward_buckets_dataout),
    .nfa_forward_buckets_address(sig_nfa_accept_samples_generic_hw_nfa_forward_buckets_address),
    .nfa_forward_buckets_size(sig_nfa_accept_samples_generic_hw_nfa_forward_buckets_size),
    .nfa_forward_buckets_req_din(sig_nfa_accept_samples_generic_hw_nfa_forward_buckets_req_din),
    .nfa_forward_buckets_req_full_n(sig_nfa_accept_samples_generic_hw_nfa_forward_buckets_req_full_n),
    .nfa_forward_buckets_req_write(sig_nfa_accept_samples_generic_hw_nfa_forward_buckets_req_write),
    .nfa_forward_buckets_rsp_empty_n(sig_nfa_accept_samples_generic_hw_nfa_forward_buckets_rsp_empty_n),
    .nfa_forward_buckets_rsp_read(sig_nfa_accept_samples_generic_hw_nfa_forward_buckets_rsp_read),
    .sample_buffer_datain(sig_nfa_accept_samples_generic_hw_sample_buffer_datain),
    .sample_buffer_dataout(sig_nfa_accept_samples_generic_hw_sample_buffer_dataout),
    .sample_buffer_address(sig_nfa_accept_samples_generic_hw_sample_buffer_address),
    .sample_buffer_size(sig_nfa_accept_samples_generic_hw_sample_buffer_size),
    .sample_buffer_req_din(sig_nfa_accept_samples_generic_hw_sample_buffer_req_din),
    .sample_buffer_req_full_n(sig_nfa_accept_samples_generic_hw_sample_buffer_req_full_n),
    .sample_buffer_req_write(sig_nfa_accept_samples_generic_hw_sample_buffer_req_write),
    .sample_buffer_rsp_empty_n(sig_nfa_accept_samples_generic_hw_sample_buffer_rsp_empty_n),
    .sample_buffer_rsp_read(sig_nfa_accept_samples_generic_hw_sample_buffer_rsp_read),
    .indices_begin_datain(sig_nfa_accept_samples_generic_hw_indices_begin_datain),
    .indices_begin_dataout(sig_nfa_accept_samples_generic_hw_indices_begin_dataout),
    .indices_begin_address(sig_nfa_accept_samples_generic_hw_indices_begin_address),
    .indices_begin_size(sig_nfa_accept_samples_generic_hw_indices_begin_size),
    .indices_begin_req_din(sig_nfa_accept_samples_generic_hw_indices_begin_req_din),
    .indices_begin_req_full_n(sig_nfa_accept_samples_generic_hw_indices_begin_req_full_n),
    .indices_begin_req_write(sig_nfa_accept_samples_generic_hw_indices_begin_req_write),
    .indices_begin_rsp_empty_n(sig_nfa_accept_samples_generic_hw_indices_begin_rsp_empty_n),
    .indices_begin_rsp_read(sig_nfa_accept_samples_generic_hw_indices_begin_rsp_read),
    .indices_samples_datain(sig_nfa_accept_samples_generic_hw_indices_samples_datain),
    .indices_samples_dataout(sig_nfa_accept_samples_generic_hw_indices_samples_dataout),
    .indices_samples_address(sig_nfa_accept_samples_generic_hw_indices_samples_address),
    .indices_samples_size(sig_nfa_accept_samples_generic_hw_indices_samples_size),
    .indices_samples_req_din(sig_nfa_accept_samples_generic_hw_indices_samples_req_din),
    .indices_samples_req_full_n(sig_nfa_accept_samples_generic_hw_indices_samples_req_full_n),
    .indices_samples_req_write(sig_nfa_accept_samples_generic_hw_indices_samples_req_write),
    .indices_samples_rsp_empty_n(sig_nfa_accept_samples_generic_hw_indices_samples_rsp_empty_n),
    .indices_samples_rsp_read(sig_nfa_accept_samples_generic_hw_indices_samples_rsp_read),
    .indices_stride_datain(sig_nfa_accept_samples_generic_hw_indices_stride_datain),
    .indices_stride_dataout(sig_nfa_accept_samples_generic_hw_indices_stride_dataout),
    .indices_stride_address(sig_nfa_accept_samples_generic_hw_indices_stride_address),
    .indices_stride_size(sig_nfa_accept_samples_generic_hw_indices_stride_size),
    .indices_stride_req_din(sig_nfa_accept_samples_generic_hw_indices_stride_req_din),
    .indices_stride_req_full_n(sig_nfa_accept_samples_generic_hw_indices_stride_req_full_n),
    .indices_stride_req_write(sig_nfa_accept_samples_generic_hw_indices_stride_req_write),
    .indices_stride_rsp_empty_n(sig_nfa_accept_samples_generic_hw_indices_stride_rsp_empty_n),
    .indices_stride_rsp_read(sig_nfa_accept_samples_generic_hw_indices_stride_rsp_read),
    .nfa_symbols(sig_nfa_accept_samples_generic_hw_nfa_symbols),
    .sample_buffer_length(sig_nfa_accept_samples_generic_hw_sample_buffer_length),
    .sample_length(sig_nfa_accept_samples_generic_hw_sample_length),
    .i_size(sig_nfa_accept_samples_generic_hw_i_size),
    .begin_index(sig_nfa_accept_samples_generic_hw_begin_index),
    .begin_sample(sig_nfa_accept_samples_generic_hw_begin_sample),
    .end_index(sig_nfa_accept_samples_generic_hw_end_index),
    .end_sample(sig_nfa_accept_samples_generic_hw_end_sample),
    .stop_on_first(sig_nfa_accept_samples_generic_hw_stop_on_first),
    .accept(sig_nfa_accept_samples_generic_hw_accept),
    .ap_start(sig_nfa_accept_samples_generic_hw_ap_start),
    .ap_ready(sig_nfa_accept_samples_generic_hw_ap_ready),
    .ap_done(sig_nfa_accept_samples_generic_hw_ap_done),
    .ap_idle(sig_nfa_accept_samples_generic_hw_ap_idle),
    .ap_return(sig_nfa_accept_samples_generic_hw_ap_return),
    .ap_rst(sig_nfa_accept_samples_generic_hw_ap_rst),
    .ap_clk(aclk)
);

nfa_accept_samples_generic_hw_nfa_initials_buckets_if #(
    .C_ID_WIDTH(C_M_AXI_NFA_INITIALS_BUCKETS_ID_WIDTH),
    .C_ADDR_WIDTH(C_M_AXI_NFA_INITIALS_BUCKETS_ADDR_WIDTH),
    .C_DATA_WIDTH(C_M_AXI_NFA_INITIALS_BUCKETS_DATA_WIDTH),
    .C_AWUSER_WIDTH(C_M_AXI_NFA_INITIALS_BUCKETS_AWUSER_WIDTH),
    .C_ARUSER_WIDTH(C_M_AXI_NFA_INITIALS_BUCKETS_ARUSER_WIDTH),
    .C_WUSER_WIDTH(C_M_AXI_NFA_INITIALS_BUCKETS_WUSER_WIDTH),
    .C_RUSER_WIDTH(C_M_AXI_NFA_INITIALS_BUCKETS_RUSER_WIDTH),
    .C_BUSER_WIDTH(C_M_AXI_NFA_INITIALS_BUCKETS_BUSER_WIDTH),
    .C_USER_DATA_WIDTH(C_M_AXI_NFA_INITIALS_BUCKETS_USER_DATA_WIDTH),
    .C_TARGET_ADDR(C_M_AXI_NFA_INITIALS_BUCKETS_TARGET_ADDR),
    .C_USER_VALUE(C_M_AXI_NFA_INITIALS_BUCKETS_USER_VALUE),
    .C_PROT_VALUE(C_M_AXI_NFA_INITIALS_BUCKETS_PROT_VALUE),
    .C_CACHE_VALUE(C_M_AXI_NFA_INITIALS_BUCKETS_CACHE_VALUE))
nfa_accept_samples_generic_hw_nfa_initials_buckets_if_U(
    .ACLK(aclk),
    .ARESETN(aresetn),
    .USER_datain(sig_nfa_accept_samples_generic_hw_nfa_initials_buckets_datain),
    .USER_dataout(sig_nfa_accept_samples_generic_hw_nfa_initials_buckets_dataout),
    .USER_address(sig_nfa_accept_samples_generic_hw_nfa_initials_buckets_address),
    .USER_size(sig_nfa_accept_samples_generic_hw_nfa_initials_buckets_size),
    .USER_req_din(sig_nfa_accept_samples_generic_hw_nfa_initials_buckets_req_din),
    .USER_req_full_n(sig_nfa_accept_samples_generic_hw_nfa_initials_buckets_req_full_n),
    .USER_req_write(sig_nfa_accept_samples_generic_hw_nfa_initials_buckets_req_write),
    .USER_rsp_empty_n(sig_nfa_accept_samples_generic_hw_nfa_initials_buckets_rsp_empty_n),
    .USER_rsp_read(sig_nfa_accept_samples_generic_hw_nfa_initials_buckets_rsp_read),
    .AWID(m_axi_nfa_initials_buckets_AWID),
    .AWADDR(m_axi_nfa_initials_buckets_AWADDR),
    .AWLEN(m_axi_nfa_initials_buckets_AWLEN),
    .AWSIZE(m_axi_nfa_initials_buckets_AWSIZE),
    .AWBURST(m_axi_nfa_initials_buckets_AWBURST),
    .AWLOCK(m_axi_nfa_initials_buckets_AWLOCK),
    .AWCACHE(m_axi_nfa_initials_buckets_AWCACHE),
    .AWPROT(m_axi_nfa_initials_buckets_AWPROT),
    .AWQOS(m_axi_nfa_initials_buckets_AWQOS),
    .AWUSER(m_axi_nfa_initials_buckets_AWUSER),
    .AWVALID(m_axi_nfa_initials_buckets_AWVALID),
    .AWREADY(m_axi_nfa_initials_buckets_AWREADY),
    .WDATA(m_axi_nfa_initials_buckets_WDATA),
    .WSTRB(m_axi_nfa_initials_buckets_WSTRB),
    .WLAST(m_axi_nfa_initials_buckets_WLAST),
    .WUSER(m_axi_nfa_initials_buckets_WUSER),
    .WVALID(m_axi_nfa_initials_buckets_WVALID),
    .WREADY(m_axi_nfa_initials_buckets_WREADY),
    .BID(m_axi_nfa_initials_buckets_BID),
    .BRESP(m_axi_nfa_initials_buckets_BRESP),
    .BUSER(m_axi_nfa_initials_buckets_BUSER),
    .BVALID(m_axi_nfa_initials_buckets_BVALID),
    .BREADY(m_axi_nfa_initials_buckets_BREADY),
    .ARID(m_axi_nfa_initials_buckets_ARID),
    .ARADDR(m_axi_nfa_initials_buckets_ARADDR),
    .ARLEN(m_axi_nfa_initials_buckets_ARLEN),
    .ARSIZE(m_axi_nfa_initials_buckets_ARSIZE),
    .ARBURST(m_axi_nfa_initials_buckets_ARBURST),
    .ARLOCK(m_axi_nfa_initials_buckets_ARLOCK),
    .ARCACHE(m_axi_nfa_initials_buckets_ARCACHE),
    .ARPROT(m_axi_nfa_initials_buckets_ARPROT),
    .ARQOS(m_axi_nfa_initials_buckets_ARQOS),
    .ARUSER(m_axi_nfa_initials_buckets_ARUSER),
    .ARVALID(m_axi_nfa_initials_buckets_ARVALID),
    .ARREADY(m_axi_nfa_initials_buckets_ARREADY),
    .RID(m_axi_nfa_initials_buckets_RID),
    .RDATA(m_axi_nfa_initials_buckets_RDATA),
    .RRESP(m_axi_nfa_initials_buckets_RRESP),
    .RLAST(m_axi_nfa_initials_buckets_RLAST),
    .RUSER(m_axi_nfa_initials_buckets_RUSER),
    .RVALID(m_axi_nfa_initials_buckets_RVALID),
    .RREADY(m_axi_nfa_initials_buckets_RREADY));

nfa_accept_samples_generic_hw_nfa_finals_buckets_if #(
    .C_ID_WIDTH(C_M_AXI_NFA_FINALS_BUCKETS_ID_WIDTH),
    .C_ADDR_WIDTH(C_M_AXI_NFA_FINALS_BUCKETS_ADDR_WIDTH),
    .C_DATA_WIDTH(C_M_AXI_NFA_FINALS_BUCKETS_DATA_WIDTH),
    .C_AWUSER_WIDTH(C_M_AXI_NFA_FINALS_BUCKETS_AWUSER_WIDTH),
    .C_ARUSER_WIDTH(C_M_AXI_NFA_FINALS_BUCKETS_ARUSER_WIDTH),
    .C_WUSER_WIDTH(C_M_AXI_NFA_FINALS_BUCKETS_WUSER_WIDTH),
    .C_RUSER_WIDTH(C_M_AXI_NFA_FINALS_BUCKETS_RUSER_WIDTH),
    .C_BUSER_WIDTH(C_M_AXI_NFA_FINALS_BUCKETS_BUSER_WIDTH),
    .C_USER_DATA_WIDTH(C_M_AXI_NFA_FINALS_BUCKETS_USER_DATA_WIDTH),
    .C_TARGET_ADDR(C_M_AXI_NFA_FINALS_BUCKETS_TARGET_ADDR),
    .C_USER_VALUE(C_M_AXI_NFA_FINALS_BUCKETS_USER_VALUE),
    .C_PROT_VALUE(C_M_AXI_NFA_FINALS_BUCKETS_PROT_VALUE),
    .C_CACHE_VALUE(C_M_AXI_NFA_FINALS_BUCKETS_CACHE_VALUE))
nfa_accept_samples_generic_hw_nfa_finals_buckets_if_U(
    .ACLK(aclk),
    .ARESETN(aresetn),
    .USER_datain(sig_nfa_accept_samples_generic_hw_nfa_finals_buckets_datain),
    .USER_dataout(sig_nfa_accept_samples_generic_hw_nfa_finals_buckets_dataout),
    .USER_address(sig_nfa_accept_samples_generic_hw_nfa_finals_buckets_address),
    .USER_size(sig_nfa_accept_samples_generic_hw_nfa_finals_buckets_size),
    .USER_req_din(sig_nfa_accept_samples_generic_hw_nfa_finals_buckets_req_din),
    .USER_req_full_n(sig_nfa_accept_samples_generic_hw_nfa_finals_buckets_req_full_n),
    .USER_req_write(sig_nfa_accept_samples_generic_hw_nfa_finals_buckets_req_write),
    .USER_rsp_empty_n(sig_nfa_accept_samples_generic_hw_nfa_finals_buckets_rsp_empty_n),
    .USER_rsp_read(sig_nfa_accept_samples_generic_hw_nfa_finals_buckets_rsp_read),
    .AWID(m_axi_nfa_finals_buckets_AWID),
    .AWADDR(m_axi_nfa_finals_buckets_AWADDR),
    .AWLEN(m_axi_nfa_finals_buckets_AWLEN),
    .AWSIZE(m_axi_nfa_finals_buckets_AWSIZE),
    .AWBURST(m_axi_nfa_finals_buckets_AWBURST),
    .AWLOCK(m_axi_nfa_finals_buckets_AWLOCK),
    .AWCACHE(m_axi_nfa_finals_buckets_AWCACHE),
    .AWPROT(m_axi_nfa_finals_buckets_AWPROT),
    .AWQOS(m_axi_nfa_finals_buckets_AWQOS),
    .AWUSER(m_axi_nfa_finals_buckets_AWUSER),
    .AWVALID(m_axi_nfa_finals_buckets_AWVALID),
    .AWREADY(m_axi_nfa_finals_buckets_AWREADY),
    .WDATA(m_axi_nfa_finals_buckets_WDATA),
    .WSTRB(m_axi_nfa_finals_buckets_WSTRB),
    .WLAST(m_axi_nfa_finals_buckets_WLAST),
    .WUSER(m_axi_nfa_finals_buckets_WUSER),
    .WVALID(m_axi_nfa_finals_buckets_WVALID),
    .WREADY(m_axi_nfa_finals_buckets_WREADY),
    .BID(m_axi_nfa_finals_buckets_BID),
    .BRESP(m_axi_nfa_finals_buckets_BRESP),
    .BUSER(m_axi_nfa_finals_buckets_BUSER),
    .BVALID(m_axi_nfa_finals_buckets_BVALID),
    .BREADY(m_axi_nfa_finals_buckets_BREADY),
    .ARID(m_axi_nfa_finals_buckets_ARID),
    .ARADDR(m_axi_nfa_finals_buckets_ARADDR),
    .ARLEN(m_axi_nfa_finals_buckets_ARLEN),
    .ARSIZE(m_axi_nfa_finals_buckets_ARSIZE),
    .ARBURST(m_axi_nfa_finals_buckets_ARBURST),
    .ARLOCK(m_axi_nfa_finals_buckets_ARLOCK),
    .ARCACHE(m_axi_nfa_finals_buckets_ARCACHE),
    .ARPROT(m_axi_nfa_finals_buckets_ARPROT),
    .ARQOS(m_axi_nfa_finals_buckets_ARQOS),
    .ARUSER(m_axi_nfa_finals_buckets_ARUSER),
    .ARVALID(m_axi_nfa_finals_buckets_ARVALID),
    .ARREADY(m_axi_nfa_finals_buckets_ARREADY),
    .RID(m_axi_nfa_finals_buckets_RID),
    .RDATA(m_axi_nfa_finals_buckets_RDATA),
    .RRESP(m_axi_nfa_finals_buckets_RRESP),
    .RLAST(m_axi_nfa_finals_buckets_RLAST),
    .RUSER(m_axi_nfa_finals_buckets_RUSER),
    .RVALID(m_axi_nfa_finals_buckets_RVALID),
    .RREADY(m_axi_nfa_finals_buckets_RREADY));

nfa_accept_samples_generic_hw_nfa_forward_buckets_if #(
    .C_ID_WIDTH(C_M_AXI_NFA_FORWARD_BUCKETS_ID_WIDTH),
    .C_ADDR_WIDTH(C_M_AXI_NFA_FORWARD_BUCKETS_ADDR_WIDTH),
    .C_DATA_WIDTH(C_M_AXI_NFA_FORWARD_BUCKETS_DATA_WIDTH),
    .C_AWUSER_WIDTH(C_M_AXI_NFA_FORWARD_BUCKETS_AWUSER_WIDTH),
    .C_ARUSER_WIDTH(C_M_AXI_NFA_FORWARD_BUCKETS_ARUSER_WIDTH),
    .C_WUSER_WIDTH(C_M_AXI_NFA_FORWARD_BUCKETS_WUSER_WIDTH),
    .C_RUSER_WIDTH(C_M_AXI_NFA_FORWARD_BUCKETS_RUSER_WIDTH),
    .C_BUSER_WIDTH(C_M_AXI_NFA_FORWARD_BUCKETS_BUSER_WIDTH),
    .C_USER_DATA_WIDTH(C_M_AXI_NFA_FORWARD_BUCKETS_USER_DATA_WIDTH),
    .C_TARGET_ADDR(C_M_AXI_NFA_FORWARD_BUCKETS_TARGET_ADDR),
    .C_USER_VALUE(C_M_AXI_NFA_FORWARD_BUCKETS_USER_VALUE),
    .C_PROT_VALUE(C_M_AXI_NFA_FORWARD_BUCKETS_PROT_VALUE),
    .C_CACHE_VALUE(C_M_AXI_NFA_FORWARD_BUCKETS_CACHE_VALUE))
nfa_accept_samples_generic_hw_nfa_forward_buckets_if_U(
    .ACLK(aclk),
    .ARESETN(aresetn),
    .USER_datain(sig_nfa_accept_samples_generic_hw_nfa_forward_buckets_datain),
    .USER_dataout(sig_nfa_accept_samples_generic_hw_nfa_forward_buckets_dataout),
    .USER_address(sig_nfa_accept_samples_generic_hw_nfa_forward_buckets_address),
    .USER_size(sig_nfa_accept_samples_generic_hw_nfa_forward_buckets_size),
    .USER_req_din(sig_nfa_accept_samples_generic_hw_nfa_forward_buckets_req_din),
    .USER_req_full_n(sig_nfa_accept_samples_generic_hw_nfa_forward_buckets_req_full_n),
    .USER_req_write(sig_nfa_accept_samples_generic_hw_nfa_forward_buckets_req_write),
    .USER_rsp_empty_n(sig_nfa_accept_samples_generic_hw_nfa_forward_buckets_rsp_empty_n),
    .USER_rsp_read(sig_nfa_accept_samples_generic_hw_nfa_forward_buckets_rsp_read),
    .AWID(m_axi_nfa_forward_buckets_AWID),
    .AWADDR(m_axi_nfa_forward_buckets_AWADDR),
    .AWLEN(m_axi_nfa_forward_buckets_AWLEN),
    .AWSIZE(m_axi_nfa_forward_buckets_AWSIZE),
    .AWBURST(m_axi_nfa_forward_buckets_AWBURST),
    .AWLOCK(m_axi_nfa_forward_buckets_AWLOCK),
    .AWCACHE(m_axi_nfa_forward_buckets_AWCACHE),
    .AWPROT(m_axi_nfa_forward_buckets_AWPROT),
    .AWQOS(m_axi_nfa_forward_buckets_AWQOS),
    .AWUSER(m_axi_nfa_forward_buckets_AWUSER),
    .AWVALID(m_axi_nfa_forward_buckets_AWVALID),
    .AWREADY(m_axi_nfa_forward_buckets_AWREADY),
    .WDATA(m_axi_nfa_forward_buckets_WDATA),
    .WSTRB(m_axi_nfa_forward_buckets_WSTRB),
    .WLAST(m_axi_nfa_forward_buckets_WLAST),
    .WUSER(m_axi_nfa_forward_buckets_WUSER),
    .WVALID(m_axi_nfa_forward_buckets_WVALID),
    .WREADY(m_axi_nfa_forward_buckets_WREADY),
    .BID(m_axi_nfa_forward_buckets_BID),
    .BRESP(m_axi_nfa_forward_buckets_BRESP),
    .BUSER(m_axi_nfa_forward_buckets_BUSER),
    .BVALID(m_axi_nfa_forward_buckets_BVALID),
    .BREADY(m_axi_nfa_forward_buckets_BREADY),
    .ARID(m_axi_nfa_forward_buckets_ARID),
    .ARADDR(m_axi_nfa_forward_buckets_ARADDR),
    .ARLEN(m_axi_nfa_forward_buckets_ARLEN),
    .ARSIZE(m_axi_nfa_forward_buckets_ARSIZE),
    .ARBURST(m_axi_nfa_forward_buckets_ARBURST),
    .ARLOCK(m_axi_nfa_forward_buckets_ARLOCK),
    .ARCACHE(m_axi_nfa_forward_buckets_ARCACHE),
    .ARPROT(m_axi_nfa_forward_buckets_ARPROT),
    .ARQOS(m_axi_nfa_forward_buckets_ARQOS),
    .ARUSER(m_axi_nfa_forward_buckets_ARUSER),
    .ARVALID(m_axi_nfa_forward_buckets_ARVALID),
    .ARREADY(m_axi_nfa_forward_buckets_ARREADY),
    .RID(m_axi_nfa_forward_buckets_RID),
    .RDATA(m_axi_nfa_forward_buckets_RDATA),
    .RRESP(m_axi_nfa_forward_buckets_RRESP),
    .RLAST(m_axi_nfa_forward_buckets_RLAST),
    .RUSER(m_axi_nfa_forward_buckets_RUSER),
    .RVALID(m_axi_nfa_forward_buckets_RVALID),
    .RREADY(m_axi_nfa_forward_buckets_RREADY));

nfa_accept_samples_generic_hw_sample_buffer_if #(
    .C_ID_WIDTH(C_M_AXI_SAMPLE_BUFFER_ID_WIDTH),
    .C_ADDR_WIDTH(C_M_AXI_SAMPLE_BUFFER_ADDR_WIDTH),
    .C_DATA_WIDTH(C_M_AXI_SAMPLE_BUFFER_DATA_WIDTH),
    .C_AWUSER_WIDTH(C_M_AXI_SAMPLE_BUFFER_AWUSER_WIDTH),
    .C_ARUSER_WIDTH(C_M_AXI_SAMPLE_BUFFER_ARUSER_WIDTH),
    .C_WUSER_WIDTH(C_M_AXI_SAMPLE_BUFFER_WUSER_WIDTH),
    .C_RUSER_WIDTH(C_M_AXI_SAMPLE_BUFFER_RUSER_WIDTH),
    .C_BUSER_WIDTH(C_M_AXI_SAMPLE_BUFFER_BUSER_WIDTH),
    .C_USER_DATA_WIDTH(C_M_AXI_SAMPLE_BUFFER_USER_DATA_WIDTH),
    .C_TARGET_ADDR(C_M_AXI_SAMPLE_BUFFER_TARGET_ADDR),
    .C_USER_VALUE(C_M_AXI_SAMPLE_BUFFER_USER_VALUE),
    .C_PROT_VALUE(C_M_AXI_SAMPLE_BUFFER_PROT_VALUE),
    .C_CACHE_VALUE(C_M_AXI_SAMPLE_BUFFER_CACHE_VALUE))
nfa_accept_samples_generic_hw_sample_buffer_if_U(
    .ACLK(aclk),
    .ARESETN(aresetn),
    .USER_datain(sig_nfa_accept_samples_generic_hw_sample_buffer_datain),
    .USER_dataout(sig_nfa_accept_samples_generic_hw_sample_buffer_dataout),
    .USER_address(sig_nfa_accept_samples_generic_hw_sample_buffer_address),
    .USER_size(sig_nfa_accept_samples_generic_hw_sample_buffer_size),
    .USER_req_din(sig_nfa_accept_samples_generic_hw_sample_buffer_req_din),
    .USER_req_full_n(sig_nfa_accept_samples_generic_hw_sample_buffer_req_full_n),
    .USER_req_write(sig_nfa_accept_samples_generic_hw_sample_buffer_req_write),
    .USER_rsp_empty_n(sig_nfa_accept_samples_generic_hw_sample_buffer_rsp_empty_n),
    .USER_rsp_read(sig_nfa_accept_samples_generic_hw_sample_buffer_rsp_read),
    .AWID(m_axi_sample_buffer_AWID),
    .AWADDR(m_axi_sample_buffer_AWADDR),
    .AWLEN(m_axi_sample_buffer_AWLEN),
    .AWSIZE(m_axi_sample_buffer_AWSIZE),
    .AWBURST(m_axi_sample_buffer_AWBURST),
    .AWLOCK(m_axi_sample_buffer_AWLOCK),
    .AWCACHE(m_axi_sample_buffer_AWCACHE),
    .AWPROT(m_axi_sample_buffer_AWPROT),
    .AWQOS(m_axi_sample_buffer_AWQOS),
    .AWUSER(m_axi_sample_buffer_AWUSER),
    .AWVALID(m_axi_sample_buffer_AWVALID),
    .AWREADY(m_axi_sample_buffer_AWREADY),
    .WDATA(m_axi_sample_buffer_WDATA),
    .WSTRB(m_axi_sample_buffer_WSTRB),
    .WLAST(m_axi_sample_buffer_WLAST),
    .WUSER(m_axi_sample_buffer_WUSER),
    .WVALID(m_axi_sample_buffer_WVALID),
    .WREADY(m_axi_sample_buffer_WREADY),
    .BID(m_axi_sample_buffer_BID),
    .BRESP(m_axi_sample_buffer_BRESP),
    .BUSER(m_axi_sample_buffer_BUSER),
    .BVALID(m_axi_sample_buffer_BVALID),
    .BREADY(m_axi_sample_buffer_BREADY),
    .ARID(m_axi_sample_buffer_ARID),
    .ARADDR(m_axi_sample_buffer_ARADDR),
    .ARLEN(m_axi_sample_buffer_ARLEN),
    .ARSIZE(m_axi_sample_buffer_ARSIZE),
    .ARBURST(m_axi_sample_buffer_ARBURST),
    .ARLOCK(m_axi_sample_buffer_ARLOCK),
    .ARCACHE(m_axi_sample_buffer_ARCACHE),
    .ARPROT(m_axi_sample_buffer_ARPROT),
    .ARQOS(m_axi_sample_buffer_ARQOS),
    .ARUSER(m_axi_sample_buffer_ARUSER),
    .ARVALID(m_axi_sample_buffer_ARVALID),
    .ARREADY(m_axi_sample_buffer_ARREADY),
    .RID(m_axi_sample_buffer_RID),
    .RDATA(m_axi_sample_buffer_RDATA),
    .RRESP(m_axi_sample_buffer_RRESP),
    .RLAST(m_axi_sample_buffer_RLAST),
    .RUSER(m_axi_sample_buffer_RUSER),
    .RVALID(m_axi_sample_buffer_RVALID),
    .RREADY(m_axi_sample_buffer_RREADY));

nfa_accept_samples_generic_hw_indices_begin_if #(
    .C_ID_WIDTH(C_M_AXI_INDICES_BEGIN_ID_WIDTH),
    .C_ADDR_WIDTH(C_M_AXI_INDICES_BEGIN_ADDR_WIDTH),
    .C_DATA_WIDTH(C_M_AXI_INDICES_BEGIN_DATA_WIDTH),
    .C_AWUSER_WIDTH(C_M_AXI_INDICES_BEGIN_AWUSER_WIDTH),
    .C_ARUSER_WIDTH(C_M_AXI_INDICES_BEGIN_ARUSER_WIDTH),
    .C_WUSER_WIDTH(C_M_AXI_INDICES_BEGIN_WUSER_WIDTH),
    .C_RUSER_WIDTH(C_M_AXI_INDICES_BEGIN_RUSER_WIDTH),
    .C_BUSER_WIDTH(C_M_AXI_INDICES_BEGIN_BUSER_WIDTH),
    .C_USER_DATA_WIDTH(C_M_AXI_INDICES_BEGIN_USER_DATA_WIDTH),
    .C_TARGET_ADDR(C_M_AXI_INDICES_BEGIN_TARGET_ADDR),
    .C_USER_VALUE(C_M_AXI_INDICES_BEGIN_USER_VALUE),
    .C_PROT_VALUE(C_M_AXI_INDICES_BEGIN_PROT_VALUE),
    .C_CACHE_VALUE(C_M_AXI_INDICES_BEGIN_CACHE_VALUE))
nfa_accept_samples_generic_hw_indices_begin_if_U(
    .ACLK(aclk),
    .ARESETN(aresetn),
    .USER_datain(sig_nfa_accept_samples_generic_hw_indices_begin_datain),
    .USER_dataout(sig_nfa_accept_samples_generic_hw_indices_begin_dataout),
    .USER_address(sig_nfa_accept_samples_generic_hw_indices_begin_address),
    .USER_size(sig_nfa_accept_samples_generic_hw_indices_begin_size),
    .USER_req_din(sig_nfa_accept_samples_generic_hw_indices_begin_req_din),
    .USER_req_full_n(sig_nfa_accept_samples_generic_hw_indices_begin_req_full_n),
    .USER_req_write(sig_nfa_accept_samples_generic_hw_indices_begin_req_write),
    .USER_rsp_empty_n(sig_nfa_accept_samples_generic_hw_indices_begin_rsp_empty_n),
    .USER_rsp_read(sig_nfa_accept_samples_generic_hw_indices_begin_rsp_read),
    .AWID(m_axi_indices_begin_AWID),
    .AWADDR(m_axi_indices_begin_AWADDR),
    .AWLEN(m_axi_indices_begin_AWLEN),
    .AWSIZE(m_axi_indices_begin_AWSIZE),
    .AWBURST(m_axi_indices_begin_AWBURST),
    .AWLOCK(m_axi_indices_begin_AWLOCK),
    .AWCACHE(m_axi_indices_begin_AWCACHE),
    .AWPROT(m_axi_indices_begin_AWPROT),
    .AWQOS(m_axi_indices_begin_AWQOS),
    .AWUSER(m_axi_indices_begin_AWUSER),
    .AWVALID(m_axi_indices_begin_AWVALID),
    .AWREADY(m_axi_indices_begin_AWREADY),
    .WDATA(m_axi_indices_begin_WDATA),
    .WSTRB(m_axi_indices_begin_WSTRB),
    .WLAST(m_axi_indices_begin_WLAST),
    .WUSER(m_axi_indices_begin_WUSER),
    .WVALID(m_axi_indices_begin_WVALID),
    .WREADY(m_axi_indices_begin_WREADY),
    .BID(m_axi_indices_begin_BID),
    .BRESP(m_axi_indices_begin_BRESP),
    .BUSER(m_axi_indices_begin_BUSER),
    .BVALID(m_axi_indices_begin_BVALID),
    .BREADY(m_axi_indices_begin_BREADY),
    .ARID(m_axi_indices_begin_ARID),
    .ARADDR(m_axi_indices_begin_ARADDR),
    .ARLEN(m_axi_indices_begin_ARLEN),
    .ARSIZE(m_axi_indices_begin_ARSIZE),
    .ARBURST(m_axi_indices_begin_ARBURST),
    .ARLOCK(m_axi_indices_begin_ARLOCK),
    .ARCACHE(m_axi_indices_begin_ARCACHE),
    .ARPROT(m_axi_indices_begin_ARPROT),
    .ARQOS(m_axi_indices_begin_ARQOS),
    .ARUSER(m_axi_indices_begin_ARUSER),
    .ARVALID(m_axi_indices_begin_ARVALID),
    .ARREADY(m_axi_indices_begin_ARREADY),
    .RID(m_axi_indices_begin_RID),
    .RDATA(m_axi_indices_begin_RDATA),
    .RRESP(m_axi_indices_begin_RRESP),
    .RLAST(m_axi_indices_begin_RLAST),
    .RUSER(m_axi_indices_begin_RUSER),
    .RVALID(m_axi_indices_begin_RVALID),
    .RREADY(m_axi_indices_begin_RREADY));

nfa_accept_samples_generic_hw_indices_samples_if #(
    .C_ID_WIDTH(C_M_AXI_INDICES_SAMPLES_ID_WIDTH),
    .C_ADDR_WIDTH(C_M_AXI_INDICES_SAMPLES_ADDR_WIDTH),
    .C_DATA_WIDTH(C_M_AXI_INDICES_SAMPLES_DATA_WIDTH),
    .C_AWUSER_WIDTH(C_M_AXI_INDICES_SAMPLES_AWUSER_WIDTH),
    .C_ARUSER_WIDTH(C_M_AXI_INDICES_SAMPLES_ARUSER_WIDTH),
    .C_WUSER_WIDTH(C_M_AXI_INDICES_SAMPLES_WUSER_WIDTH),
    .C_RUSER_WIDTH(C_M_AXI_INDICES_SAMPLES_RUSER_WIDTH),
    .C_BUSER_WIDTH(C_M_AXI_INDICES_SAMPLES_BUSER_WIDTH),
    .C_USER_DATA_WIDTH(C_M_AXI_INDICES_SAMPLES_USER_DATA_WIDTH),
    .C_TARGET_ADDR(C_M_AXI_INDICES_SAMPLES_TARGET_ADDR),
    .C_USER_VALUE(C_M_AXI_INDICES_SAMPLES_USER_VALUE),
    .C_PROT_VALUE(C_M_AXI_INDICES_SAMPLES_PROT_VALUE),
    .C_CACHE_VALUE(C_M_AXI_INDICES_SAMPLES_CACHE_VALUE))
nfa_accept_samples_generic_hw_indices_samples_if_U(
    .ACLK(aclk),
    .ARESETN(aresetn),
    .USER_datain(sig_nfa_accept_samples_generic_hw_indices_samples_datain),
    .USER_dataout(sig_nfa_accept_samples_generic_hw_indices_samples_dataout),
    .USER_address(sig_nfa_accept_samples_generic_hw_indices_samples_address),
    .USER_size(sig_nfa_accept_samples_generic_hw_indices_samples_size),
    .USER_req_din(sig_nfa_accept_samples_generic_hw_indices_samples_req_din),
    .USER_req_full_n(sig_nfa_accept_samples_generic_hw_indices_samples_req_full_n),
    .USER_req_write(sig_nfa_accept_samples_generic_hw_indices_samples_req_write),
    .USER_rsp_empty_n(sig_nfa_accept_samples_generic_hw_indices_samples_rsp_empty_n),
    .USER_rsp_read(sig_nfa_accept_samples_generic_hw_indices_samples_rsp_read),
    .AWID(m_axi_indices_samples_AWID),
    .AWADDR(m_axi_indices_samples_AWADDR),
    .AWLEN(m_axi_indices_samples_AWLEN),
    .AWSIZE(m_axi_indices_samples_AWSIZE),
    .AWBURST(m_axi_indices_samples_AWBURST),
    .AWLOCK(m_axi_indices_samples_AWLOCK),
    .AWCACHE(m_axi_indices_samples_AWCACHE),
    .AWPROT(m_axi_indices_samples_AWPROT),
    .AWQOS(m_axi_indices_samples_AWQOS),
    .AWUSER(m_axi_indices_samples_AWUSER),
    .AWVALID(m_axi_indices_samples_AWVALID),
    .AWREADY(m_axi_indices_samples_AWREADY),
    .WDATA(m_axi_indices_samples_WDATA),
    .WSTRB(m_axi_indices_samples_WSTRB),
    .WLAST(m_axi_indices_samples_WLAST),
    .WUSER(m_axi_indices_samples_WUSER),
    .WVALID(m_axi_indices_samples_WVALID),
    .WREADY(m_axi_indices_samples_WREADY),
    .BID(m_axi_indices_samples_BID),
    .BRESP(m_axi_indices_samples_BRESP),
    .BUSER(m_axi_indices_samples_BUSER),
    .BVALID(m_axi_indices_samples_BVALID),
    .BREADY(m_axi_indices_samples_BREADY),
    .ARID(m_axi_indices_samples_ARID),
    .ARADDR(m_axi_indices_samples_ARADDR),
    .ARLEN(m_axi_indices_samples_ARLEN),
    .ARSIZE(m_axi_indices_samples_ARSIZE),
    .ARBURST(m_axi_indices_samples_ARBURST),
    .ARLOCK(m_axi_indices_samples_ARLOCK),
    .ARCACHE(m_axi_indices_samples_ARCACHE),
    .ARPROT(m_axi_indices_samples_ARPROT),
    .ARQOS(m_axi_indices_samples_ARQOS),
    .ARUSER(m_axi_indices_samples_ARUSER),
    .ARVALID(m_axi_indices_samples_ARVALID),
    .ARREADY(m_axi_indices_samples_ARREADY),
    .RID(m_axi_indices_samples_RID),
    .RDATA(m_axi_indices_samples_RDATA),
    .RRESP(m_axi_indices_samples_RRESP),
    .RLAST(m_axi_indices_samples_RLAST),
    .RUSER(m_axi_indices_samples_RUSER),
    .RVALID(m_axi_indices_samples_RVALID),
    .RREADY(m_axi_indices_samples_RREADY));

nfa_accept_samples_generic_hw_indices_stride_if #(
    .C_ID_WIDTH(C_M_AXI_INDICES_STRIDE_ID_WIDTH),
    .C_ADDR_WIDTH(C_M_AXI_INDICES_STRIDE_ADDR_WIDTH),
    .C_DATA_WIDTH(C_M_AXI_INDICES_STRIDE_DATA_WIDTH),
    .C_AWUSER_WIDTH(C_M_AXI_INDICES_STRIDE_AWUSER_WIDTH),
    .C_ARUSER_WIDTH(C_M_AXI_INDICES_STRIDE_ARUSER_WIDTH),
    .C_WUSER_WIDTH(C_M_AXI_INDICES_STRIDE_WUSER_WIDTH),
    .C_RUSER_WIDTH(C_M_AXI_INDICES_STRIDE_RUSER_WIDTH),
    .C_BUSER_WIDTH(C_M_AXI_INDICES_STRIDE_BUSER_WIDTH),
    .C_USER_DATA_WIDTH(C_M_AXI_INDICES_STRIDE_USER_DATA_WIDTH),
    .C_TARGET_ADDR(C_M_AXI_INDICES_STRIDE_TARGET_ADDR),
    .C_USER_VALUE(C_M_AXI_INDICES_STRIDE_USER_VALUE),
    .C_PROT_VALUE(C_M_AXI_INDICES_STRIDE_PROT_VALUE),
    .C_CACHE_VALUE(C_M_AXI_INDICES_STRIDE_CACHE_VALUE))
nfa_accept_samples_generic_hw_indices_stride_if_U(
    .ACLK(aclk),
    .ARESETN(aresetn),
    .USER_datain(sig_nfa_accept_samples_generic_hw_indices_stride_datain),
    .USER_dataout(sig_nfa_accept_samples_generic_hw_indices_stride_dataout),
    .USER_address(sig_nfa_accept_samples_generic_hw_indices_stride_address),
    .USER_size(sig_nfa_accept_samples_generic_hw_indices_stride_size),
    .USER_req_din(sig_nfa_accept_samples_generic_hw_indices_stride_req_din),
    .USER_req_full_n(sig_nfa_accept_samples_generic_hw_indices_stride_req_full_n),
    .USER_req_write(sig_nfa_accept_samples_generic_hw_indices_stride_req_write),
    .USER_rsp_empty_n(sig_nfa_accept_samples_generic_hw_indices_stride_rsp_empty_n),
    .USER_rsp_read(sig_nfa_accept_samples_generic_hw_indices_stride_rsp_read),
    .AWID(m_axi_indices_stride_AWID),
    .AWADDR(m_axi_indices_stride_AWADDR),
    .AWLEN(m_axi_indices_stride_AWLEN),
    .AWSIZE(m_axi_indices_stride_AWSIZE),
    .AWBURST(m_axi_indices_stride_AWBURST),
    .AWLOCK(m_axi_indices_stride_AWLOCK),
    .AWCACHE(m_axi_indices_stride_AWCACHE),
    .AWPROT(m_axi_indices_stride_AWPROT),
    .AWQOS(m_axi_indices_stride_AWQOS),
    .AWUSER(m_axi_indices_stride_AWUSER),
    .AWVALID(m_axi_indices_stride_AWVALID),
    .AWREADY(m_axi_indices_stride_AWREADY),
    .WDATA(m_axi_indices_stride_WDATA),
    .WSTRB(m_axi_indices_stride_WSTRB),
    .WLAST(m_axi_indices_stride_WLAST),
    .WUSER(m_axi_indices_stride_WUSER),
    .WVALID(m_axi_indices_stride_WVALID),
    .WREADY(m_axi_indices_stride_WREADY),
    .BID(m_axi_indices_stride_BID),
    .BRESP(m_axi_indices_stride_BRESP),
    .BUSER(m_axi_indices_stride_BUSER),
    .BVALID(m_axi_indices_stride_BVALID),
    .BREADY(m_axi_indices_stride_BREADY),
    .ARID(m_axi_indices_stride_ARID),
    .ARADDR(m_axi_indices_stride_ARADDR),
    .ARLEN(m_axi_indices_stride_ARLEN),
    .ARSIZE(m_axi_indices_stride_ARSIZE),
    .ARBURST(m_axi_indices_stride_ARBURST),
    .ARLOCK(m_axi_indices_stride_ARLOCK),
    .ARCACHE(m_axi_indices_stride_ARCACHE),
    .ARPROT(m_axi_indices_stride_ARPROT),
    .ARQOS(m_axi_indices_stride_ARQOS),
    .ARUSER(m_axi_indices_stride_ARUSER),
    .ARVALID(m_axi_indices_stride_ARVALID),
    .ARREADY(m_axi_indices_stride_ARREADY),
    .RID(m_axi_indices_stride_RID),
    .RDATA(m_axi_indices_stride_RDATA),
    .RRESP(m_axi_indices_stride_RRESP),
    .RLAST(m_axi_indices_stride_RLAST),
    .RUSER(m_axi_indices_stride_RUSER),
    .RVALID(m_axi_indices_stride_RVALID),
    .RREADY(m_axi_indices_stride_RREADY));

nfa_accept_samples_generic_hw_slv0_if #(
    .C_ADDR_WIDTH(C_S_AXI_SLV0_ADDR_WIDTH),
    .C_DATA_WIDTH(C_S_AXI_SLV0_DATA_WIDTH))
nfa_accept_samples_generic_hw_slv0_if_U(
    .ACLK(aclk),
    .ARESETN(aresetn),
    .I_nfa_symbols(sig_nfa_accept_samples_generic_hw_nfa_symbols),
    .I_sample_buffer_length(sig_nfa_accept_samples_generic_hw_sample_buffer_length),
    .I_sample_length(sig_nfa_accept_samples_generic_hw_sample_length),
    .I_i_size(sig_nfa_accept_samples_generic_hw_i_size),
    .I_begin_index(sig_nfa_accept_samples_generic_hw_begin_index),
    .I_begin_sample(sig_nfa_accept_samples_generic_hw_begin_sample),
    .I_end_index(sig_nfa_accept_samples_generic_hw_end_index),
    .I_end_sample(sig_nfa_accept_samples_generic_hw_end_sample),
    .I_stop_on_first(sig_nfa_accept_samples_generic_hw_stop_on_first),
    .I_accept(sig_nfa_accept_samples_generic_hw_accept),
    .I_ap_start(sig_nfa_accept_samples_generic_hw_ap_start),
    .O_ap_ready(sig_nfa_accept_samples_generic_hw_ap_ready),
    .O_ap_done(sig_nfa_accept_samples_generic_hw_ap_done),
    .O_ap_idle(sig_nfa_accept_samples_generic_hw_ap_idle),
    .O_ap_return(sig_nfa_accept_samples_generic_hw_ap_return),
    .AWADDR(s_axi_slv0_AWADDR),
    .AWVALID(s_axi_slv0_AWVALID),
    .AWREADY(s_axi_slv0_AWREADY),
    .WDATA(s_axi_slv0_WDATA),
    .WSTRB(s_axi_slv0_WSTRB),
    .WVALID(s_axi_slv0_WVALID),
    .WREADY(s_axi_slv0_WREADY),
    .BRESP(s_axi_slv0_BRESP),
    .BVALID(s_axi_slv0_BVALID),
    .BREADY(s_axi_slv0_BREADY),
    .ARADDR(s_axi_slv0_ARADDR),
    .ARVALID(s_axi_slv0_ARVALID),
    .ARREADY(s_axi_slv0_ARREADY),
    .RDATA(s_axi_slv0_RDATA),
    .RRESP(s_axi_slv0_RRESP),
    .RVALID(s_axi_slv0_RVALID),
    .RREADY(s_axi_slv0_RREADY),
    .interrupt(interrupt));

nfa_accept_samples_generic_hw_ap_rst_if #(
    .RESET_ACTIVE_LOW(RESET_ACTIVE_LOW))
ap_rst_if_U(
    .dout(sig_nfa_accept_samples_generic_hw_ap_rst),
    .din(aresetn));

endmodule
